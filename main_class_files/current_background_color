addgallery.class.php:     static  $show_more=1000; $show_more++; //echo 'show more is '.$this->show_more;
addgallery.class.php:                    $this->pic_start=true;
addgallerypiccore.class.php:    $this->show_more('Upload Filesize Limit: '.$max_upload.'Mb','','info pt5 pb5 pl10 floatleft');
addgallerypiccore.class.php:		$this->show_close(); 
addgallerypiccore.class.php:          $this->show_more('Add a Watermark','','left info','Use a Watermark Image to be programmatically blended to your Uploaded Image. Watermarks are a means to prevent images from being downloaded and used by others, by merging your image with a transparent  watermark  image.');
addgallerypiccore.class.php:          $this->show_more('Use an Default or Custom Uploaded Watermark','','left info','Custom watermarks may first be uploaded using the link below. Read the watermark guide information before creating your watermark image for the best results!!'); 
addgallerypiccore.class.php:          $this->show_close();//choose custom/default
addgallerypiccore.class.php:          $this->show_more('Guideline for Creating a Custom Watermark','noback','left maroon shadow','','full');		    
addgallerypiccore.class.php:          $this->show_close();//watermark info
addgallerypiccore.class.php:          $this->show_close('Watermark Options');//Watermarks option
addgallerypiccore.class.php:     static  $show_more=0; $show_more++; //echo 'show more is '.$this->show_more;
add_page_pic_core.class.php:			$this->show_more('Add Play button to image');
add_page_pic_core.class.php:			$this->show_more('Guideline for Creating a Custom Overlay/Watermark Image','noback','left editcolor','','full');		    
add_page_pic_core.class.php:			$this->show_close();//watermark info
add_page_pic_core.class.php:			$this->show_close();
add_page_pic_core.class.php:	$this->show_more('Upload Filesize Limit: '.$max_upload.'Mb','','info pt5 pb5 pl10 floatleft'); 
add_page_pic_core.class.php:	$this->show_close();
add_page_pic_core.class.php:	$this->show_more('Add an Overlay/Watermark Image','','left info','Use a Watermark Image to be programmatically blended to your Uploaded Image. Watermarks are a means to prevent images from being downloaded and used by others, by merging your image with a transparent  watermark  image.');
add_page_pic_core.class.php:	$this->show_more('Use an Default or Custom Uploaded Watermark','','left info','Custom watermarks may first be uploaded using the link below. Read the watermark guide information before creating your watermark image for the best results!!'); 
add_page_pic_core.class.php:	$this->show_close();//choose custom/default
add_page_pic_core.class.php:		$this->show_more('Guideline for Creating a Custom Overlay/Watermark Image','','left maroon shadow');
add_page_pic_core.class.php:	$this->show_close();//watermark info
add_page_pic_core.class.php:	$this->show_close();//Watermarks option 
add_page_pic_core.class.php:	static  $show_more=0; $show_more++; //echo 'show more is '.$this->show_more;
add_page_vid_core.class.php:	$this->show_more('Upload Filesize Limit: '.$max_upload.'Mb','','info pt5 pb5 pl10 floatleft');
add_page_vid_core.class.php:	$this->show_close();
add_page_vid_core.class.php: static  $show_more=0; $show_more++; //echo 'show more is '.$this->show_more;
backup.class.php:	$this->mailinst=mail::instance();
backup.class.php:	$this->mysqlinst = mysql::instance();
backup.class.php:	$this->navobj=navigate::instance();
backup.class.php:    if (!(empty($this->message[0])&&empty($this->success[0]))){ 
backup.class.php:	    $this->mailinst->mailwebmaster($this->success,$this->message);
backup.class.php:		//$this->is_gall=false;
backup.class.php:		$this->backupdb(Sys::Dbname,$tablename);//do for everybody
backup.class.php:	$this->mail_backup_message();
backup.class.php:		$this->message[]=$msg;//disable
backup.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
backup.class.php:				$count=$this->mysqlinst->count_field(Cfg::Backups_table,'backup_id','',false);
backup.class.php:				if (!isset($this->backup_copies)){
backup.class.php:					$this->backup_copies=(isset($store->backup_copies))?$store->backup_copies:$count+1;
backup.class.php:				if ($count>$this->backup_copies){
backup.class.php:					$limit=($count>$this->backup_copies+5)?5:1;
backup.class.php:					$clean=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
backup.class.php:					while(list($id)=$this->mysqlinst->fetch_row($clean)){
backup.class.php:						$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
backup.class.php:				$this->success[]='DATABASE SUCCESSFULLY BACKED UP';
backup.class.php:				$this->mailinst->user_info(); 
backup.class.php:				$body =  $this->mailinst->OSB  .  $this->mailinst->TheIp;  
backup.class.php:				$subject_append= (Sys::Logged_in) ? 'admin/owner':str_replace('.','-',$this->mailinst->TheIp);  
backup.class.php:				    $this->mailinst->mail_attachment($my_file, Sys::Home_pub.Cfg::Backup_dir, Cfg::Admin_email, Cfg::Mail_from, mail::Webmaster, Cfg::Mail_from, $my_subject, $my_message);
backup.class.php:				$this->message[]="backup failure: file not gzipped '.$fullpathbackupfile";
backup.class.php:			$this->message[]="backup failure: full path backup file is '.$fullpathbackupfile .'<br> filesize is '. $file_sizer";
backup.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
backup.class.php:		if ($this->mysqlinst->affected_rows()){
backup.class.php:			list($blog_col_id)=$this->mysqlinst->fetch_row($r);
backup.class.php:			$this->coll_col_arr[]=$blog_col_id;
backup.class.php:		else $this->coll_col_arr[]=$col_id;
backup.class.php:	$this->coll_col_arr=array();
backup.class.php:	$backup_clone_check_arr=explode(',',$this->backup_clone_check);
backup.class.php:			$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
backup.class.php:			if ($this->mysqlinst->affected_rows()){//will get original
backup.class.php:				list($col_id,$col_primary,$ptable)=$this->mysqlinst->fetch_row($r);
backup.class.php:				$this->coll_col_arr[]=$col_id;
backup.class.php:				foreach($this->coll_col_arr as $target){
backup.class.php:				$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
backup.class.php:				if ($this->mysqlinst->affected_rows()){
backup.class.php:					while(list($page)=$this->mysqlinst->fetch_row($r)){
backup.class.php:			$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
backup.class.php:			if ($this->mysqlinst->affected_rows()){
backup.class.php:				list($blog_id,$blog_col,$ptable)=$this->mysqlinst->fetch_row($r);
backup.class.php:				$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);   
backup.class.php:				if ($this->mysqlinst->affected_rows()){ 
backup.class.php:					while(list($page,$blog_col_id)=$this->mysqlinst->fetch_row($r)){
backup.class.php:				foreach($this->coll_col_arr as $target){
backup.class.php:				$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
backup.class.php:				if ($this->mysqlinst->affected_rows()){  
backup.class.php:					while(list($page)=$this->mysqlinst->fetch_row($r)){
backup.class.php:			$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
backup.class.php:			if ($this->mysqlinst->affected_rows()){  
backup.class.php:					while(list($page)=$this->mysqlinst->fetch_row($r)){
backup.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
backup.class.php:		if ($this->mysqlinst->affected_rows()){
backup.class.php:			list($page)=$this->mysqlinst->fetch_row($r);
backup.class.php:	for ($i=0; $i<$max-Cfg::Max_sql_backups; $i++){#will always keep at least this->max_backups backups
backup.class.php:		$this->message[]='path file probem in '.__METHOD__;
backup.class.php:          else $this->message[]='filesize is too small to pass in restoredb using '.Sys::Self;
backup.class.php:          $this->message[]="Backup restoredb file does not exist using ".$fullpathfile;
backup.class.php:	$this->mysqlinst->dbconnect(Sys::Dbname); 
backup.class.php:	$maxcount=$this->mysqlinst->count_field(Cfg::Master_gall_table,'pic_order','',false,"Where gall_ref='$tablename'");
catch_exceptions.class.php:               $message = date("dMY-H-i-s"). NL."url is: ".request::return_full_url().NL. " An uncaught exception occurred :" . $this->getFile.NL; 
chatroom.class.php:          $col_arr=explode(',',$this->chatcolor);
commontxt.php: $r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
commontxt.php:	if (!$this->mysqlinst->affected_rows())$themename='theme1';
commontxt.php:		while (list($page_ref2,$page_filename2) = $this->mysqlinst->fetch_row($r,__LINE__)){
commontxt.php:		$bp_arr=$this->page_break_arr;
commontxt.php:		$this->imagecss.='
commontxt.php:		$this->imagecss.='
commontxt.php:		 .'.$data.'_img {width:'.($this->grid_width_chosen_arr['max'.$bp_arr[0]]*$wpercent/100-$shadowcalc).'px;max-width:'.$maxwidth_adjust_shadow_calc.'%;
commontxt.php:		$this->imagecss.='}
commontxt.php:			$this->imagecss.='
commontxt.php:			$this->imagecss.='
commontxt.php:			 .'.$data.'_img {width:'.($this->grid_width_chosen_arr[$bp]*$wpercent/100-$shadowcalc).'px;max-width:'.$maxwidth_adjust_shadow_calc.'%;
commontxt.php:			$this->imagecss.='}';
commontxt.php:if($this->column_use_grid_array[$this->column_level]!=='use_grid'){
commontxt.php:		printer::printx('<p class="editbackground info floatleft" title="Enable Responsive Web Sizing/Positioning for Posts Within This Column"><input type="checkbox" name="'.$tablename.'_column_options['.$this->column_use_grid_index.']" onclick="edit_Proc.displaythis(\''.$tablename.'_grid_show\',this,\'#fdf0ee\')" value="use_grid">Enable RWD Positioning for Posts Within This Column</p>');
commontxt.php:		printer::printx('<p class=" editbackground info left" '.$gridstyle.' title="Disable Responsive Web Sizing for Posts Within This Column"><input type="checkbox" name="'.$tablename.'_column_options['.$this->column_use_grid_index.']"  value="0">Disable RWD Positioning for Posts Within This Column</p>');
commontxt.php:	$grid_units=(is_numeric($this->column_options[$this->column_grid_units_index])&&$this->column_options[$this->column_grid_units_index]>11&&$this->column_options[$this->column_grid_units_index]<101)?intval($this->column_options[$this->column_grid_units_index]):Cfg::Column_grid_units;
commontxt.php:	if($this->column_use_grid_array[$this->column_level]==='use_grid'){//setup conditions for all posts within column  note that self ::rwd build called before enabling correct parent column vals
commontxt.php:		$this->column_grid_css_arr[]=$grid_units.'@@'.$this->page_break_points;//for rendering css
commontxt.php:		$this->current_grid_units=$grid_units;//for choosing post width class
commontxt.php:		//$this->current_break_points=$this->column_break;//for choosing post width class
commontxt.php:	$this->show_more('Grid info choice','noback','smaller editbackground italic editcolor');
commontxt.php:	printer::alertx('<div class="'.$this->column_lev_color.' width400  floatleft left fsminfo editbackground editfont">Positioning your columns and posts are key to making your website content look interesting! ');
commontxt.php:     echo '<div class="'.$this->column_lev_color.'  floatleft left fsminfo editbackground editfont"><!--wrap break point-->';
commontxt.php:	printer::alertx('<p class="fs1'.$this->column_lev_color.'  floatleft" title="Break Points Determine when Content Should Break to the Next Line Depending on the Device Screen Size">Choose Your Break Points');
commontxt.php:	 <input  style="color:red;background:#te;" type="text" name="comment_name['.$this->blog_id.']" id="comment_name_'.$this->blog_id.'" size="'.$size.'" maxlength="35" value=""> ');
commontxt.php:	    $count=$this->mysqlinst->count_field($this->master_post_table,'blog_id','',false,$where);
commontxt.php:	   $q="update $this->post_params_table set  col_update='".date("dMY-H-i-s")."',col_time='".time()."',token='".mt_rand(1,mt_getrandmax()). "' where col_id=$child_id";
commontxt.php:	   $q="update $this->master_post_table set token='".mt_rand(1,mt_getrandmax()). "',blog_update='".date("dMY-H-i-s")."',blog_time='".time()."' where
commontxt.php:   $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);  
commontxt.php:	$q="insert into $this->master_post_css_table (css_id,blog_id,$post_fields,blog_update,blog_time,token) values ($css_id,'p$blog_id',$value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')";   
commontxt.php:$q="UPdate $this->master_page_table set page_update='".date("dMY-H-i-s")."', page_time=".time().",token='".mt_rand(1,mt_getrandmax()). "',page_filename='$filename' where page_ref='$dir_ref'";
commontxt.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
commontxt.php: $q="update $this->master_post_table as c, $this->master_post_table as p set ";
commontxt.php:   $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);  
commontxt.php:   $this->success[]="Your post Id: P$parent_id has been copied!";
commontxt.php: printer::printx ('<p onclick="edit_Proc.displaythis(\''.$data.'_comments_show\',this,\'#fdf0ee\')"  class="info floatleft" title="Check to enable Viewers to Submit for Display Comments to this Post"><input type="checkbox" name="'.$data.'_blog_options['.$this->blog_comment_index.']" value="1">Allow Commenting</p>');
commontxt.php:		$genstyle=(!empty($this->blog_options[$this->blog_comment_index]))?'style="display:block;background:#fdf0ee;"':'style="display:none;"';
commontxt.php:		$checked1=(empty($this->blog_options[$this->blog_comment_display_index]))?'checked="checked"':'';
commontxt.php:		$checked2=(!empty($this->blog_options[$this->blog_comment_display_index]))?'checked="checked"':'';
commontxt.php:printer::printx('<p id="'.$data.'_comments_show" '.$genstyle.'><input type="radio" '.$checked1.' name="'.$data.'_blog_options['.$this->blog_comment_display_index.']" value="0" >Hide-n-Click to Open Comments<br><input type="radio" '.$checked2.' name="'.$data.'_blog_options['.$this->blog_comment_display_index.']" value="1" >Display Comments Directly</p>');
commontxt.php:		self::mod_spacing($data.'_blog_options['.$this->blog_max_expand_image_index.']',$maxplus,25,2800,1,'px');
commontxt.php:/*if (!$this->is_page){
commontxt.php:			$this->show_more('Display On/Off base on Media Screen Size');
commontxt.php:			$display_on_off=($this->is_blog)?'blog_display_on_off_index':'column_display_on_off_index';
commontxt.php:			$option=($this->is_blog)?'blog_options':'column_options';
commontxt.php:			$minmax=($this->is_blog)?'blog_media_minmax_index':'column_media_minmax_index';
commontxt.php:			$minmax_val=$this->{$option}[$this->$minmax];
commontxt.php:			$media_display=$this->{$option}[$this->$display_on_off];
commontxt.php:			$mediasize=($this->is_blog)?'blog_media_px_index':'column_media_px_index';
commontxt.php:			$mediasize_val=($this->{$option}[$this->$mediasize]>201&&$this->{$option}[$this->$mediasize]<2000)?$this->{$option}[$this->$mediasize]:'';
commontxt.php:			printer::printx('<p><input type="radio" name="'.$this->data.'_'.$option.'['.$this->$minmax.']" value="none" '.$check1.'>None</p>');
commontxt.php:			printer::printx('<p><input type="radio" name="'.$this->data.'_'.$option.'['.$this->$minmax.']" value="media_min" '.$check2.'>@media min-width</p>');
commontxt.php:			printer::printx('<p><input type="radio" name="'.$this->data.'_'.$option.'['.$this->$minmax.']" value="media_max" '.$check3.'>@media max-width</p>');
commontxt.php:			printer::printx('<p><input type="radio" name="'.$this->data.'_'.$option.'['.$this->$display_on_off.']" value="none" '.$check4.'>Default: Always On');
commontxt.php:			printer::printx('<p><input type="radio" name="'.$this->data.'_'.$option.'['.$this->$display_on_off.']" value="media_on" '.$check5.'>Meets Media Rule &amp; Display On</p>');
commontxt.php:			printer::printx('<p><input type="radio" name="'.$this->data.'_'.$option.'['.$this->$display_on_off.']" value="media_off" '.$check6.'>Meets Media Rule &amp; Display Off</p>');
commontxt.php:		printer::printx('<p class="'.$this->column_lev_color.' editbackground">Choose @media Query Screen px to respond </p>');
commontxt.php:			echo '<div class="info smallest click" onclick="gen_Proc.precisionAdd(this,\''.$this->data.'_'.$option.'['.$this->$mediasize.']\',200,\'2000\',\''.(intval(ceil($this->column_total_width[$this->column_level]*10)/10)).'\',\'px\',\'1\',\''.$msgjava.'\');">Choose @media px</div>';
commontxt.php:			$this->show_close('Display On/Off base on Media Screen Size');
commontxt.php:             if ($this->edit){
commontxt.php:			$this->{$style}[$val]=$_POST[$style.'_percent'][$val];
commontxt.php:     $numval=str_replace(array('maxwidpx'.'widpx','%'),'',$this->{$style}[$val]);
commontxt.php:	$widtype=(strpos($this->{$style}[$val],'widmaxpx')===false)?'width:':'max-width:';
commontxt.php:	$finalunit=(strpos($this->{$style}[$val],'%')===false)?'px;':'%;';
commontxt.php:	$widunit=($wid==='none')?$wid:$this->{$style}[$val];
commontxt.php:	$this->show_more('Custom Width', 'noback','editfont editbackground infoclick',' Choose Your Max-width Special',500);
commontxt.php:	printer::alertx('<p class="'.$this->column_lev_color.' editbackground editfont">Choose one of the 3 following width methods. For uniform spacing on smaller width. Max-width will compress when widths overrun screen size. Percent will compress uniformly on shared rows. <br>Current Width: '.$widunit.'<br> Use 0 to remove if needed</p>');
commontxt.php:	$this->show_close('Custom Max Width');
commontxt.php:     $this->{$fstyle}[$val]=(is_numeric($numval)&&$numval>0)?$widtype.$numbal.$finalunit:'';
commontxt.php:if ($this->blog_type==='image'&&isset($ratio)){
commontxt.php:			$px=$this->current_net_width*$wpercent/100;
commontxt.php:			$this->show_more('Uniform Image Height Option');
commontxt.php:		$maxspace=$this->column_net_width[$this->column_level];  
commontxt.php:			$this->show_close('Image Height Info');
commontxt.php:	if (!$this->edit&&Sys::Web&&strpos(Sys::Self,'express_video')!==false){
commontxt.php: $q="update $this->master_post_table as c, $this->master_col_table as p set c.blog_grid_width=p.col_grid_width,c.blog_gridspace_right=p.col_gridspace_right,c.blog_gridspace_left=p.col_gridspace_left where c.blog_data1=p.col_id and c.blog_type='nested_column'";
commontxt.php:   //$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);  
commontxt.php: $q="update $this->master_post_table as p, $this->master_post_table as g set p.blog_grid_width=g.blog_grid_class where p.blog_id=g.blog_id";
commontxt.php:   $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);  
commontxt.php: $q="update $this->master_post_data_table as p, $this->master_gall_table as g set p.blog_tiny_data4=g.imagetitle,p.blog_tiny_data5=g.subtitle where p.blog_data1=g.master_gall_ref ";
commontxt.php:   $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);  
commontxt.php:	 $q="update $this->master_post_data_table as p, $this->master_gall_table as g set p.blog_data1=g.gall_ref where p.blog_table_base=g.gall_table and g.pic_order=1";
commontxt.php:   $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);  
commontxt.php:	$q="select distinct gall_table from $this->master_gall_table where master_gall_status=''";
commontxt.php:	$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
commontxt.php:	while (list($page_ref) = $this->mysqlinst->fetch_row($r,__LINE__)){
commontxt.php:		$count=$this->mysqlinst->count_field($this->master_page_table,'page_id','',false,$where);
commontxt.php:		$this->add_new_page(true);
commontxt.php:	$q="select blog_id,blog_table,blog_col from $this->master_post_table where blog_type='nested_column' and blog_table_base='$this->tablename'";
commontxt.php:	$temp=$this->mysqlinst->query($q);
commontxt.php:	while(list($blog_id,$blog_table,$blog_col)=$this->mysqlinst->fetch_row($temp)){ 
commontxt.php:				$q="update $this->master_post_table set blog_col='{$arr[1]}' where blog_id=$blog_id";
commontxt.php:				$this->mysqlinst->query($q);
commontxt.php:	$this->viewport_current_width=process_data::get_viewport();
commontxt.php:	$this->color_arr_long=explode(',',Cfg::Light_editor_color_order);//default value
commontxt.php:	$this->deltatime=time::instance(); $this->deltatime->delta_log('global construct delta'); 
commontxt.php:	$this->column_width_array[0]='body'; 
commontxt.php:	$this->edit=($edit=='edit')?true:$edit;// this is set in editpages for each web page individually....
commontxt.php:	$this->ext=request::check_request_ext();  
commontxt.php:	$this->page_initiate();    
commontxt.php:	if ((Sys::Web||(Sys::Loc&&Cfg::Force_local_login))&&(($this->edit&&!Sys::Pass_class)||Sys::Check_restricted)){//this is always on for security for editpages and other restricted utilities such as file_gen.php and display user pages see (Sys.php)
commontxt.php:	$this->css_suffix=$this->passclass_ext=(Sys::Pass_class)?Cfg::Temp_ext:'';		 
commontxt.php:	if ($this->edit && (isset($_POST['page_restore_view'])&&!empty($_POST['page_restore_view']))||(isset($_SESSION[Cfg::Owner.'db_to_restore'])&&isset($_GET['page_restore_dbopt'])))$this->db_backup_restore();
commontxt.php:	$this->ajax_check();   
commontxt.php:	(Sys::Onsubmitoff)&&$this->onsubmit='';
commontxt.php:	if ($this->edit)$_SESSION[Cfg::Owner.'editmode']=1;//prevents pages from cacheing if cacheing were on also this session created when logged in or by request
commontxt.php:		$this->edit='return';
commontxt.php:		$this->browser_info();
commontxt.php:			$this->{$index.'_index'}=$key;  
commontxt.php:		$this->{$index.'_index'}=$key;
commontxt.php:			$this->{$index.'_index'}=$key;
commontxt.php:			$this->{$index.'_index'}=$key;  
commontxt.php:			$this->{$index.'_index'}=$key;
commontxt.php:			$this->{$index.'_index'}=$key;
commontxt.php:			$this->{$index.'_index'}=$key;
commontxt.php:	$this->col_field_arr_all=explode(',',Cfg::Col_fields_all);
commontxt.php:	$this->col_field_arr=explode(',',Cfg::Col_fields); 
commontxt.php:	#buffer    ||($this->edit&&Sys::Pass_class)
commontxt.php:	$this->set_cookie(); 
commontxt.php:	$this->deltatime->delta_log('page initiate');
commontxt.php:	$this->temp();  
commontxt.php:	if ($this->edit){  
commontxt.php:	$this->edit_script();
commontxt.php:	    // $this->request_redirect_check();
commontxt.php:		$this->page_script();   
commontxt.php:    Dbg::__construct($this->ii,$this->options);
commontxt.php:    $this->find = $this->opt->get('find','firmfrie');
commontxt.php:    array_key_exists($this->find,$this->domains) ||
commontxt.php:        $this->find = 'firmfrie';
commontxt.php:    $cmd = '/bin/grep '.$this->find.' '.self::Global_error_log;
commontxt.php:    $exclude = $this->opt->get('exclude');
commontxt.php:        $this->exclude = trim(self::Exclude.'|'.$exclude, '|');
commontxt.php:        $cmd .= ' | /bin/grep -v "'.$this->exclude.'"';
commontxt.php:    $this->content  = "<h1>find('$this->find')</h1>\n";
commontxt.php:   $this->content .= "<h2>exclude('$this->exclude')</h2>\n";
commontxt.php:   $this->content .= "<h3 class=\"ctr\">error_log($wc)</h3>\n";
commontxt.php:    $this->content .= $log;
commontxt.php:    $acct = $this->domains[$this->find];
commontxt.php:    $html = str_replace($find,$repl,$this->content);
commontxt.php:     echo '#<input onclick=" window.jscolor(this);" style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';"  class="jscolor {refine:false}"   name="'.$name.'"   value="'.$value.'"
commontxt.php:		$this->mod_spacing($style.'['.$val.']['.$background_opacity_index.']',$background_color_opacity,0,100,1,'%');
commontxt.php:		$this->{$fstyle}[$val]=$background_color.$gradient_css.$background_image.$video_css; 
commontxt.php:$this->javascript.= <<<EOD
commontxt.php:	if ($this->rwd_post)return 1;
commontxt.php:	$height_set=(is_numeric($this->blog_height_arr[$this->blog_height_index])&&$this->blog_height_arr[$this->blog_height_index]>9&&$this->blog_height_arr[$this->blog_height_index]<1001)?$this->blog_height_arr[$this->blog_height_index]-$preheight:0;
commontxt.php:	list($picname,$alt)=process_data::process_pic($this->blog_data1);
expandgallery.class.php:			$url = $this->returnto;
expandgallery.class.php:		$this->header_return('Missing File '.$file); 
expandgallery.class.php:     $this->header_return('Error in array formation in '.$file.' in file '.__FILE__.' on line '.__LINE__);
expandgallery.class.php:	$this->passclass_ext=(Sys::Pass_class)?Cfg::Temp_ext:'';	  
expandgallery.class.php:	$this->viewport_width=process_data::get_viewport();
expandgallery.class.php:	$file=Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'gall_image_data_'. $this->gall_ref.$this->passclass_ext; 
expandgallery.class.php:		$this->img_array=$return;
expandgallery.class.php:	if (is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_master_gall_ref'.$this->passclass_ext)){
expandgallery.class.php:		$mastergalllookup=unserialize(file_get_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_master_gall_ref'.$this->passclass_ext));
expandgallery.class.php:	$this->master_gall_ref=(array_key_exists($this->gall_ref,$mastergalllookup))?$mastergalllookup[$this->gall_ref]:''; 
expandgallery.class.php:	$this->picmax=count($this->img_array)-1; 
expandgallery.class.php:	if (isset($_GET['pic_order']))$this->pic_order=$_GET['pic_order']; 
expandgallery.class.php:	else $this->pic_order=1;
expandgallery.class.php:	if(!is_numeric($this->pic_order)||$this->pic_order>$this->picmax||empty($this->pic_order))$this->pic_order=1;
expandgallery.class.php:	$this->pic_order=intVal($this->pic_order);
expandgallery.class.php:	$blog_data2=explode(',',$this->blog_data2);
expandgallery.class.php:	$this->render_body_main(); 
expandgallery.class.php:	$this->heightclass=($this->fixheight!=='noheight')?' height100':'';
expandgallery.class.php:	$this->fadeout_id='holder_'.$this->blog_id;
expandgallery.class.php:	if ($this->new_page_effect) {//simulate and not displaying page previews
expandgallery.class.php:		echo ' <div class="'.$this->dataCss.$this->heightclass.'" id="'.$this->dataCss.'" style="display:block; margin:0 auto; max-width:'.$this->maxexpand.'px;"><!--holdback--><div id="holder_'.$this->blog_id.'" class="'.$this->heightclass.'"><!--used for fading display--><div id="displayCurrentSize"></div>';
expandgallery.class.php:		$clear=($this->topcontrol)?40:70; 
expandgallery.class.php:		 <div class="expand-menu-icon"><a '.$class.' href="'.$this->returnto.'"><div class="xbar1"></div><div class="xbar2"></div><div class="xbar3"></div></a></div>'; 
expandgallery.class.php:     $close_display= ($this->new_page_effect)?'':' style="display:none;"';
expandgallery.class.php:     echo '<div class="slippry_wrapper'.$this->heightclass.'">
expandgallery.class.php:          <div class="gall_slipimg_'.$this->blog_id .$this->heightclass.'">';
expandgallery.class.php:     if ($this->topcontrol){
expandgallery.class.php:          <div class="slipcontrol slipcontrol_'.$this->blog_id.' textshadow">
expandgallery.class.php:<a class="close" href="'.$this->returnto.'" title="Close Backto Gallery"><span>Close</span>
expandgallery.class.php:          <ul id="slippry_'.$this->blog_id.'" style="margin: 0 auto;text-align: center">'; 
expandgallery.class.php:     for ($i=1; $i<$this->picmax+1; $i++){
expandgallery.class.php:          $this->picname=$this->img_array[$i][0];
expandgallery.class.php:          $this->imagetitle=$this->img_array[$i][1];
expandgallery.class.php:          $this->subtitle=$this->img_array[$i][2];
expandgallery.class.php:          $this->description=$this->img_array[$i][3];
expandgallery.class.php:          $this->image_ratio=$this->img_array[$i][4]/$this->img_array[$i][5];
expandgallery.class.php:          $this->alt='img: '.$this->picname;
expandgallery.class.php:          $this->calc_width();
expandgallery.class.php:          $this->slippry();
expandgallery.class.php:          $this->pic_order=$i;  
expandgallery.class.php:	if (!$this->slide)$this->captions();	
expandgallery.class.php:	if ($this->show_under_preview)$this->show_under_preview(); 
expandgallery.class.php:	if ($this->new_page_effect)  print ('</div><!--holdback--></div><!--holder_-->
expandgallery.class.php:	gen_Proc.slippry_'.$this->blog_id.'='.$data.'
expandgallery.class.php:	$imagetitle=(!empty(trim($this->imagetitle)))?$this->imagetitle:((!empty($this->default_imagetitle))?$this->default_imagetitle:'');
expandgallery.class.php:	$subtitle=(!empty($this->subtitle))?$this->subtitle:((!empty($this->default_subtitle))?$this->default_subtitle:'');
expandgallery.class.php:	$description=(!empty($this->description))?$this->description:((!empty($this->default_description))?$this->default_description:'');
expandgallery.class.php:	if ($this->slide_caption)$this->alt=$imagetitle; 
expandgallery.class.php:	if ($this->slide_caption||!$this->caption_display) 
expandgallery.class.php:	if ($this->picname===Cfg::Pass_image)$this->image_dir='';
expandgallery.class.php:	echo ' <li class="imagerespond"><a  data-wid="'.$this->image_width.'"><img style="display:block;margin: 0 auto;
expandgallery.class.php:  align-self: auto;" src="'.Cfg_loc::Root_dir.Cfg::Large_image_dir.$this->image_dir. $this->picname.'"  alt="'.$this->alt.'" data-width="'.$this->percent_width.'" data-description="'.$description.'" data-title="'.$imagetitle.'" data-subtitle="'.$subtitle.'" ></a></li>';
expandgallery.class.php:	if ($this->image_ratio > 1){
expandgallery.class.php:		$width=$this->maxexpand;
expandgallery.class.php:		$height=$width/$this->image_ratio;
expandgallery.class.php:		$this->percent_width=$this->maxwidth_adjust_expanded;//for slippry
expandgallery.class.php:		$height=$this->maxexpand;
expandgallery.class.php:		$width=$height*$this->image_ratio;
expandgallery.class.php:		$this->percent_width=100*$this->image_ratio;
expandgallery.class.php:	$maxed_width=($this->viewport_width >200)?min($this->viewport_width,$width):$width;		if (is_numeric($this->fixheight)){  
expandgallery.class.php:		$fwidth=$this->fixheight*$this->image_ratio; 
expandgallery.class.php:	$maxed_width=($this->transition==='kenburns')?$maxed_width*1.4:$maxed_width;
expandgallery.class.php:	$this->image_width=$image_width=check_data::key_up($this->page_cache_arr,$maxed_width,'val',$this->page_width); 
expandgallery.class.php:	$this->image_dir=($this->picname===Cfg::Pass_image)?'':Cfg::Response_dir_prefix.$image_width.'/';
expandgallery.class.php:	if (!is_file(Cfg_loc::Root_dir.Cfg::Large_image_dir.$this->image_dir.$this->picname)){          echo Cfg_loc::Root_dir.Cfg::Large_image_dir.$this->image_dir.$this->picname;
expandgallery.class.php:		image::resize_check($this->picname,0,0,$image_width,Cfg_loc::Root_dir.Cfg::Upload_dir,Cfg_loc::Root_dir.Cfg::Large_image_dir.$this->image_dir,$this->blog_id);
expandgallery.class.php:	if (Sys::Methods) Sys::Debug(__LINE__,__FILE__,__METHOD__);if ($this->slide_caption||!$this->caption_display) return;
expandgallery.class.php:	if ($this->gall_display==='slippry'){
expandgallery.class.php:		$imagetitle=process_data::clean_break((!empty($this->default_imagetitle))?$this->default_imagetitle:'');
expandgallery.class.php:		$subtitle=process_data::clean_break((!empty($this->default_subtitle))?$this->default_subtitle:'');
expandgallery.class.php:		$description=process_data::clean_break((!empty($this->default_description))?$this->default_description:''); 
expandgallery.class.php:		echo'<div style="max-width:'.($this->maxexpand).'px;" class="marginauto"><!--min width wrap--> 
expandgallery.class.php:			<div class="maxwidth95 displaytable marginauto mainPicInfo_'.$this->blog_id.' " id="mainPicInfo_'.$this->blog_id.'">';// 
expandgallery.class.php:		echo '<p id="imagetitle_'.$this->blog_id.'" class="imagetitle_'.$this->blog_id.'" > 
expandgallery.class.php:		echo' <p id="subtitle_'.$this->blog_id.'" class="subtitle_'.$this->blog_id.'">' . $subtitle . '</p>';
expandgallery.class.php:		echo '<p id="description_'.$this->blog_id.'" class="description_'.$this->blog_id.'">'.$description. '</p>';
expandgallery.class.php:		$imagetitle=(!empty(trim($this->imagetitle)))?$this->imagetitle:((!empty($this->default_imagetitle))?$this->default_imagetitle:'');
expandgallery.class.php:		$subtitle=(!empty($this->subtitle))?$this->subtitle:((!empty($this->default_subtitle))?$this->default_subtitle:'');
expandgallery.class.php:		$description=(!empty($this->description))?$this->description:((!empty($this->default_description))?$this->default_description:'');	
expandgallery.class.php:		echo'<div style="max-width:'.($this->maxexpand).'px;" class="marginauto"><!--min width wrap--> 
expandgallery.class.php:			<div class="maxwidth95 displaytable marginauto mainPicInfo_'.$this->blog_id.' " id="mainPicInfo_'.$this->blog_id.'">';// 
expandgallery.class.php:			echo '<p id="imagetitle_'.$this->blog_id.'" class="imagetitle_'.$this->blog_id.'" > 
expandgallery.class.php:				echo' <p id="subtitle_'.$this->blog_id.'" class="subtitle_'.$this->blog_id.'">' . $subtitle . '</p>';
expandgallery.class.php:				echo '<p id="description_'.$this->blog_id.'" class="description_'.$this->blog_id.'">'.$description. '</p>';
expandgallery.class.php:		else echo ' <div   class="mainPicInfo_'.$this->blog_id.'" style="padding-top:20px;"></div>';
expandgallery.class.php:	if ($this->gall_display==='slippry'){
expandgallery.class.php:		$gall_foci='.gall_preview_'.$this->blog_id;
expandgallery.class.php:			var opts = $.extend({},slippry_$this->blog_id.getSlipprySettings(), xnew);
expandgallery.class.php:			slippry_$this->blog_id.destroySlider();
expandgallery.class.php:			slippry_$this->blog_id = slippry_$this->blog_id.slippry(opts);
expandgallery.class.php:	echo'<div style="max-width:'.($this->maxexpand).'px;" class="marginauto"> 
expandgallery.class.php:	<div class="gall_preview_'.$this->blog_id.' marginauto inlineblock" style="max-width:90%;"  ><!--gall preview-->';
expandgallery.class.php:	for ($i=1;$i<$this->picmax+1;$i++){  //create array so order can be by preload nums not pic_order
expandgallery.class.php:		$picname=$this->img_array[$i][0]; 
expandgallery.class.php:		$imagetitle=$this->img_array[$i][1]; 
expandgallery.class.php:		$wid=$this->img_array[$i][4]; 
expandgallery.class.php:		$height=$this->img_array[$i][5]; 
expandgallery.class.php:		$this->alt=substr($imagetitle,0,25);
expandgallery.class.php:		$width=round(($wid/$height*$this->thumbnail_height));
expandgallery.class.php:		$opacity= ($this->pic_order==$i)?100:50;
expandgallery.class.php:		$opacity2= ($this->pic_order==$i)?1 :.50;
expandgallery.class.php:		$clone='&amp;clone_ref='.$this->clone;//acts as fallback in ajax
expandgallery.class.php:		if ($this->gall_display==='slippry'){  
expandgallery.class.php:			<img class=" thumbpad thumbnail_'.$this->blog_id.'"    
expandgallery.class.php:			. '" width="'.$width.'" height="'.$this->thumbnail_height.'" alt="" > </a> </p>';
expandgallery.class.php:	if ($this->next_gallery&&is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'nextgall_data_'.$this->master_gall_ref.$this->passclass_ext)){
expandgallery.class.php:		$fgall_info=unserialize(file_get_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'nextgall_data_'. $this->master_gall_ref.$this->passclass_ext)); 
expandgallery.class.php:			$current_order=array_search($this->gall_table,$gall_tablearr); 
expandgallery.class.php:			$onclick='onclick="fadeTo.fadeTo_init(\''.$this->fadeout_id.'\','.$this->transition_time.',100,0,-2);gen_Proc.delayGoTo(this,'.$this->transition_time.');return false;"';
expandgallery.class.php:				$width=round(($wid/$height*$this->thumbnail_height));
expandgallery.class.php:				echo '<div class="floatleft thumbs" > <a  href="'.trim($fname_arr[$current_order-1]).$this->ext.$addtourl.'" '.$onclick.'><img class="thumbnail thumbpad"  src="prev_gallery.gif" width="'.$width.'" height="'.$this->thumbnail_height.'" alt="View Previous Gallery"/></a></div>';
expandgallery.class.php:				$width=round(($wid/$height*$this->thumbnail_height));
expandgallery.class.php:				echo '<div class="floatleft thumbs"> <a href="'.trim($fname_arr[$current_order+1]).$this->ext.$addtourl.'" '.$onclick.'><img class="thumbnail thumbpad" src="next_gallery.gif" width="'.$width.'" height="'.$this->thumbnail_height.'" alt="View Next Gallery"/></a></div>';
expandgallery.class.php:				$gallfirstimage=unserialize(file_get_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_gall_firstimagelist'.$this->passclass_ext));
expandgallery.class.php:					$pwidth=$this->maxexpand;
expandgallery.class.php:					$pheight=$this->maxexpand;
expandgallery.class.php:				$maxed_width=($this->viewport_width >200)?min($this->viewport_width,$pwidth):$pwidth;//precaution if < 200 may be inaccurate
expandgallery.class.php:				$image_width=check_data::key_up($this->page_cache_arr,$maxed_width,'val',$this->page_width);
expandgallery.class.php:	if ($this->gall_display !=='slippry'){ 
expandgallery.class.php:	    fadeTo.preloading('.$this->preload.');
file_generate.class.php:	\$this->css.='
file_generator.class.php:	$msg25='Disc Space Managment: Limit Uploaded Images to '.$this->up_size.'px';
file_generator.class.php:	$block=(!empty($this->block_temp))?$this->block_temp:Cfg::Exclude; //$block='';
file_generator.class.php:	$this->block_dir=arrayhandler::arraytolower($block_arr); 
file_generator.class.php:				   $this->file=true;
file_generator.class.php:				   $this->file=true;
file_generator.class.php:				    if ($width > $this->up_size +$this->up_size*.2){
file_generator.class.php:						image::image_resize($file,$this->up_size,0,0,$dir,$fdir,'file',NULL,90);
file_generator.class.php:			//if (in_array($file_handle, $this->ignore_file)) {echo NL. 'ignored: '.$this->ignore_file;  
file_generator.class.php:			//if (in_array($file_handle, $this->block_dir)) {    
gallery_master.class.php:	$rowlength=process_data::row_length($this->$dataname,$cols); 
gallery_master.class.php:	echo '<textarea style="float:left;" class="fs1'.$this->column_lev_color.'" name="'.$name.'" rows="'.$rowlength.'" cols="'.$cols.'"   
gallery_master.class.php:	onkeyup="gen_Proc.autoGrowFieldScroll(this)">' . process_data::textarea_validate($this->$dataname).'</textarea>'; 
gallery_master.class.php:	echo'  <p><input class="editbackground editfont rad5 small cursor button'.$this->column_lev_color.' '.$this->column_lev_color.' mb10"   type="submit" name="submit"   value="'.$value.'" ></p>';
gallery_master.class.php:	(empty($class))&&$class=$this->column_lev_color.' floatleft editbackground editfont button'.$this->column_lev_color;
gallery_master.class.php:	$this->show_msg=$msg_open;
gallery_master.class.php:	$lesswidth=($this->current_net_width<80)?5:20; 
gallery_master.class.php:	$stylewidth=(!empty($showwidth))?'style="max-width:'.$showwidth.$styledirect.'"':((isset($this->current_net_width)&&!empty($this->current_net_width))?'style="max-width:'.($this->current_net_width-$lesswidth).'px;'.$styledirect.'"':(!empty($styledirect)?'style="'.$styledirect.';"':''));
gallery_master.class.php:	$this->deltatime=time::instance();
gallery_master.class.php:	$this->passclass_ext=(Sys::Pass_class)?Cfg::Temp_ext:'';		 
gallery_master.class.php:	$this->sess=session::instance();  
gallery_master.class.php:	$this->addgallery=addgallery::instance(); 
gallery_master.class.php:	$this->mysqlinst=mysql::instance(); 
gallery_master.class.php:	$this->mysqlinst->dbconnect();
gallery_master.class.php:	$this->addgallery->pagename=$this->pagename; 
gallery_master.class.php:	$this->addgallery->gall_table=$this->gall_table;
gallery_master.class.php:	$this->sess=session::instance(); 
gallery_master.class.php:	if ($this->edit){ 
gallery_master.class.php:		foreach($this->page_cache_arr as $ext){  
gallery_master.class.php:	if ($this->edit&&!$this->master_gallery){
gallery_master.class.php:		if (is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_maxexpand'.$this->passclass_ext)){
gallery_master.class.php:			$maxexpand_arr=unserialize(file_get_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_maxexpand'.$this->passclass_ext));
gallery_master.class.php:			$maxexpand_arr[$this->gall_ref]=$this->largepicplus;
gallery_master.class.php:			file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_maxexpand'.$this->passclass_ext,serialize($maxexpand_arr));
gallery_master.class.php:			$maxexpand_arr[$this->gall_ref]=$this->largepicplus;
gallery_master.class.php:			file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_maxexpand'.$this->passclass_ext,serialize($maxexpand_arr));
gallery_master.class.php:		$q="select picname,gall_ref from $this->master_gall_table where master_gall_status!='master_gall' and pic_order=1 ";  
gallery_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
gallery_master.class.php:		if ($this->mysqlinst->affected_rows()){ 
gallery_master.class.php:			while (list($firstpicname,$gall_ref_list)=$this->mysqlinst->fetch_row($r,__LINE__)){
gallery_master.class.php:			file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_gall_firstimagelist'.$this->passclass_ext,serialize($gallfirstimage)); 
gallery_master.class.php:	elseif ($this->edit&&$this->master_gallery){//create flatfile array for expanded image gallery next gallery for when preview images are used
gallery_master.class.php:		$this->page_arr=array();
gallery_master.class.php:		$pa=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
gallery_master.class.php:		while(list($pagefn,$pageref)=$this->mysqlinst->fetch_row($pa)){
gallery_master.class.php:			$this->page_arr[$pageref]=$pagefn;
gallery_master.class.php:		file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'page_fname_arr_data'.$this->passclass_ext,serialize($this->page_arr));
gallery_master.class.php:		$q="select master_table_ref,imagetitle,master_gall_ref,pic_order from  $this->master_gall_table where master_gall_status='master_gall' AND gall_ref ='$this->gall_ref' order by pic_order"; 
gallery_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
gallery_master.class.php:		if ($this->mysqlinst->affected_rows()){   
gallery_master.class.php:			while ($rows=$this->mysqlinst->fetch_assoc($r,__LINE__)){
gallery_master.class.php:				$galleryfname=(array_key_exists($rows['master_table_ref'],$this->page_arr))?$this->page_arr[$rows['master_table_ref']]:'PageNotFound';
gallery_master.class.php:			$this->show_more('Edit Individual Galleries','noback','','',400,'','float:left;',true);
gallery_master.class.php:				echo '<p class="floatleft editbackground editfont editcolor"><a class="click" href="'.$array[1].$this->ext.'">Edit '.substr($array[0],0,18).'</a></p>';
gallery_master.class.php:			$this->show_close('Edit Individual Galleries');
gallery_master.class.php:			file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'nextgall_data_'. $this->gall_ref.$this->passclass_ext,serialize($gall_info));
gallery_master.class.php:		$q="select master_gall_ref,gall_ref from  $this->master_gall_table where master_gall_status='master_gall'"; // do this for all master galleries
gallery_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
gallery_master.class.php:		if ($this->mysqlinst->affected_rows()){
gallery_master.class.php:			while ($rows=$this->mysqlinst->fetch_assoc($r,__LINE__)){
gallery_master.class.php:			file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_master_gall_ref'.$this->passclass_ext,serialize($mastergalllookup));
gallery_master.class.php:		if (is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'page_fname_arr_data'.$this->passclass_ext)){
gallery_master.class.php:               $this->page_arr=unserialize(file_get_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'page_fname_arr_data'.$this->passclass_ext));
gallery_master.class.php:          else $this->page_arr=array(); 
gallery_master.class.php:     if ($this->edit){
gallery_master.class.php:		if (!$this->master_gallery)
gallery_master.class.php:			$q="select pic_id,pic_order,picname from $this->master_gall_table where master_gall_status !='master_gall' and gall_ref='$this->gall_ref'"; 
gallery_master.class.php:		else $q="select pic_id,pic_order,picname from $this->master_gall_table where master_gall_status='master_gall' and gall_ref='$this->gall_ref'";
gallery_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);   
gallery_master.class.php:		if ($this->mysqlinst->affected_rows()){
gallery_master.class.php:			$this->show_more('Expanded Image Info','noback','','',400,'','float:left;',true);
gallery_master.class.php:			while(list($pic_id,$pic_order,$picname)=$this->mysqlinst->fetch_row($r,__LINE__)){
gallery_master.class.php:						if ($this->master_gallery){
gallery_master.class.php:							$q="DELETE FROM $this->master_gall_table
gallery_master.class.php:								WHERE  pic_id = $pic_id AND master_gall_status='master_gall' AND gall_ref='$this->gall_ref'";
gallery_master.class.php:							$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
gallery_master.class.php:							 $msg="Success: gallery has been removed from $this->gall_ref...";  
gallery_master.class.php:							$q="DELETE FROM $this->master_gall_table
gallery_master.class.php:							WHERE  pic_id = $pic_id AND gall_ref='$this->gall_ref'";
gallery_master.class.php:							$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false); 
gallery_master.class.php:							$msg="Success: picture has been deleted in $this->gall_ref...";  
gallery_master.class.php:							$q="update $this->master_gall_table set $q gall_time=".time().",token='". mt_rand(1,mt_getrandmax())."' where pic_id='$pic_id'";
gallery_master.class.php:							$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
gallery_master.class.php:				if (!$this->master_gallery){
gallery_master.class.php:					$adjustmax=($ratio>=1)?$this->largepicplus:$this->largepicplus*$ratio;
gallery_master.class.php:					$maximagesize=($this->transition==='kenburns')?$adjustmax*1.4:$adjustmax;
gallery_master.class.php:					$maxpagesize=($this->transition==='kenburns')?'':$this->page_width;
gallery_master.class.php:					$maxfullwidth=check_data::key_up($this->page_cache_arr,$maximagesize,'val',$maxpagesize);//this for naximum cache image generation 
gallery_master.class.php:					foreach($this->page_cache_arr as $ext){
gallery_master.class.php:							if (!is_file($dir.$ext.'/'.$picname)||isset($_POST[$this->data.'_blog_data2'][$this->image_quality_index])){
gallery_master.class.php:								image::image_resize($picname,$ext,0,0,Cfg_loc::Root_dir.Cfg::Upload_dir, $dir.$ext,'file',NULL,$this->quality);
gallery_master.class.php:									$file='image_info_large_images_'.$page_ref.$this->passclass_ext; 
gallery_master.class.php:										if ($arr['id']==$this->blog_id){
gallery_master.class.php:							printer::print_wrap('image info quality','editbackground editfont floatleft left fsmnavy Od3green '.$this->column_lev_color);
gallery_master.class.php:							@ Quality: $this->quality <br>
gallery_master.class.php:							$this->large_images_arr[]=array('id'=>$this->blog_id,'data'=>$this->data,'picname'=>$picname,'is_clone'=>$this->is_clone,'clone_local_style'=>$this->clone_local_style,'clone_local_data'=>$this->clone_local_data,'maxwidth'=>$maxfullwidth,'quality'=>$this->quality,'quality_option'=>$this->quality_option);
gallery_master.class.php:			$this->show_close('Expanded Image Info');
gallery_master.class.php:		$this->tidy_gall_order();
gallery_master.class.php:		if (!$this->master_gallery)
gallery_master.class.php:			$q="select pic_id from $this->master_gall_table where master_gall_status !='master_gall' and gall_ref='$this->gall_ref'"; 
gallery_master.class.php:		else $q="select pic_id from $this->master_gall_table where master_gall_status ='master_gall' and gall_ref='$this->gall_ref'";
gallery_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
gallery_master.class.php:		if ($this->mysqlinst->affected_rows()){
gallery_master.class.php:			while(list($pic_id)=$this->mysqlinst->fetch_row($r,__LINE__)){
gallery_master.class.php:				$q="update $this->master_gall_table set temp_pic_order=''";
gallery_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
gallery_master.class.php:				if ($this->master_gallery){
gallery_master.class.php:					$q="select pic_id from $this->master_gall_table
gallery_master.class.php:						WHERE  master_gall_status ='master_gall' AND gall_ref='$this->gall_ref' order by pic_order ASC";
gallery_master.class.php:					$q="select pic_id from $this->master_gall_table
gallery_master.class.php:					WHERE  gall_ref='$this->gall_ref' order by pic_order ASC";
gallery_master.class.php:				$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
gallery_master.class.php:				while(list($pic_id)=$this->mysqlinst->fetch_row($r,__LINE__)){
gallery_master.class.php:					$q="update $this->master_gall_table set token='".mt_rand(1,mt_getrandmax())."',  gall_time='".time()."',pic_order='$x' where pic_id='$pic_id'";
gallery_master.class.php:					$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
gallery_master.class.php:	//master_table_ref is page ref ($this->pagename) of the guest gallery record
gallery_master.class.php:	// gall_table is the page ref ($this->pagename ) for the master gallery itself
gallery_master.class.php:	// gall_table is the page ref ($this->pagename)  in normal gallery records
gallery_master.class.php:	if ($this->edit||Sys::Pass_class){//generate flatfile of master query display	 
gallery_master.class.php:		if (!$this->master_gallery){
gallery_master.class.php:			$q = "SELECT  master_gall_ref,master_table_ref,pic_order, height, width, picname, pic_id, imagetitle, subtitle, description FROM $this->master_gall_table WHERE gall_ref='$this->gall_ref'  ORDER BY pic_order ASC"; 
gallery_master.class.php:			$q = "SELECT  master_gall_ref,master_table_ref, pic_order,  height, width, picname, pic_id, imagetitle, subtitle, description FROM $this->master_gall_table WHERE master_gall_status='master_gall' and gall_ref='$this->gall_ref'  ORDER BY pic_order ASC";   //for master gallery
gallery_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false); 
gallery_master.class.php:		if (!($this->mysqlinst->affected_rows())) {
gallery_master.class.php:			if (!$this->master_gallery){
gallery_master.class.php:				echo '<p id="return_'.$this->gall_ref.'">&nbsp;</p>';
gallery_master.class.php:				printer::printx('<p class="fs2'.$this->column_lev_color.' editbackground editfont '.$this->column_lev_color.'"><a  class="fs2'.$this->column_lev_color.' editbackground editfont '.$this->column_lev_color.'" href="addgallerypic.php?gall_ref='.$this->gall_ref.'&amp;postreturn='.Sys::Self.'&amp;addimage=1&amp;tbn='.$this->gall_table.'&amp;smallpicplus='.$this->smallpicplus.'&amp;largepicplus='.$this->largepicplus.'&amp;pgtbn='.$this->pagename.'&amp;sess_override&amp;sess_token='.$this->sess->sess_token.'">'.$msg.'</a><br/></p>');
gallery_master.class.php:				if ($this->edit&&!$this->master_gallery){
gallery_master.class.php:					if (is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'gall_image_data_'. $this->gall_ref.$this->passclass_ext))  
gallery_master.class.php:						unlink(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'gall_image_data_'. $this->gall_ref.$this->passclass_ext); 
gallery_master.class.php:					if (is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_gall_main_'.$this->pagename.'_'.$this->blog_id.$this->passclass_ext))
gallery_master.class.php:						unlink(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_gall_main_'.$this->pagename.'_'.$this->blog_id.$this->passclass_ext); 
gallery_master.class.php:		while ($collect= $this->mysqlinst->fetch_row($r,__LINE__)) {
gallery_master.class.php:		file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_gall_main_'.$this->pagename.'_'.$this->blog_id.$this->passclass_ext,serialize($collect_rows));	
gallery_master.class.php:		if (is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_gall_main_'.$this->pagename.'_'.$this->blog_id.$this->passclass_ext)){
gallery_master.class.php:			$collect_rows=unserialize(file_get_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_gall_main_'.$this->pagename.'_'.$this->blog_id.$this->passclass_ext));
gallery_master.class.php:		else if (!$this->edit&&!$this->master_gallery){ 
gallery_master.class.php:		if (!$this->edit&&!$this->master_gallery){
gallery_master.class.php:	$this->maxexpand=0;
gallery_master.class.php:	$this->heightmax=0;
gallery_master.class.php:	$this->page_ref_arr=array(); 
gallery_master.class.php:		$dir=($this->master_gallery)?Cfg_loc::Root_dir.Cfg::Master_thumb_dir:Cfg_loc::Root_dir.Cfg::Small_thumb_dir;
gallery_master.class.php:		$galleryname=($this->master_gallery&&array_key_exists($master_table_ref,$this->page_arr))?$this->page_arr[$master_table_ref]:'';//used for filename.php
gallery_master.class.php:          if ($this->thumb_width_type==='width'){ 
gallery_master.class.php:               $resizewidth=$this->smallpicplus;
gallery_master.class.php:               if ($this->smallpicplus > $newwidth * 1.03 || $this->smallpicplus < $newwidth * .97){
gallery_master.class.php:                    $q="update $this->master_gall_table set width='$newwidth', height='$newheight' where pic_id=$pic_id";//small pic listing 
gallery_master.class.php:                    $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
gallery_master.class.php:          elseif ($this->thumb_width_type==='width_height'){ 
gallery_master.class.php:               $smallpicplus=$this->smallpicplus;
gallery_master.class.php:               if ($this->smallpicplus > $maxwh * 1.03 || $this->smallpicplus < $maxwh * .97){
gallery_master.class.php:                    $q="update $this->master_gall_table set width='$newwidth', height='$newheight' where pic_id=$pic_id";//small pic listing
gallery_master.class.php:                    $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
gallery_master.class.php:                    //$this->instruct[]="Gall preview image $picname resized";
gallery_master.class.php:               $resizeheight=$this->smallpicplus; 
gallery_master.class.php:               if ($this->smallpicplus > $newheight * 1.03 || $this->smallpicplus < $newheight * .97){
gallery_master.class.php:                    $q="update $this->master_gall_table set width='$newwidth', height='$newheight' where pic_id=$pic_id";//small pic listing
gallery_master.class.php:                    $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
gallery_master.class.php:                    //$this->instruct[]="Gall preview image $picname resized";
gallery_master.class.php:		$this->maxexpand=$this->largepicplus; 
gallery_master.class.php:		if ($this->edit&&!is_file(Cfg_loc::Root_dir.Cfg::Upload_dir.$picname))$this->message[]="missing image file $picname in uploads directory. Necessary for serving the correct Device sized Expanded Images";  		
gallery_master.class.php:		$this->height_array[$pic_order]=array('height'=>$height,'width'=>$width);  //this fully generates height_array info
gallery_master.class.php:		$this->img_arr[]=array('galleryname'=>$galleryname,'picname'=>$picname,'pic_id'=>$pic_id,'imagetitle'=>$imagetitle,'subtitle'=>$subtitle,'description'=>$description,'pic_order'=>$pic_order,'height'=>$height,'width'=>$width);// for edit pages
gallery_master.class.php:	if ($this->edit&&!$this->master_gallery){
gallery_master.class.php:		file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'gall_image_data_'. $this->gall_ref.$this->passclass_ext,serialize($ia));  
gallery_master.class.php:	($this->edit)&&printer::pclear();
gallery_master.class.php:	($this->edit)&&self::show_more('View Current Preview/Gall Arrangement','noback','','',400,'','float:left;',true);
gallery_master.class.php:	($this->edit)&&printer::print_wrap('edit view preview','whitebackground Os3salmon fsminfo'); 
gallery_master.class.php:	$returnto=(isset($_GET['gallreturnurl'])&&($this->gall_display==='no_display'||$this->show_under_preview))?str_replace('@@@','#',$_GET['gallreturnurl']):(($this->new_page_effect&&($this->gall_display==='no_display'||$this->show_under_preview))?'index.php':Sys::Self);
gallery_master.class.php:	if (!$this->master_gallery&&($this->gall_display==='no_display'||$this->gall_display==='slippry')){  
gallery_master.class.php:		$expand->maxexpand=$this->maxexpand; 
gallery_master.class.php:		$expand->fixheight=$this->fixheight; 
gallery_master.class.php:		$expand->maxwidth_adjust_expanded=$this->maxwidth_adjust_expanded;
gallery_master.class.php:		$expand->slide_caption=$this->slide_caption;
gallery_master.class.php:		$expand->caption_display=$this->caption_display;
gallery_master.class.php:		$expand->slide=$this->slide;
gallery_master.class.php:		$expand->current_net_width=$this->current_net_width; 
gallery_master.class.php:		$expand->default_imagetitle=$this->default_imagetitle;
gallery_master.class.php:		$expand->default_subtitle=$this->default_subtitle;
gallery_master.class.php:		$expand->default_description=$this->default_description;
gallery_master.class.php:		$expand->gall_display=$this->gall_display;
gallery_master.class.php:		$expand->transition_time=$this->transition_time;
gallery_master.class.php:		$expand->topcontrol=$this->topcontrol;
gallery_master.class.php:		$expand->thumbnail_height=$this->thumbnail_height;
gallery_master.class.php:		$expand->transition=$this->transition;
gallery_master.class.php:		$expand->show_under_preview=$this->show_under_preview;//$$expand->maxwidth_adjust_expanded=$this->maxwidth_adjust_expanded;
gallery_master.class.php:		$expand->new_page_effect=$this->new_page_effect; //simulate..
gallery_master.class.php:		$expand->gall_expand_menu_icon=$this->gall_expand_menu_icon;
gallery_master.class.php:		$expand->blog_data2=$this->blog_data2;
gallery_master.class.php:		$expand->next_gallery=$this->next_gallery; //set to true affects
gallery_master.class.php:		$expand->gall_table=$this->gall_table; 
gallery_master.class.php:		$expand->data=$this->data;
gallery_master.class.php:		$expand->dataCss=$this->dataCss; 
gallery_master.class.php:		$expand->page_cache_arr=$this->page_cache_arr;//sizes of cache..
gallery_master.class.php:		$expand->page_width=$this->page_width;
gallery_master.class.php:		$expand->gall_ref=$this->gall_ref;
gallery_master.class.php:		$expand->clone=$this->clone; 
gallery_master.class.php:		$expand->blog_id=$this->blog_id;
gallery_master.class.php:		$expand->transition=$this->transition;
gallery_master.class.php:		$expand->clone_local_style=$this->clone_local_style;
gallery_master.class.php:		$expand->clone_local_data=$this->clone_local_data; 
gallery_master.class.php:	$this->class_single_multiple=($this->preview_display=='single')?'marginauto center':'inlineblock'; 
gallery_master.class.php:	($this->gall_display==='highslide')&&printer::printx('<p id="goto_'.$this->gall_ref.'"></p>');//for gallery navigation go to
gallery_master.class.php:	if ($this->preview_display==='none'&&!$this->edit&&$this->gall_display==='slippry') {  
gallery_master.class.php:          $html_id=($this->new_page_effect)?'body':'#holder_'.$this->blog_id;//all holder at this point
gallery_master.class.php:		 slippry_$this->blog_id = slippry_$this->blog_id($start,'$html_id');
gallery_master.class.php:	elseif ($this->gall_display=='photoswipe'){//open photoswap
gallery_master.class.php:	      <div  class="photoswipe_'.$this->blog_id.'" data-pswp-uid="'.$psinc.'">
gallery_master.class.php:	if($this->master_gallery ||$this->preview_display!=='none'||$this->edit) {  
gallery_master.class.php:		foreach($this->img_arr as $arr){ 
gallery_master.class.php:			$this->galleryname=$arr['galleryname'];
gallery_master.class.php:			$this->picname=$arr['picname']; 
gallery_master.class.php:			$this->imagetitle=$arr['imagetitle'];
gallery_master.class.php:			$this->subtitle=$arr['subtitle'];
gallery_master.class.php:			$this->description=$arr['description'];
gallery_master.class.php:			$this->width=$arr['width']; 
gallery_master.class.php:			$this->height=$arr['height'];
gallery_master.class.php:			$this->pic_id=$arr['pic_id'];
gallery_master.class.php:			$this->pic_order=$arr['pic_order']; 
gallery_master.class.php:			$this->alt=str_replace('"','',substr($this->imagetitle,0,25));
gallery_master.class.php:			$this->width=round($this->width); 
gallery_master.class.php:			$this->continue=true; 
gallery_master.class.php:			if ($this->preview_minimum!=='none'&&!$this->master_gallery){
gallery_master.class.php:                   $preview_netwidth=($this->limit_width!=='none')? min($this->limit_width,$this->current_net_width):$this->current_net_width;
gallery_master.class.php:				$stylewidth='width:'.($this->width/$preview_netwidth*100).'%;';
gallery_master.class.php:                    $styleheight='height:'.($this->height/$preview_netwidth*100).'%;'; 
gallery_master.class.php:				$minwidcalc=round($this->width*$this->preview_minimum/100);
gallery_master.class.php:					$this->imagecss.='
gallery_master.class.php:					#'.$this->dataCss.' minReg_'.$iminc.'{min-width:200px;} 
gallery_master.class.php:					$this->add_min_class=' minReg_'.$iminc;
gallery_master.class.php:					$this->add_min_class='';
gallery_master.class.php:				$stylewidth='max-width:'.$this->width.'px;';
gallery_master.class.php:				$this->add_min_class='';
gallery_master.class.php:			$this->style_single='style="'.$stylewidth.$minWidth.'height:auto; margin-bottom: '.$this->gall_topbot_pad.'px;"';
gallery_master.class.php:			$this->style=($this->masonry)?'style="'.$minWidth.$stylewidth.' margin-bottom:'.$this->gall_topbot_pad.'px; "':'style="margin-right:0;padding:0;'.$stylewidth.$minWidth.'margin-bottom:'.$this->gall_topbot_pad.'px; vertical-align: middle; margin-left: '.($this->padleft/2).'px;margin-right: '.($this->padleft/2).'px; "';//padding:0; removed  
gallery_master.class.php:			$this->style_widheight='style="'.$stylewidth.$minWidth.' height:auto;"';
gallery_master.class.php:			if ($this->gall_display=='highslide'):
gallery_master.class.php:				 $this->highslide(); 
gallery_master.class.php:			elseif ($this->gall_display=='slippry'): 
gallery_master.class.php:				 $this->slippry();
gallery_master.class.php:			elseif ($this->gall_display=='rows_caption'):
gallery_master.class.php:				 $this->rows_caption(); 
gallery_master.class.php:			elseif ($this->gall_display=='expandgallery'):   
gallery_master.class.php:				 $this->expandgallery();
gallery_master.class.php:			elseif ($this->gall_display=='gallerycontent'):
gallery_master.class.php:				 $this->gallerycontent();
gallery_master.class.php:			elseif ($this->gall_display=='display_single_row'): 
gallery_master.class.php:				 $this->display_single_row();
gallery_master.class.php:			elseif ($this->gall_display==='multiple_hover_caption'):
gallery_master.class.php:				$this->display_hover_caption();
gallery_master.class.php:			elseif ($this->gall_display==='multiple_image_caption'):
gallery_master.class.php:				$this->display_hover_caption();
gallery_master.class.php:			elseif ($this->gall_display=='photoswipe'): 
gallery_master.class.php:				$this->photoswipe();  
gallery_master.class.php:				$this->padleft=0;
gallery_master.class.php:				$this->lastpad=false;
gallery_master.class.php:				$this->position=1;
gallery_master.class.php:	if ($this->gall_display=='photoswipe'){//close photoswap
gallery_master.class.php:     <div id="gallery_'.$this->blog_id.'" class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
gallery_master.class.php:                    <div class="pswp__container pswp_'.$this->blog_id.'" >
gallery_master.class.php:	($this->edit)&&printer::close_print_wrap('edit view preview');	
gallery_master.class.php:	($this->edit)&&self::show_close();
gallery_master.class.php:	$this->preload='';
gallery_master.class.php:	if ($this->master_gallery&&!$this->edit){//get dir.firstimage from each gallery for preload
gallery_master.class.php:		if (is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_maxexpand')&&is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_maxexpand'.$this->passclass_ext&&is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_gall_firstimagelist'.$this->passclass_ext))){
gallery_master.class.php:			$gallfirstimage=unserialize(file_get_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_gall_firstimagelist'.$this->passclass_ext));
gallery_master.class.php:			$maxexpand_arr=unserialize(file_get_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Gall_info_dir.'data_maxexpand'.$this->passclass_ext));
gallery_master.class.php:				$this->viewport_width=process_data::get_viewport();
gallery_master.class.php:				$maxed_width=($this->viewport_width >200)?min($this->viewport_width,$pwidth):$pwidth;//precaution if < 200 may be inaccurate
gallery_master.class.php:				$image_width=check_data::key_up($this->page_cache_arr,$maxed_width,'val',$this->page_width);
gallery_master.class.php:			$this->preload=implode(',',$preload_array);
gallery_master.class.php:	($this->edit)&&$this->edit_display();
gallery_master.class.php:	$image_ratio=$this->width/$this->height;
gallery_master.class.php:		$large_width=$this->maxexpand;
gallery_master.class.php:		$height=$this->maxexpand;
gallery_master.class.php:	list($maxw,$maxh)=process_data::get_size($this->picname,Cfg_loc::Root_dir.Cfg::Upload_dir);
gallery_master.class.php:	$image_ratio=$this->width/$this->height; 
gallery_master.class.php:		$width=$this->maxexpand;
gallery_master.class.php:		$height=$this->maxexpand;
gallery_master.class.php:	$max_width=check_data::key_up($this->page_cache_arr,$large_width,'val');
gallery_master.class.php:	$med_width=check_data::key_up($this->page_cache_arr,$med_width,'val');
gallery_master.class.php:	$masonry=($this->masonry)?' grid-item':'';
gallery_master.class.php:	$gall_flex=($this->gall_flex)?' previewFlexItem':'';
gallery_master.class.php:	<a class="'.$this->class_single_multiple.$masonry.$gall_flex. $this->add_min_class.'" '.$this->style.'  href="'.Cfg_loc::Root_dir.Cfg::Large_image_dir.$max_image_dir.$this->picname .'" data-size="'.round($max_width*1.25).'x'.round($max_width*1.25/$image_ratio).'" data-med="'.Cfg_loc::Root_dir.Cfg::Large_image_dir.$med_image_dir.$this->picname .'" data-med-size="'.round($med_width*1.25).'x'.round($med_width*1.25/$image_ratio).'" data-author="">
gallery_master.class.php:	          <img style="width:97%;height:auto;" class="preview_border_'.$this->blog_id.'" src="'.Cfg_loc::Root_dir. 'small_images/'. $this->picname 
gallery_master.class.php:     $imagetitle=(!empty(trim($this->imagetitle)))?$this->imagetitle:((!empty($this->default_imagetitle))?$this->default_imagetitle:'');
gallery_master.class.php:     $subtitle=(!empty($this->subtitle))?$this->subtitle:((!empty($this->default_subtitle))?$this->default_subtitle:'');
gallery_master.class.php:     $description=(!empty($this->description))?$this->description:((!empty($this->default_description))?$this->default_description:'');
gallery_master.class.php:     echo'<div style="max-width:'.($this->maxexpand).'px;" class="marginauto"><!--min width wrap--> 
gallery_master.class.php:          <div class="maxwidth95 displaytable marginauto mainPicInfo_'.$this->blog_id.'">';// 
gallery_master.class.php:          echo '<p class="imagetitle_'.$this->blog_id.'" > 
gallery_master.class.php:          echo' <p class="subtitle_'.$this->blog_id.'">' . $subtitle . '</p>';
gallery_master.class.php:          echo '<p class="description_'.$this->blog_id.'">'.$description. '</p>';
gallery_master.class.php:	if ($x>1&&$this->preview_display==='singlepic')return;
gallery_master.class.php:	$passclass=(!Sys::Viewdb&&Sys::Pass_class&&!empty(Sys::Returnpass))?'returnpass='.Sys::Returnpass.'&amp;tbn='.$this->gall_table.'&amp;gall_ref='.$this->gall_ref.'&amp;':((Sys::Viewdb&&Sys::Pass_class)?'viewdb&amp;':'');
gallery_master.class.php:	$gotoexpand=(Sys::Pass_class&&!Sys::Viewdb)?Cfg::Expand_pass_page.'?'.$passclass:'expand-'.$this->gall_ref.'.php?'.$passview;//actual  filename 
gallery_master.class.php:	$masonry=($this->masonry)?' grid-item':'';
gallery_master.class.php:	$gall_flex=($this->gall_flex)?' previewFlexItem':'';
gallery_master.class.php:	$clone='&amp;clone_ref='.$this->clone;
gallery_master.class.php:	$html_id=($this->new_page_effect)?'body':'#holder_'.$this->blog_id;//all holder at this point
gallery_master.class.php:	$onclick=' onclick="slippry_'.$this->blog_id.'('.$this->pic_order.',\''.$html_id.'\');"'; 
gallery_master.class.php:	<div class="'.$this->class_single_multiple.$masonry.$gall_flex.$this->add_min_class.'" '.$this->style.'><!--expandgall preview-->
gallery_master.class.php:	<a '.$class.' href="'.Cfg_loc::Root_dir.$gotoexpand.'pic_order='.$this->pic_order.$clone.'" '.$onclick.'>
gallery_master.class.php:	<img class="preview_border_'.$this->blog_id.'" style="width:'.$this->maxwidth_adjust_preview.'%"  src="'.Cfg_loc::Root_dir.'small_images/'. $this->picname 
gallery_master.class.php:	 . '" alt="'. $this->alt. '" >
gallery_master.class.php:	$style=($this->preview_display=='single')?$this->style_single:$this->style;
gallery_master.class.php:	$image_ratio=$this->width/$this->height;
gallery_master.class.php:		$width=$this->maxexpand;
gallery_master.class.php:		$height=$this->maxexpand;
gallery_master.class.php:	$image_width=check_data::key_up($this->page_cache_arr,$maxed_width,'val',$this->page_width);
gallery_master.class.php:	if (!is_file(Cfg_loc::Root_dir.Cfg::Large_image_dir.$image_dir.$this->picname)){
gallery_master.class.php:		$return=image::resize_check($this->picname,0,0,$image_width,Cfg_loc::Root_dir.Cfg::Upload_dir,Cfg_loc::Root_dir.Cfg::Large_image_dir.$image_dir,$this->blog_id);
gallery_master.class.php:	$masonry=($this->masonry)?' grid-item':'';
gallery_master.class.php:	$gall_flex=($this->gall_flex)?' previewFlexItem':'';
gallery_master.class.php:	if (!$this->edit){  //width:'.($maxed_width*.95).',height:'.($maxed_height*.95).',  No effect
gallery_master.class.php:	 	echo '<div  class="inlineblock'.$this->add_min_class.$masonry.$gall_flex.'" '.$style.'> <!--highslide-wrap--><a href="'.Cfg_loc::Root_dir.Cfg::Large_image_dir.$image_dir. $this->picname .'"   
gallery_master.class.php:			class="highslide" onclick="return hs.expand(this, { slideshowGroup: \''.$this->gall_ref.'\' , wrapperClassName: \'gall_img_'.$this->blog_id.'\' ,  outlineType: null,allowSizeReduction : true})"><img  class="preview_border_'.$this->blog_id.'" style="width:'.$this->maxwidth_adjust_preview.'%" src="'.Cfg_loc::Root_dir.'small_images/'. $this->picname 
gallery_master.class.php:		  . '" alt="'. $this->alt. '" > </a>';
gallery_master.class.php:	else echo '<div  '.$this->style.'><!--highslide--><!--highslide-wrap--><img class="preview_border_'.$this->blog_id.' cursor" onclick="alert(\'Expanded Images not available in Highslide Edit Mode\');"  '.$this->style.' src="'.Cfg_loc::Root_dir.'small_images/'. $this->picname 
gallery_master.class.php:		  . '"  alt="'. $this->alt. '" >';
gallery_master.class.php:	$des_wid=max(strlen($this->imagetitle),strlen($this->subtitle),strlen($this->description));
gallery_master.class.php:		echo '<div class="highslide-caption highslide-caption_'.$this->blog_id.'" >';
gallery_master.class.php:		if (!empty($this->imagetitle )){
gallery_master.class.php:			 echo '<p class="imagetitle_'.$this->blog_id.'">'
gallery_master.class.php:			 . $this->imagetitle  
gallery_master.class.php:		<p class="subtitle_'.$this->blog_id.'">' . $this->subtitle  . '</p>
gallery_master.class.php:		<p class="description_'.$this->blog_id.'">' . $this->description .'</p> 
gallery_master.class.php:	if($this->preview_display=='single')printer::pclear();
gallery_master.class.php:	if (!$this->enable_edit)return; 
gallery_master.class.php:	$dir=(is_file(Cfg_loc::Root_dir.Cfg::Small_thumb_dir.$this->picname))?Cfg::Small_thumb_dir:Cfg::Master_thumb_dir;
gallery_master.class.php:	if ($this->master_gallery){  
gallery_master.class.php:		printer::printx('<p class="floatleft '.$this->column_lev_color.' bold  editfont">Master Gall Image Order, Delete, Captions, Add Gallery Collection</p>');
gallery_master.class.php:		$this->show_more('Rearrange Images Here','','','',900,'','float:left;',true);
gallery_master.class.php:		print'<p class="'.$this->column_lev_color.' large fsminfo floatleft left editbackground editfont">Drag the image box to sort the image order. </p>';
gallery_master.class.php:		echo '<p id="updateGallMsg_'.$this->inc.'" class="pos left larger editbackground editfont"></p>';
gallery_master.class.php:		echo '<ul id="sortGall_'.$this->inc.'" data-inc="'.$inc.'" data-id="'.$this->blog_id.'" class="nolist sortGall" >';
gallery_master.class.php:		foreach ($this->img_arr as $key => $ia){
gallery_master.class.php:			. '" height="90" alt="'. $this->alt.
gallery_master.class.php:		$this->show_close('Rearrange Images Here');
gallery_master.class.php:		$this->show_more('Edit Image Captions or Delete a Gallery Entry Here','','','',700,'','float:left;',true);
gallery_master.class.php:		printer::printx('<p class="'.$this->column_lev_color.' large fsminfo floatleft left editbackground editfont">'.$msg.'<br> <span class="neg whitebackground"> Checking the checkbox next to an image will DELETE the Gallery Image Link for the Master Gallery (Not the actual Gallery)</span><br>You Can Also Delete a Gallery IMAGE Here and re-add-it to change the Chosen Gallery Image as Needed</p>');
gallery_master.class.php:		foreach ($this->img_arr as $key => $ia){
gallery_master.class.php:			$this->imagetitle=$ia['imagetitle'];
gallery_master.class.php:			$this->subtitle=$ia['subtitle'];
gallery_master.class.php:			$this->description=$ia['description'];
gallery_master.class.php:			. '" height="90" alt="'. $this->alt.
gallery_master.class.php:			$this->show_more('Edit Captions','','','',600,'','float:left;',true);
gallery_master.class.php:			printer::printx('<p class="fs2info   center inline '.$this->column_lev_color.'">Filename: '.$image.'</p>');
gallery_master.class.php:			echo '<div class="fsminfo floatleft left editcolor editbackground editfont "><span class="'.$this->column_lev_color.'"> Edit Title:</span>';
gallery_master.class.php:			echo '<div class="fsminfo floatleft left editcolor editbackground editfont "><span class="'.$this->column_lev_color.'"> Edit Subtitle:</span>';
gallery_master.class.php:			echo '<div class="fsminfo floatleft left editcolor editbackground editfont "><span class="'.$this->column_lev_color.'"> Edit description:</span>';
gallery_master.class.php:			$this->show_close('Edit Captions');
gallery_master.class.php:		$this->show_close('Edit Image Captions or Delete a Gallery Entry Here'); 
gallery_master.class.php:		$this->show_more('Add a New  Gallery Collection in Master Gallery','noback','button'.$this->column_lev_color.' rad3 small editbackground editfont '.$this->column_lev_color,'','full','','float:left;',true);
gallery_master.class.php:		 <select class="smaller editcolor editbackground editfont" onchange="edit_Proc.imageSelectMaster(this,\'gallref2_image_choice_'.$inc.'\',\'gallref2_title_'.$inc.'\',\''.$this->gall_ref.'\');"  name="create_master_gallery['.$this->gall_ref.']">');
gallery_master.class.php:		$q="select distinct gall_ref,gall_table from $this->master_gall_table where master_gall_status!='master_gall' order by gall_table"; 
gallery_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
gallery_master.class.php:		if ($this->mysqlinst->affected_rows()){ 
gallery_master.class.php:			While ($gRows=$this->mysqlinst->fetch_assoc($r)){
gallery_master.class.php:			$count=$this->mysqlinst->count_field($this->master_gall_table,'gall_ref','',false,$where);//if chosen before omit for master gallery
gallery_master.class.php:			$rpag = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
gallery_master.class.php:			list($page_title,$page_ref,$page_filename)=$this->mysqlinst->fetch_row($rpag);
gallery_master.class.php:		echo '<div id="gallref2_title_'.$inc.'" class="editbackground editcolor" style="display:none">Enter a title For Your Gallery<input type="text" name="master_title['.$this->gall_ref.']" maxlength="50" size="50"></div>'; 
gallery_master.class.php:		$this->show_close('Master Gallery Info');
gallery_master.class.php:		printer::printx('<p class="'.$this->column_lev_color.' bold  editfont">Edit Image Order, Add &amp; Delete Images, and Add/Change Image Caption</p>');
gallery_master.class.php:		$this->show_more('Rearrange Images Here','','','','full','','float:left;',true);
gallery_master.class.php:		print'<p class="'.$this->column_lev_color.' large fsminfo floatleft left editbackground editfont">Drag the image box to sort the image order. </p>';
gallery_master.class.php:		echo '<p id="updateGallMsg_'.$this->inc.'" class="pos larger editbackground editfont"></p>';
gallery_master.class.php:		echo '<ul id="sortGall_'.$this->inc.'" data-inc="'.$inc.'" data-id="'.$this->blog_id.'" class="nolist sortGall" >';
gallery_master.class.php:		foreach ($this->img_arr as $key => $ia){
gallery_master.class.php:			. '" height="90" alt="'. $this->alt.
gallery_master.class.php:		$this->show_close('Rearrange Images Here');
gallery_master.class.php:		$this->show_more('Edit Individual Image Captions or Delete an Image Here','','','',900,'','float:left;',true);
gallery_master.class.php:		printer::printx('<p class="'.$this->column_lev_color.' large fsminfo floatleft left editbackground editfont">'.$msg.'<br> <span class="neg"> Checking the checkbox next to an image will DELETE the Image</span> </p>');
gallery_master.class.php:		foreach ($this->img_arr as $key => $ia){
gallery_master.class.php:			$this->imagetitle=$ia['imagetitle'];
gallery_master.class.php:			$this->subtitle=$ia['subtitle'];
gallery_master.class.php:			$this->description=$ia['description'];
gallery_master.class.php:			. '" height="90" alt="'. $this->alt.
gallery_master.class.php:			$this->show_more('Edit Captions','','','',600,'','float:left;',true);
gallery_master.class.php:			printer::printx('<p class="fs2info   center inline '.$this->column_lev_color.'">Filename: '.$image.'</p>');
gallery_master.class.php:			echo '<div class="fsminfo floatleft left '.$this->column_lev_color.'"> Edit Title:';
gallery_master.class.php:			echo '<div class="fsminfo floatleft left '.$this->column_lev_color.'"> Edit Subtitle:';
gallery_master.class.php:			echo '<div class="fsminfo floatleft left '.$this->column_lev_color.'"> Edit description:';
gallery_master.class.php:			$this->show_close('Edit Captions');
gallery_master.class.php:		$this->show_close('Edit Image Captions or Delete an Image Here');
gallery_master.class.php:		echo '<p id="return_'.$this->gall_ref.'" style="height:8px;">&nbsp;</p>';
gallery_master.class.php:		printer::printx('<p class="button'.$this->column_lev_color.' editbackground editfont floatleft  '.$this->column_lev_color.'"><a style="color:inherit;" href="addgallerypic.php?gall_ref='.$this->gall_ref.'&amp;postreturn='.Sys::Self.'&amp;addimage=1&amp;tbn='.$this->gall_table.'&amp;smallpicplus='.$this->smallpicplus.'&amp;pgtbn='.$this->pagename.'&amp;largepicplus='.$this->largepicplus.'&amp;sess_override&amp;sess_token='.$this->sess->sess_token.'">Add a New Image To this Gallery</a><br/></p>');
gallery_master.class.php:	 list($width,$height)=process_data::get_size(Cfg_loc::Root_dir.Cfg::Master_thumb_dir. $this->picname); 
gallery_master.class.php:	$style=($this->preview_display=='single')?$this->style_single:$this->style; 
gallery_master.class.php:	$style_caption=(!empty($this->caption_width))?'style="width:'.$this->caption_width.'px;"':'';	
gallery_master.class.php:	echo '<div '.$style.' class="inlineblock'.$this->add_min_class.'"><!--wrap rows caption -->
gallery_master.class.php:	<div class="marginauto gall_img_'.$this->blog_id.'"  style="max-width:'.$this->smallpicplus.'px; "><a href="'.$this->galleryname.$this->ext.'?gallreturnurl='.Sys::Self.'#'.$this->dataCss.'">   
gallery_master.class.php: <!--caption rows--><img class="maxwidth95" src="'.Cfg_loc::Root_dir.Cfg::Master_thumb_dir. $this->picname 
gallery_master.class.php:	 . '"  alt="'. $this->alt. '" > </a></div>
gallery_master.class.php:	 	<div   class="mainPicInfo_'.$this->blog_id.'" '.$style_caption.'>';//display table throws off center text
gallery_master.class.php:	if (!empty($this->imagetitle )){
gallery_master.class.php:		echo '<p class="imagetitle_'.$this->blog_id.'"><a href="'.$this->galleryname.$this->ext.'?gallreturnurl='.Sys::Self.'#'.$this->dataCss.'"> '//&#8220;
gallery_master.class.php:			. $this->imagetitle  
gallery_master.class.php:	   <p class="subtitle_'.$this->blog_id.'">' . $this->subtitle .'</p> 
gallery_master.class.php:	   <p class="description_'.$this->blog_id.'">' . $this->description .'</p></div>
gallery_master.class.php:	list($width,$height)=process_data::get_size(Cfg_loc::Root_dir.Cfg::Master_thumb_dir. $this->picname); 
gallery_master.class.php:	$style=($this->preview_display=='single')?$this->style_single:$this->style; 
gallery_master.class.php:	$style_caption=(!empty($this->caption_width))?'style="width:'.$this->caption_width.'px;"':'';	
gallery_master.class.php:	echo '<div '.$style.' class="inlineblock'.$this->add_min_class.'"><!--display_hover_caption-->
gallery_master.class.php:	<div class="marginauto gall_img_'.$this->blog_id.' hover_caption"  style="max-width:'.$this->smallpicplus.'px; "><a href="'.$this->galleryname.$this->ext.'?gallreturnurl='.Sys::Self.'#'.$this->dataCss.'">   
gallery_master.class.php: <!--caption rows--><img class="maxwidth95" src="'.Cfg_loc::Root_dir.Cfg::Master_thumb_dir. $this->picname 
gallery_master.class.php:	 . '"  alt="'. $this->alt. '" > <div class="caption_wrap"><p class="imagetitle_'.$this->blog_id.'">'.$this->imagetitle.'</p><p class="subtitle_'.$this->blog_id.'">'.$this->subtitle.'</p></div> </a></div>
gallery_master.class.php:	$style_caption=(!empty($this->caption_width))?'style="vertical-align:'.$this->caption_vertical_align.';max-width:'.$this->caption_width.'px;"':'';	
gallery_master.class.php:	<div class="'.$this->display_float.' gall_img_'.$this->blog_id.$this->add_min_class.'"  style="padding-bottom:'.$this->gall_topbot_pad.'px;"><!--gall_img--><a style="vertical-align:'.$this->caption_vertical_align.'; max-width:'.$this->smallpicplus.'px; " href="'.$this->galleryname.$this->ext.'?gallreturnurl='.Sys::Self.'#'.$this->dataCss.'">   
gallery_master.class.php: <!--display single row--><img  class="maxwidth95" src="'.Cfg_loc::Root_dir.Cfg::Master_thumb_dir. $this->picname 
gallery_master.class.php:	 . '"  alt="'. $this->alt. '" > </a>
gallery_master.class.php:	 	<div   class="mainPicInfo_'.$this->blog_id.' '.$this->display_float.'" '.$style_caption.'><!--display single mainPicInfo-->';
gallery_master.class.php:	if (!empty($this->imagetitle )){
gallery_master.class.php:		echo '<p class="imagetitle_'.$this->blog_id.'"><a href="'.$this->galleryname.$this->ext.'?&amp#goto_'.$this->master_gall_ref.'"> '//&#8220;
gallery_master.class.php:			. $this->imagetitle  
gallery_master.class.php:	   <p class="subtitle_'.$this->blog_id.'">' . $this->subtitle .'</p> 
gallery_master.class.php:	   <p class="description_'.$this->blog_id.'">' . $this->description .'</p></div><!--display single mainPicInfo--></div><!--gall_img-->';
global_edit_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log('begin backup '.__LINE__.' @ '.__method__.'  '); 
global_edit_master.class.php:	 $this->backupinst->render_backup($this->pagename);
global_edit_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log('end  backup '.__LINE__.' @ '.__method__.'  ');
global_edit_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log(__LINE__.' @ '.__method__.'  ');
global_edit_master.class.php:     $this->editpages_obj($this->master_page_table,'page_id,'.Cfg::Page_fields,'','page_ref',$this->pagename,'','','all','',",page_time=".time().",token='". mt_rand(1,mt_getrandmax())."', page_update='".date("dMY-H-i-s")."'");
global_edit_master.class.php:	$this->page_populate_options();//separately called  in non edit pages
global_edit_master.class.php:	$this->backup_copies=(is_numeric($this->page_options[$this->page_backup_copies_index])&&$this->page_options[$this->page_backup_copies_index]>20&&$this->page_options[$this->page_backup_copies_index]<1001)?$this->page_options[$this->page_backup_copies_index]:Cfg::Backup_copies;
global_edit_master.class.php:		if (isset($_POST[$port.'_import']))$this->process_import($port);
global_edit_master.class.php:		if (isset($_POST[$port.'_export']))$this->process_export($port);
global_edit_master.class.php:		if (isset($_POST[$port.'_export']))$this->process_export($port);
global_edit_master.class.php:	if (isset($_POST['regen_backup_table']))backup::regen_backup_table($this->backup_copies);
global_edit_master.class.php:	if (isset($_POST['copy_to_clipboard']))$this->copy_to_clipboard();
global_edit_master.class.php:	if (isset($_POST['paste_from_clipboard']))$this->paste_from_clipboard();
global_edit_master.class.php:	if (isset($_POST['page_iframe_all']))$this->page_iframe_all();
global_edit_master.class.php:	if (isset($_POST['page_iframe_all_website']))$this->page_iframe_all_website();
global_edit_master.class.php:	if (isset($_POST['cache_regenerate']))$this->cache_regenerate();
global_edit_master.class.php:	if (isset($_POST['cache_regenerate_flatfiles']))$this->cache_regenerate_flatfiles();
global_edit_master.class.php:	if (isset($_POST['submitted']))$this->process_col();
global_edit_master.class.php:	if (isset($_POST['delete_blog_clunc']))$this->process_delete_clunc(); 
global_edit_master.class.php:	if (isset($_POST['col_transfer_clone']))$this->process_col_transfer_clone();
global_edit_master.class.php:	if (isset($_POST['force_color_reset']))$this->force_color_reset();  
global_edit_master.class.php:		if ($msg==='success')$this->success[]='files successfully generated';
global_edit_master.class.php:		if ($msg==='success')$this->success[]='files successfully generated';
global_edit_master.class.php:	if (isset($_POST['page_opts_import']))$this->page_opts_import();
global_edit_master.class.php:	if (isset($_POST['page_opts_export']))$this->page_opts_export(); 
global_edit_master.class.php:	if (isset($_POST['deletecolumn']))$this->check_delete_col();//do before add
global_edit_master.class.php:	if (isset($_POST['delete_nav_menu']))$this->delete_nav_menu();
global_edit_master.class.php:		 $this->process_new_blog_table();
global_edit_master.class.php:	if (isset($_POST['import_gallery'])||isset($_POST['clone_import_gallery']))$this->import_gallery();
global_edit_master.class.php:		$this->addpagevid=addpagevid::instance();
global_edit_master.class.php:		$this->addpagevid->submitted();	
global_edit_master.class.php:	if (isset($_POST['create_master_gallery']))$this->create_master_gallery();
global_edit_master.class.php:		$this->addpagepic=addpagepic::instance();
global_edit_master.class.php:		$this->addpagepic->submitted();
global_edit_master.class.php:		$this->parse_menu_edit($_POST['nav_edit_submitted']);
global_edit_master.class.php:		$this->create_unclone_copy();
global_edit_master.class.php:		$this->remove_unclone('column');
global_edit_master.class.php:		$this->remove_unclone('post');
global_edit_master.class.php:		$this->create_unclone_fresh(); 
global_edit_master.class.php:	$this->fonts_browser=explode(';',Cfg::Fonts_browser);//
global_edit_master.class.php:	$this->fonts_extended=explode(';',Cfg::Fonts_extended);
global_edit_master.class.php:	$this->fonts_all=array_merge($this->fonts_browser,$this->fonts_extended);  
global_edit_master.class.php:	natcasesort($this->fonts_all); 
global_edit_master.class.php:	if (isset($_POST['page_cache']))$this->page_cache_update();//waited for page_cache to be rendered
global_edit_master.class.php:	$this->pre_render_data();
global_edit_master.class.php:	if (!empty($this->header_script_function)){  
global_edit_master.class.php:	   $javascript=new javascript($this->header_script_function,'', 'gen_Proc',$this->append_script);
global_edit_master.class.php:    if (!empty($this->header_edit_script_function)){
global_edit_master.class.php:	   $javascript_edit=new javascript($this->header_edit_script_function,'','gen_Procedit');
global_edit_master.class.php:	    $this->header_edit_script=(!is_array($this->header_edit_script))?explode(',',$this->header_edit_script):$this->header_edit_script;    
global_edit_master.class.php:	    $this->header_edit_script[]='gen_Proceditscripts.js';   
global_edit_master.class.php:	$this->render_header_open();
global_edit_master.class.php:	$this->edit_header();
global_edit_master.class.php:	$this->header_insert_edit();//for custom insert
global_edit_master.class.php:     $this->tool_man_init();
global_edit_master.class.php:	$this->tinymce();
global_edit_master.class.php:	$this->gen_Proc_init(); 
global_edit_master.class.php:	$this->header_close(); 
global_edit_master.class.php:	$this->edit_body();  
global_edit_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log('End Edit body '.__LINE__.' @ '.__method__.'  ');
global_edit_master.class.php:		$this->backupinst->backup_copies=$this->backup_copies;//configurable in page settings..
global_edit_master.class.php:		$this->backup();//it gatheres the master pagename and makes sure not a blog pagename...
global_edit_master.class.php:		(Sys::Deltatime)&&$this->deltatime->delta_log('Begin backup check clone  '.__LINE__.' @ '.__method__.'  ');
global_edit_master.class.php:		//$this->backupinst->backup_check_clone($this->backup_page_arr);//not necessary with new system
global_edit_master.class.php:		(Sys::Deltatime)&&$this->deltatime->delta_log('End backup check clone  '.__LINE__.' @ '.__method__.'  ');
global_edit_master.class.php:	 ($this->file_generate_css)&& file_generator::file_generate(true,false); 
global_edit_master.class.php:	$this->render_css();//after edit page has rendered.
global_edit_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log('End of '.__LINE__.' @ '.__method__.'  ');
global_edit_master.class.php:	$this->render_body_end();
global_edit_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log('End of '.__LINE__.' @ '.__method__.'  ');
global_edit_master.class.php:	$this->call_body(); 
global_edit_master.class.php:	$this->echo_msg();//will echo success msgs  //submit call in destructor to collect all mgs
global_edit_master.class.php:	$this->edit_form_head(); 
global_edit_master.class.php:	$this->page_options();
global_edit_master.class.php:	$this->browser_size_display();
global_edit_master.class.php:	$this->top_submit(); 
global_edit_master.class.php:     $this->display_anchor();
global_edit_master.class.php:     $this->editor_appearance();
global_edit_master.class.php:	$this->generate_cache();
global_edit_master.class.php:	$this->generate_bps();
global_edit_master.class.php:	if (isset($_POST['page_adjust_break_points']))$this->page_adjust_break_points(); 
global_edit_master.class.php:	$this->add_new_page();
global_edit_master.class.php:	$this->configure();
global_edit_master.class.php:     $this->page_import_export_options(); 
global_edit_master.class.php:	$this->track_font_em($this->page_style);
global_edit_master.class.php:	$this->display_nav();
global_edit_master.class.php:	$this->view_page();
global_edit_master.class.php:	$this->leftover_view();##################### advance off button
global_edit_master.class.php:		printer::printx('<p class="click button'.$this->column_lev_color.' highlight editfont tiny" title="'.$msg.'"> <a style="color:inherit;" href="'.Sys::Self.'?advanced">Display Adv CSS in Editmode</a></p>');
global_edit_master.class.php:	else printer::printx('<p class="click button'.$this->column_lev_color.' highlight tiny" title="'.$msg.'"> <a style="color:inherit;"  href="'.Sys::Self.'?advancedoff">Disable Display Adv CSS in Editmode</a></p>'); 
global_edit_master.class.php:	$this->restore_backup();
global_edit_master.class.php:	$this->import_page();
global_edit_master.class.php:	if ($this->page_options[$this->page_slideshow_index]==='enable_page_slideshow'){
global_edit_master.class.php:		print '<fieldset class="border3 borderridge border'.$this->color_arr_long[0].'"><legend class="shadowoff editbackground editfont">Configure Page Slide Show</legend><!--Begin edit fieldset Configure Page slide show-->';
global_edit_master.class.php:		$this->auto_slide($this->pagename,'page');
global_edit_master.class.php:	$this->is_page=false;//for styling 
global_edit_master.class.php:	$this->render_body_main();
global_edit_master.class.php: (Sys::Deltatime)&&$this->deltatime->delta_log(__LINE__.' @ '.__method__.'  '); 
global_edit_master.class.php:    if (!empty($this->header_edit_script)){
global_edit_master.class.php:	  foreach ($this->header_edit_script as $var){
global_edit_master.class.php:			 <script    src="'.$this->roots.Cfg::Script_dir.$var.'"></script> ';
global_edit_master.class.php:function editpages_obj($master_table,$field_data,$post_prepend,$ref1,$refval1,$ref2='',$refval2='',$do_all='all',$where3='',$update2=''){ #update# Updating posts in main process_blog function calling this function handles originals ie non-clones.. whereas updaing for local clone style and local clone data call this function in each repective section in the main blog_render function..  for the clones same parameters are passed cept has additional where blog_table_base='$this->pagename' clause  and instead of using master_post uses master_post_css or master_post_data for clone_local_style and  clone_local_data respectively
global_edit_master.class.php:			//standard form for processing is $this->blog_table.'_'.$refval1.'_blog_field
global_edit_master.class.php:							$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);  
global_edit_master.class.php:							list($c_val)=$this->mysqlinst->fetch_row($r,__LINE__);
global_edit_master.class.php:				 $r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:					if ($this->mysqlinst->affected_rows()) { 
global_edit_master.class.php:						$msg=($this->is_blog)?'POST ENTRIES HAVE BEEN UPDATED PLEASE DOUBLE CHECK':'PAGES HAVE BEEN UPDATED PLEASE DOUBLE CHECK';
global_edit_master.class.php:						(!in_array($msg,$this->success))&&$this->success[]=$msg;
global_edit_master.class.php:						// $this->backup_page_arr[]=array($master_table,"WherE $ref1 ='$refval1' $where2 $where3",$update);#used for generating styles of pages where clones of posts may be used.
global_edit_master.class.php:						$this->message[]=$msg;
global_edit_master.class.php:			(!$this->is_blog)&&$this->master_page_ref=$this->pagename;// this is for render_backups()..
global_edit_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false); 
global_edit_master.class.php:		if (!$this->mysqlinst->affected_rows()) { 
global_edit_master.class.php:			$this->message[]=$msg .' with '.$q;
global_edit_master.class.php:			echo '<p style="font-weight: bold; font-size: 1.4em; color:#'.$this->redAlert.'">'.$msg.'</p>';
global_edit_master.class.php:	$rows=$this->mysqlinst->fetch_assoc($r,__LINE__);
global_edit_master.class.php:		$this->{$field_array[$x]}= $rows[$field_array[$x]];//populate data
global_edit_master.class.php:	$this->page_options[$this->page_darkeditor_background_index]=(preg_match(Cfg::Preg_color,$this->page_options[$this->page_darkeditor_background_index]))?$this->page_options[$this->page_darkeditor_background_index]:'000000';
global_edit_master.class.php:	$this->page_options[$this->page_darkeditor_color_index]=(preg_match(Cfg::Preg_color,$this->page_options[$this->page_darkeditor_color_index]))?$this->page_options[$this->page_darkeditor_color_index]:'F7FDFF';
global_edit_master.class.php:	$this->page_options[$this->page_lighteditor_background_index]=(preg_match(Cfg::Preg_color,$this->page_options[$this->page_lighteditor_background_index]))?$this->page_options[$this->page_lighteditor_background_index]:'ffffff';
global_edit_master.class.php:	$this->page_options[$this->page_lighteditor_color_index]=(preg_match(Cfg::Preg_color,$this->page_options[$this->page_lighteditor_color_index]))?$this->page_options[$this->page_lighteditor_color_index]:'000000';
global_edit_master.class.php:	if ($this->page_options[$this->page_editor_choice_index]==='dark') : 
global_edit_master.class.php:				$this->{$index.'_index'}=$key; 
global_edit_master.class.php:		$this->page_dark_editor_value=(empty($this->page_dark_editor_value))?array():explode(',',$this->page_dark_editor_value);
global_edit_master.class.php:		$color_order=($count===count(explode(',',$this->page_dark_editor_order)))?$this->page_dark_editor_order:Cfg::Dark_editor_color_order;
global_edit_master.class.php:			if (!isset($this->$color)){
global_edit_master.class.php:				$this->message[]=$msg;
global_edit_master.class.php:				$this->$color='000000';
global_edit_master.class.php:			$this->{$color.'_index'}=$key; 
global_edit_master.class.php:			if (array_key_exists($key,$this->page_dark_editor_value)&&preg_match(Cfg::Preg_color,$this->page_dark_editor_value[$key])) 
global_edit_master.class.php:				$this->$color=$this->page_dark_editor_value[$key];
global_edit_master.class.php:				$this->page_dark_editor_value[$key]=$this->$color;
global_edit_master.class.php:				$this->hidden_array[]='<input class="allowthis" type="hidden" name="page_dark_editor_value['.$key.']" value="'.$this->$color.'">';
global_edit_master.class.php:		$this->editor_background=$this->page_options[$this->page_darkeditor_background_index];
global_edit_master.class.php:		$this->editor_color=$this->page_options[$this->page_darkeditor_color_index];
global_edit_master.class.php:			$this->{$index.'_index'}=$key; 
global_edit_master.class.php:		$this->page_light_editor_value=(empty($this->page_light_editor_value))?array():explode(',',$this->page_light_editor_value);
global_edit_master.class.php:		$color_order=($count===count(explode(',',$this->page_light_editor_order)))?$this->page_light_editor_order:Cfg::Light_editor_color_order;  
global_edit_master.class.php:			if (!isset($this->$color)){
global_edit_master.class.php:				$this->message[]=$msg;
global_edit_master.class.php:				$this->$color='000000';
global_edit_master.class.php:			$this->{$color.'_index'}=$key; 
global_edit_master.class.php:			if (array_key_exists($key,$this->page_light_editor_value)&&preg_match(Cfg::Preg_color,$this->page_light_editor_value[$key])) 
global_edit_master.class.php:				$this->$color=$this->page_light_editor_value[$key];
global_edit_master.class.php:				$this->page_light_editor_value[$key]=$this->$color;
global_edit_master.class.php:				$this->hidden_array[]='<input class="allowthis" type="hidden" name="page_light_editor_value['.$key.']" value="'.$this->$color.'">';
global_edit_master.class.php:		$this->editor_background=$this->page_options[$this->page_lighteditor_background_index];
global_edit_master.class.php:		$this->editor_color=$this->page_options[$this->page_lighteditor_color_index];
global_edit_master.class.php:	$this->color_order_arr=explode(',',$color_order); 
global_edit_master.class.php:	$this->color_arr_long=$this->color_order_arr;//explode(',',substr_replace(str_repeat($color_order.',',3),'',-1));
global_edit_master.class.php:	echo'  <p><input class="editbackground editfontfamily '.$this->column_lev_color.' shadowoff cursor  smallest button'.$this->column_lev_color.'"   type="submit" name="submit"   value="submit All" ></p>';
global_edit_master.class.php:	$count=count($this->page_break_arr); 
global_edit_master.class.php:		if (isset($this->page_break_arr[$i+1])){
global_edit_master.class.php:			if ($this->page_break_arr[$i]<=$this->page_break_arr[$i+1]){
global_edit_master.class.php:				$this->message[]='break point value mismatch: Your substions should follow descending values';
global_edit_master.class.php:		if ($this->page_break_arr[$x]===$newbp){
global_edit_master.class.php:			$this->message[]='Break Points must be greater than 100';
global_edit_master.class.php:	$wheretable=(isset($_POST['page_sub_bp'])&&	$_POST['page_sub_bp']==='site')?'':" where page_ref='$this->pagename'";
global_edit_master.class.php:	$q="select page_id,page_ref,page_break_points from $this->master_page_table $wheretable"; 
global_edit_master.class.php:	$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	while (list($id,$page_ref,$pagebps) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:		$q="update $this->master_page_table set page_break_points='".$update[2]."' where page_id=".$update[0];   
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->success[]='Page Config Break Points altered on pages:'.$string;
global_edit_master.class.php:	else $this->message[]='No page config break points were changed';
global_edit_master.class.php:	$q="select col_id,col_grid_clone from $this->master_col_table $wheretable"; 
global_edit_master.class.php:	$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);  
global_edit_master.class.php:	while (list($id,$clone) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:		$q="update $this->master_col_table set col_grid_clone='".$update[1]."' where col_id=".$update[0];   
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:				$table=$this->master_col_table;
global_edit_master.class.php:				$table=$this->master_col_css_table;
global_edit_master.class.php:				$table=$this->master_post_table;
global_edit_master.class.php:				$table=$this->master_post_css_table;
global_edit_master.class.php:		$wheretable=(isset($_POST['page_sub_bp'])&&$_POST['page_sub_bp']==='site')?'':" where $page_ref='$this->pagename'";
global_edit_master.class.php:		$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		if ($this->mysqlinst->affected_rows()){ 
global_edit_master.class.php:			while (list($idv,$gridwidv,$gridrightv,$gridleftv,$page_refv) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:				if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:					$this->success[]="Css Grid width/spacings on 
global_edit_master.class.php:				else $this->message[]='No Grid breakpoint chosen width/spacings  settings were affected';	
global_edit_master.class.php:	$where=($_POST['force_color_reset']==="reset_all")?'':"where page_ref='$this->pagename'";
global_edit_master.class.php:	 $q="update $this->master_page_table  set page_dark_editor_value='', page_light_editor_value='', page_dark_editor_order='', page_light_editor_order='' $where";
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	 $q="update $this->master_page_table  set page_dark_editor_value='', page_light_editor_value='', page_dark_editor_order='', page_light_editor_order='' $where";
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		$this->message[]='Mistake in image cache update Changing sizes';
global_edit_master.class.php:	$new_cache_arr=$this->generate_cache($new_cache,true); 
global_edit_master.class.php:		$this->message[]='Your Largest cache image directory size must be at least 1000 (px)';
global_edit_master.class.php:	$q="update $this->master_page_table set page_cache='$new_cache'"; 
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			$this->success[]='new cache images to be added for '.Cfg::Response_dir_prefix."$ext on all pages";
global_edit_master.class.php:		$this->iframe_update_msg='Allowing for all pages to update cache directories with each page generating an iframe. This will take awhile to finish loading at top of this page';
global_edit_master.class.php:	if (!$this->edit||!isset($_POST['page_iframe_all']))return;
global_edit_master.class.php:	$this->iframe_update_msg='Wait For Loading to Finish. Allowing for all pages to update styles, flat files etc. with each page generating an iframe. This will take awhile to finish loading at top of this page.';
global_edit_master.class.php:	if (!$this->edit||!isset($_POST['page_iframe_all_website']))return;
global_edit_master.class.php:	$this->iframe_update_msg='Wait For Loading to Finish. Allow each page to load in iframe. ';
global_edit_master.class.php:	if (!$this->edit||!isset($_POST['cache_regenerate_flatfiles']))return;
global_edit_master.class.php:	$this->iframe_update_msg='Allowing for all pages to update image cache directories with each page generating an iframe. This will take awhile to finish loading at top of this page.';
global_edit_master.class.php:	if (!$this->edit||!isset($_POST['cache_regenerate']))return;
global_edit_master.class.php:	$this->iframe_update_msg='Allowing for all pages to update image cache directories with each page generating an iframe. This will take awhile to finish loading at top of this page.';
global_edit_master.class.php:	$q="update $this->master_page_table c, $this->master_page_table p SET ";
global_edit_master.class.php:	$q.=" $value c.page_update='".date("dMY-H-i-s")."', page_time='".time()."',c.token='".mt_rand(1,mt_getrandmax()). "' where p.page_ref='$this->page_ref'";
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->success[]="$this->page_ref has updated all styles and configs to all other pages";
global_edit_master.class.php:		$q="update $this->master_page_table c, $this->master_page_table p SET ";
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:			$this->success[]="$page_ref has been updated with styles and configs from $copy_ref";
global_edit_master.class.php:		$this->message[]=$msg;
global_edit_master.class.php:	$q="select page_ref,page_filename from $this->master_page_table where page_ref LIKE 'theme%' or page_filename LIKE 'theme%'";   
global_edit_master.class.php:	$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if (!$this->mysqlinst->affected_rows())$themename='theme1';
global_edit_master.class.php:		while (list($page_ref2,$page_filename2) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:	$q="select $page_fields from  $db.$this->master_page_table where page_ref ='$page_ref' limit 1";   
global_edit_master.class.php:	$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if (!$this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->message[]=$msg;
global_edit_master.class.php:	$row=$this->mysqlinst->fetch_assoc($r,__LINE__);
global_edit_master.class.php:	$q="insert into $this->master_page_table ($page_fields_all) values (";
global_edit_master.class.php:	$q="$q '".date("dMY-H-i-s")."','".time()."','".$this->token_gen()."')";
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:	$this->success[]=$msg;
global_edit_master.class.php:	$q="select col_id from $db.$this->master_col_table where col_table_base='$page_ref' and col_primary=1 order by col_num "; 
global_edit_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false); 
global_edit_master.class.php:	if (!$this->mysqlinst->affected_rows()){ 
global_edit_master.class.php:		$this->message[]="No Primary tables found in $page_ref from $db";
global_edit_master.class.php:	while (list($parent_id)=$this->mysqlinst->fetch_row($r,__LINE__)){    
global_edit_master.class.php:		$this->mysqlinst->count_field($this->master_col_table,'col_id','',false, '');
global_edit_master.class.php:		$child_id=$this->mysqlinst->field_inc; 
global_edit_master.class.php:		$this->copy_col_theme($parent_id,$child_id,$db,$themename);
global_edit_master.class.php:				$this->message[]='problem with config file while importing database';
global_edit_master.class.php:				$this->success[]=('Database Scrub Complete');
global_edit_master.class.php:		else $this->message[]="Theme Directories need generating";
global_edit_master.class.php:	elseif  (isset($_POST['import_page'])&&$_POST['import_page']!=='none')$this->import_page_copy($_POST['import_page']);
global_edit_master.class.php:		$token= $this->sess->sess_token; 
global_edit_master.class.php:		$this->show_more('View/Choose Theme Pages','noback','neg editbackground editfont smallest button'.$this->column_lev_color,'',500 ); 
global_edit_master.class.php:		$q="select distinct page_ref, page_title, page_filename from $db.$this->master_page_table  order by page_title ASC";   
global_edit_master.class.php:		$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		while (list($page_ref,$title,$filename) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:		$this->show_close('theme pages');// 
global_edit_master.class.php:	$this->show_more($msg_choose_db,'noback','highlight editbackground editfont  smallest button'.$this->column_lev_color,'Import choices to Add a theme page. Added theme pages Will Not Automatically replace you current theme');
global_edit_master.class.php:	$table_check=array($this->directory_table,$this->master_col_table,$this->master_page_table,$this->master_post_css_table,$this->master_col_css_table,$this->master_post_table,$this->master_gall_table);
global_edit_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:	while($rows=$this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:			$q="select $col_fields from $db.$this->master_col_table";
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:			if (!$this->mysqlinst->affected_rows()){
global_edit_master.class.php:				printer::alert_neg($db .' has differing table fields for a check of '. $this->master_col_table);
global_edit_master.class.php:				$q="select $post_fields from $db.$this->master_post_table";
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:				if (!$this->mysqlinst->affected_rows()){
global_edit_master.class.php:					printer::alert_neg("$db has differing table fields for a check of $this->master_post_table  while Ok for $this->master_col_table");
global_edit_master.class.php:					$q="select $page_fields from $db.$this->master_page_table";
global_edit_master.class.php:					$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:					if (!$this->mysqlinst->affected_rows()){
global_edit_master.class.php:						printer::alert_neg("$db  has differing table fields for a check of  $this->master_page_table while Ok for $this->master_col_table and $this->master_page_table");
global_edit_master.class.php:	$this->mysqlinst->dbconnect();//reconnect to current database  as get_tables redirects db
global_edit_master.class.php:		echo '<div title="Import choices to Add a theme page. Added theme pages Will Not Automatically replace you current theme" class="editbackground editfont '.$this->column_lev_color.' fs2'.$this->column_lev_color.' rad5 left highlight">Choose your database to view pages and/or choose to import new theme page to your website <!--Import choices-->';
global_edit_master.class.php:		echo '<p class="floatleft editbackground editfont '.$this->column_lev_color.' rs1redAlert smaller rad5 left highlight" title="Choose This option only if you trust the theme source and require special javascript content." ><input type="checkbox" class="cancel_clean_import" name="cancel_clean_import" value="1" onchange="gen_Proc.on_check_event(\'cancel_clean_import\',\''.$msg.'\');">Disable Cleaning Import of User Scripts</p>';
global_edit_master.class.php:		printer::alert(' ','',"$this->column_lev_color maxwidth500 floatleft editbackground editfont"); 
global_edit_master.class.php:	$this->submit_button(); 
global_edit_master.class.php:	$this->show_close('importing theme page');//<!--Show More Post Choices-->';
global_edit_master.class.php:		$q="select distinct page_ref,page_filename from $this->master_page_table ";
global_edit_master.class.php:		$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		while (list($page_ref,$page_filename) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:			$this->message[]=$msg;
global_edit_master.class.php:			file_generate::create_new_page($newpage_ref,$newtitle,$starterpage,$this->ext);
global_edit_master.class.php:			$this->success[]="New Page has been Created. <a class=\"link\" href=\"$newpage_ref$this->ext\"><u>Go to $newtitle</u></a>";
global_edit_master.class.php:			$url=$newpage_ref.$this->ext;
global_edit_master.class.php:		$q="select distinct page_ref, page_title, page_filename from $this->master_page_table";  
global_edit_master.class.php:		$r2 = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		if ($this->mysqlinst->affected_rows()){   
global_edit_master.class.php:			while (list($page_ref,$title,$filename) = $this->mysqlinst->fetch_row($r2,__LINE__)){ 
global_edit_master.class.php:					$count=$this->mysqlinst->count_field($this->master_col_table,'col_id','',false, " where col_table_base='$page_ref'");
global_edit_master.class.php:						$q="Delete from $this->master_page_table where page_ref='$page_ref'";
global_edit_master.class.php:						$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:								$this->success[]=$msg;
global_edit_master.class.php:					else $this->message[]="Empty $title of Columns Before Deleting this Page";	
global_edit_master.class.php:	$this->show_more('Add/Del Pages','asis',$this->column_lev_color.'  smallest editpages editbackground editfont button'.$this->column_lev_color,'','full' );
global_edit_master.class.php:	$this->print_wrap('add delete page');
global_edit_master.class.php:	$this->show_more('Add Page');
global_edit_master.class.php:	$this->print_wrap('add page',true);
global_edit_master.class.php:	printer::alertx('<p class="'.$this->column_lev_color.' left editbackground editfont inline ">A Link for editing Your New Page Will Appear in the Editor but Will Not Appear in the Website till YOU ADD the link to a Page Navigation Menu. This way Make Changes to the page and not have it appear on the website till you are ready.  Create as many navigations menus on a page as you wish. Options for Creating Navigation Menus are found under the Choose Post Options in each Column</p>');
global_edit_master.class.php:	$q="select distinct page_ref, page_title, page_filename from $this->master_page_table order by page_title";
global_edit_master.class.php:	$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	while (list($page_ref,$title,$filename) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:		$q="select   page_id, page_title, page_filename from $this->master_page_table where page_filename like 'index%'";
global_edit_master.class.php:		$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		if ($this->mysqlinst->num_rows($r)>0&&$this->mysqlinst->num_rows($r)<2){
global_edit_master.class.php:			list($page_id,$page_title,$page_ref)=$this->mysqlinst->fetch_row($r);
global_edit_master.class.php:			$q=" update $this->master_page_table set page_filename='index' where page_id='$page_id'";
global_edit_master.class.php:			$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	printer::alertx('<p class="fsminfo editbackground editfont '.$this->column_lev_color.'">New Pages Will Appear as a Link in the menu dropdown at the top of any page in editmode. When Your Page is Ready to Publish 
global_edit_master.class.php:	printer::alertx('<p class="fsminfo editbackground editfont '.$this->column_lev_color.'">Choose a Starter Page for Your initial Config/Styles</p>'); 
global_edit_master.class.php:	$this->submit_button(); 
global_edit_master.class.php:	$this->close_print_wrap('add  page');
global_edit_master.class.php:	$this->show_close('Add Page');
global_edit_master.class.php:	$this->show_more('Delete Page');
global_edit_master.class.php:	$this->print_wrap('delete page');
global_edit_master.class.php:	$q="select distinct page_ref, page_title, page_filename from $this->master_page_table order by page_ref";  
global_edit_master.class.php:	$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	while (list($page_ref,$title,$filename) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:		elseif ($page_ref===$this->pagename)
global_edit_master.class.php:	$this->close_print_wrap('delete page');
global_edit_master.class.php:	$this->show_close('delet page');
global_edit_master.class.php:	$this->close_print_wrap('add delete page');
global_edit_master.class.php:	$this->show_close('Add/Del Pages');//<!--Show More Add Page-->'; 
global_edit_master.class.php:	$this->navobj->return_url($this->pagename,'','navnavy smallest button'.$this->column_lev_color);
global_edit_master.class.php:	if(!isset($_SESSION[Cfg::Owner.'_'.$this->pagename.'_leftovers'])){
global_edit_master.class.php:	echo '<p class="'.$this->column_lev_color.' smallest  editbackground editfont button'.$this->column_lev_color.' click" title="View and restore saved backedup databases Here" onclick="gen_Proc.toggleClass2(\'#display_backups\',\'hide\');gen_Proc.use_ajax(\''.Sys::Self.'?display_backups\',\'handle_replace\',\'get\');" >Display Backup List</p>';
global_edit_master.class.php:	$this->submit_button('Submit Backup choice');
global_edit_master.class.php:	echo '<p class="'.$this->column_lev_color.' smallest  editbackground editfont button'.$this->column_lev_color.' click"  onclick="gen_Proc.toggleClass2(\'#display_fullnav\',\'hide\');gen_Proc.use_ajax(\''.Sys::Self.'?display_fullnav\',\'handle_replace\',\'get\');" >Full Nav</p>';
global_edit_master.class.php:	echo '<p class="'.$this->column_lev_color.' smallest  editbackground editfont button'.$this->column_lev_color.' click"  onclick="gen_Proc.toggleClass2(\'#display_anchor\',\'hide\');gen_Proc.use_ajax(\''.Sys::Self.'?display_anchor\',\'handle_replace\',\'get\');" >GoTo Anchors</p>';
global_edit_master.class.php:	$this->show_more('Choose Link to Page within this site','',$this->column_lev_color.' smaller  editbackground editfont button'.$this->column_lev_color,'',800);
global_edit_master.class.php:	$this->show_close('restore backups');
global_edit_master.class.php:function browser_size_display(){if (!Sys::Info&&!$this->edit)return;
global_edit_master.class.php:	$background=($this->edit)?'editbackground editfont':'whitebackground';
global_edit_master.class.php:	$style=(!$this->edit)?'style="position:fixed;top:0px; left:0px;z-index:1000000"':'';
global_edit_master.class.php:	$class1=(!$this->edit)?'hide':'';
global_edit_master.class.php:	$class2=($this->edit)?'hide':'';
global_edit_master.class.php:	echo '<div id="displayCurrentSize"  class="'.$class1.' editfontfamily floatleft smallest button'.$this->column_lev_color.' rad5 '.$background.' '.$this->column_lev_color.'"><!-- float buttons-->
global_edit_master.class.php:		$this->page_cache=(empty($cache))?trim($this->page_cache):trim($cache);
global_edit_master.class.php:	if (!empty($this->page_cache)){
global_edit_master.class.php:		$this->page_cache=preg_replace($pattern,'',$this->page_cache); 
global_edit_master.class.php:		$this->page_cache_arr=explode(',',$this->page_cache);
global_edit_master.class.php:		foreach($this->page_cache_arr as $ext){ 
global_edit_master.class.php:				$this->message[]=$msg; 
global_edit_master.class.php:		$this->page_cache_arr=$page_cacheupdate_arr;
global_edit_master.class.php:		$this->page_cache_arr=explode(',',Cfg::Image_response );
global_edit_master.class.php:	sort($this->page_cache_arr);
global_edit_master.class.php:	if ($resize) return $this->page_cache_arr;
global_edit_master.class.php:	if (implode(',',$this->page_cache_arr)!==$this->page_cache){  
global_edit_master.class.php:		$q="update $this->master_page_table set  page_update='".date("dMY-H-i-s")."', page_time=".time().",token='".mt_rand(1,mt_getrandmax()). "',page_cache='".implode(',',$this->page_cache_arr)."' where page_ref='$this->page_ref'";
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:	$this->page_br_points=trim($this->page_break_points); 
global_edit_master.class.php:	if (!empty($this->page_br_points)){ 
global_edit_master.class.php:		$this->page_br_points=preg_replace($pattern,'',$this->page_br_points); 
global_edit_master.class.php:		$this->page_break_arr=explode(',',$this->page_br_points);
global_edit_master.class.php:		if (count($this->page_break_arr)>10){  
global_edit_master.class.php:		    $this->message[]=$msg;
global_edit_master.class.php:		    $this->page_break_arr=explode(' ',Cfg::Column_break_points);
global_edit_master.class.php:		    $this->page_br_points=Cfg::Column_break_points;
global_edit_master.class.php:               foreach($this->page_break_arr as $bp){ 
global_edit_master.class.php:					$this->message[]=$msg; 
global_edit_master.class.php:					$this->page_break_arr=explode(',',Cfg::Column_break_points);
global_edit_master.class.php:					$this->page_br_points=Cfg::Column_break_points; 
global_edit_master.class.php:				$this->page_break_arr=$page_breakupdate_arr;
global_edit_master.class.php:		$this->page_break_arr=explode(',',Cfg::Column_break_points);
global_edit_master.class.php:		$this->page_br_points=Cfg::Column_break_points;
global_edit_master.class.php:	rsort($this->page_break_arr);
global_edit_master.class.php:	if (implode(',',$this->page_break_arr)!==$this->page_break_points){  
global_edit_master.class.php:		$q="update $this->master_page_table set  page_update='".date("dMY-H-i-s")."', page_time=".time().",token='".mt_rand(1,mt_getrandmax()). "',page_break_points='".implode(',',$this->page_break_arr)."' where page_ref='$this->page_ref'";
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:     $this->show_more('Port Page Opts','noback','highlight smallest editbackground editfont button'.$this->column_lev_color,'Import  Page options from another page or export chosen option of this page to all other pages',600);
global_edit_master.class.php:	$this->print_wrap('import page options',true);
global_edit_master.class.php:	$q="select distinct page_ref, page_title, page_filename from $this->master_page_table";  
global_edit_master.class.php:	$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	while (list($page_ref,$title,$filename) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:	echo'<p> <select class="editcolor editbackground editfont"  name="page_opts_import['.$this->page_ref.']">';       
global_edit_master.class.php:     printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="page_opts_export['.$this->page_ref.']"  type="checkbox" value="'.$this->page_ref.'">Export All Page Level Settings to other Pages</p>'); 
global_edit_master.class.php:     echo'<p> <select class="editcolor editbackground editfont"  name="page_width_import['.$this->page_ref.']">';       
global_edit_master.class.php:     printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="page_width_export['.$this->page_ref.']"  type="checkbox" value="'.$this->page_ref.'">Export this Page Width to other Pages</p>'); 
global_edit_master.class.php:     echo'<p> <select class="editcolor editbackground editfont"  name="page_rwd_import['.$this->page_ref.']">';       
global_edit_master.class.php:     printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="page_rwd_export['.$this->page_ref.']"  type="checkbox" value="'.$this->page_ref.'">Export this Page  RWD Grid Break Points to other Pages</p>'); 
global_edit_master.class.php:     echo'<p> <select class="editcolor editbackground editfont"  name="page_special_class_import['.$this->page_ref.']">';       
global_edit_master.class.php:     printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="page_special_class_export['.$this->page_ref.']"  type="checkbox" value="'.$this->page_ref.'">Export this Page HTag and Class Special Styles to other Pages</p>'); 
global_edit_master.class.php:     echo'<p> <select class="editcolor editbackground editfont"  name="page_editor_color_import['.$this->page_ref.']">';       
global_edit_master.class.php:     printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="page_editor_color_export['.$this->page_ref.']"  type="checkbox" value="'.$this->page_ref.'">Export this Page  Editor Colors to other Pages</p>');
global_edit_master.class.php:     echo'<p> <select class="editcolor editbackground editfont"  name="page_style_import['.$this->page_ref.']">';       
global_edit_master.class.php:     printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="page_style_export['.$this->page_ref.']"  type="checkbox" value="'.$this->page_ref.'">Export this Page  Default Page Styles to other Pages</p>'); 
global_edit_master.class.php:     echo'<p> <select class="editcolor editbackground editfont"  name="page_cache_import['.$this->page_ref.']">';       
global_edit_master.class.php:     printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="page_cache_export['.$this->page_ref.']"  type="checkbox" value="'.$this->page_ref.'">Export this Page Image Cache Sizes to other Pages</p>'); 
global_edit_master.class.php:     printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="page_image_quality_export['.$this->page_ref.']"  type="checkbox" value="'.$this->page_ref.'">Export this Page Export Image Quality to other Pages</p>'); 
global_edit_master.class.php:     printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="page_dbbackups_export['.$this->page_ref.']"  type="checkbox" value="'.$this->page_ref.'">Export this Page Export the number of stored Backup Dbs to other Pages</p>'); 
global_edit_master.class.php:	$this->submit_button();
global_edit_master.class.php:	$this->show_close('Import Page Options');
global_edit_master.class.php:	$this->show_more('Configure this Page','buffer_configure_page',$this->column_lev_color.' smallest editbackground editfont button'.$this->column_lev_color,'','','','','asis');
global_edit_master.class.php:	$this->print_wrap('configure wrap',true);
global_edit_master.class.php:	$this->show_more('Scale Units Overview &amp; Some Basic Pointers on the editor system','noback','','',800);
global_edit_master.class.php:	$this->print_wrap('basic pointers');
global_edit_master.class.php:     $this->editor_overview();
global_edit_master.class.php:     $this->close_print_wrap('basic pointers');
global_edit_master.class.php:	$this->show_close('Some Basic Pointers on the editor system');
global_edit_master.class.php:	$this->configure_editor();
global_edit_master.class.php:	$this->show_more('Set Image Dir Cache Sizes','noback','','',600);
global_edit_master.class.php:	$this->print_wrap('cache sizes'); 
global_edit_master.class.php:	<input type="text" value="'.$this->page_cache.'" name="page_cache"   size="50" maxlength="65">
global_edit_master.class.php:	$this->close_print_wrap('cache sizes');
global_edit_master.class.php:	$this->show_close('Set Image Dir Cache Sizes');
global_edit_master.class.php:	$this->show_more('Set RWD Breakpoints','noback','');
global_edit_master.class.php:	$this->print_wrap('break points'); 
global_edit_master.class.php:	<input type="text" value="'.$this->page_br_points.'" name="page_break_points"   size="20" maxlength="40">';
global_edit_master.class.php:	$this->close_print_wrap('break points'); 
global_edit_master.class.php:	$this->show_close('Set RWD Breakpoints');
global_edit_master.class.php:	$this->show_more('Tune RWD Breakpoints','noback','');
global_edit_master.class.php:	$this->print_wrap('tune break points'); 
global_edit_master.class.php:	foreach ($this->page_break_arr as $bp){
global_edit_master.class.php:	echo '<p class="fsm'.$this->column_lev_color.'"><input type="radio" name="page_sub_bp" value="page" checked="checked">Substite Break Point(s) this page<br>
global_edit_master.class.php:	$this->close_print_wrap('tune break points'); 
global_edit_master.class.php:	$this->show_close('Change RWD Breakpoints');
global_edit_master.class.php:	$this->edit_styles_close('body','page_style','.'.$this->pagename,'background,font_color,text_shadow,font_family,font_size,borders','Set Main Background and Page Default Text Styles','noback',$msg);
global_edit_master.class.php:     $this->track_font_em($this->page_style);//track initial em status...
global_edit_master.class.php:	$this->show_more('Add Full Page background Slide Show');
global_edit_master.class.php:	$this->print_wrap('Page background Slide Show');  
global_edit_master.class.php:	if ($this->page_options[$this->page_slideshow_index]!=='enable_page_slideshow'){
global_edit_master.class.php:		printer::printx('<p class="editcolor"><input type="checkbox" name="page_options['.$this->page_slideshow_index.']" value="enable_page_slideshow">Enable Page Auto Slide Show</p>');
global_edit_master.class.php:	elseif ($this->page_options[$this->page_slideshow_index]==='enable_page_slideshow'){
global_edit_master.class.php:		printer::printx('<p class="editcolor"><input type="checkbox" name="page_options['.$this->page_slideshow_index.']" value="0">Disable Page Auto Slide Show</p>'); 
global_edit_master.class.php:	$this->close_print_wrap('Page background Slide Show'); 
global_edit_master.class.php:	$this->show_close('Add Full Page background Slide Show');
global_edit_master.class.php:	$this->show_more('Default Style Date, and Comment Styles','noback'); 
global_edit_master.class.php:	$this->print_wrap('Page Style Group, Date',true); 
global_edit_master.class.php:	$this->edit_styles_close('body','page_comment_style', '.'.$this->pagename.' .posted_comment','','Style Overall Comment Entries',false,'Comment Styles will affect all comment post feedback styles for posts made directly in this column');	
global_edit_master.class.php:	$this->edit_styles_close('body','page_date_style', '.'.$this->pagename.'  .style_date','','Style Post Date Entries',false,'Date Styling Affects Posts within this Column (And within any nested columns unless set there) with Show Post Date Enabled');
global_edit_master.class.php:	$this->edit_styles_close('body','page_comment_date_style', '.'.$this->pagename.' .style_comment_date','','Style Comment Date Entries',false,'Comment Date Styling Affects Comments within this Column (And within any nested columns unless set there)');
global_edit_master.class.php:	$this->edit_styles_close('body','page_comment_view_style', '.'.$this->pagename.' .style_comment_view','','Style #/view/Leave Comments',false,'Style the #of Comments  and View/Leave Comments Link');
global_edit_master.class.php:	list($fdate,$val,$num)=$this->format_date();
global_edit_master.class.php:	$this->show_more('Choose/Style Date Format','noback');
global_edit_master.class.php:		$checked=($i===$this->page_options[$this->page_date_format_index])?'checked="checked"':'';
global_edit_master.class.php:		$onclick=(strpos($this->{'fdate'.$i},'style_month')!==false)?'onclick="edit_Proc.displaythis(\'page_style_day\',this,\'#ebf4e7\')"':'';
global_edit_master.class.php:	<input type="radio" '.$onclick.' name="page_options['.$this->page_date_format_index.']" '.$checked.' value="'.$i.'">'.$this->{'fdate'.$i}.'<br>');
global_edit_master.class.php:	$val=(is_numeric($this->page_options[$this->page_date_format_index])&&$this->page_options[$this->page_date_format_index]<$i)?$this->page_options[$this->page_date_format_index]:0;
global_edit_master.class.php:	$styleit=(strpos($this->{'fdate'.$val},'style_month')!==false)?'style="background:#ebf4e7;"':'style="display:none"';
global_edit_master.class.php:	$this->edit_styles_close('body','page_style_day', '.'.$this->pagename.' .style_day','','Additional Style Day in Date',false,'Additionally style    the day in your chosen date format');
global_edit_master.class.php:	$this->edit_styles_close('body','page_style_month', '.'.$this->pagename.'  .style_month','','Additional Style Month in Date',false,'Additionally style the Month in your chosen date format');
global_edit_master.class.php:	$this->show_close('Choose/Style Date Format');
global_edit_master.class.php:	$this->close_print_wrap('Page Style Group, Date'); 
global_edit_master.class.php:	$this->show_close('Style Group,Date, and Comment Styles');
global_edit_master.class.php:	$this->show_more('Style H-Tags and Special Classes','noback'); 
global_edit_master.class.php:	 $this->print_wrap('special styles',true);
global_edit_master.class.php:	 if(is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'css_data_sheet_'.$this->pagename.$this->passclass_ext)){
global_edit_master.class.php:		$this->render_view_css=unserialize(file_get_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'css_data_sheet_'.$this->pagename.$this->passclass_ext)); 
global_edit_master.class.php:		$this->show_more('View Current Tag and Class Styles');
global_edit_master.class.php:		printer::array_print($this->render_view_css); 
global_edit_master.class.php:		$this->show_close('View Current Tag and Class Styles');
global_edit_master.class.php:	else $this->render_view_css='';
global_edit_master.class.php:	$this->edit_styles_close('bodyview','page_hr','.'.$this->pagename.' hr','width_special,width_max_special,width_min_special,background,padding_top,padding_bottom,padding_left,padding_right,margin_top,margin_bottom,margin_left,borders,box_shadow,outlines,radius_corner','Set HR Tags','noback',$msg);
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_h1','.'.$this->pagename.' div h1',$htag_styles,'Set H1 Tags','noback',$msg);
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_h2','.'.$this->pagename.' div h2',$htag_styles,'Set H2 Tags','noback',$msg);
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_h3','.'.$this->pagename.' div h3',$htag_styles,'Set H3 Tags','noback',$msg);
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_h4','.'.$this->pagename.' div h4',$htag_styles,'Set H4 Tags','noback',$msg);
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_h5','.'.$this->pagename.' div h5',$htag_styles,'Set H5 Tags','noback',$msg);
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_h6','.'.$this->pagename.' div h6',$htag_styles,'Set H6 Tags','noback',$msg);
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_myclass1','.'.$this->pagename.' .myclass1',$htag_styles,'Set Class myclass1 Styles','noback',$msg); 
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_myclass2','.'.$this->pagename.'  .myclass2',$htag_styles,'Set Class myclass2 Styles','noback',$msg); 
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_myclass3','.'.$this->pagename.'  .myclass3',$htag_styles,'Set Class myclass3 Styles','noback',$msg); 
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_myclass4','.'.$this->pagename.' .myclass4',$htag_styles,'Set Class myclass4 Styles','noback',$msg); 
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_myclass5','.'.$this->pagename.' .myclass5',$htag_styles,'Set Class myclass5 Styles','noback',$msg); 
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_myclass6','.'.$this->pagename.' .myclass6',$htag_styles,'Set Class myclass6 Styles','noback',$msg); 
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_myclass7','.'.$this->pagename.' .myclass7',$htag_styles,'Set Class myclass7 Styles','noback',$msg); 
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_myclass8','.'.$this->pagename.' .myclass8',$htag_styles,'Set Class myclass8 Styles','noback',$msg); 
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_myclass9','.'.$this->pagename.' .myclass9',$htag_styles,'Set Class myclass9 Styles','noback',$msg);  
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_myclass10','.'.$this->pagename.' .myclass10',$htag_styles,'Set Class myclass10 Styles','noback',$msg); 
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_myclass11','.'.$this->pagename.' .myclass11',$htag_styles,'Set Class myclass11 Styles','noback',$msg); 
global_edit_master.class.php:     $this->edit_styles_close('bodyview','page_myclass12','.'.$this->pagename.' .myclass12',$htag_styles,'Set Class myclass12 Styles','noback',$msg);
global_edit_master.class.php:     $this->submit_button();
global_edit_master.class.php:	$this->show_close('Style H-Tags and Special Classe');
global_edit_master.class.php:	$this->show_more('Style A Links');
global_edit_master.class.php:	$this->print_wrap('alinks','b3salmon editbackground editfont');
global_edit_master.class.php:	$this->edit_styles_close('body','page_link', ' A:LINK,body A:visited','font_family,font_weight,font_color,text_shadow,letter_spacing,italics_font,small_caps,text_underline','Style Links'); 
global_edit_master.class.php:	$this->show_more('Style Hover Over Link Color');
global_edit_master.class.php:	$this->print_wrap('hover link');
global_edit_master.class.php:	$page_alink_hover_color=(preg_match(Cfg::Preg_color,$this->page_options[$this->page_alink_hover_color_index]))?$this->page_options[$this->page_alink_hover_color_index]:'inherit';
global_edit_master.class.php:	$this->css.= "body div a:hover{ $palhc}";
global_edit_master.class.php:	$span_color=(preg_match(Cfg::Preg_color,$this->page_options[$this->page_alink_hover_color_index]))?'<span class="fs1npred" style="background-color:#'.$this->page_options[$this->page_alink_hover_color_index].';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>':''; 
global_edit_master.class.php:	printer::alert('Set Default Link Hover Color <input onclick="jscolor.installByClassName(\'colorhover_id\');" style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text" name="page_options['.$this->page_alink_hover_color_index.']" id="colorhover_id" value="'.$page_alink_hover_color.'" size="12" maxlength="6" class="colorhover_id {refine:false}">'.$span_color.'<br>',false,'left editcolor editbackground editfont');
global_edit_master.class.php:	$this->close_print_wrap('hover link');
global_edit_master.class.php:	$this->show_close('Style Hover Over Link Color');
global_edit_master.class.php:	$this->show_close('Style A Links');
global_edit_master.class.php:	$this->show_more($msg,'','','','700');
global_edit_master.class.php:	$this->print_wrap($msg);
global_edit_master.class.php:	$this->textarea($this->page_head,'page_head','100','16');
global_edit_master.class.php:	$this->submit_button();
global_edit_master.class.php:	$this->css.=$this->page_custom_css;
global_edit_master.class.php:	$this->show_close($msg);
global_edit_master.class.php:	$this->show_more('Custom Page CSS','','','','700');
global_edit_master.class.php:	$this->print_wrap('Custom Page CSS');
global_edit_master.class.php:	$this->textarea($this->page_custom_css,'page_custom_css','100','16');
global_edit_master.class.php:	$this->submit_button();
global_edit_master.class.php:	$this->css.=$this->page_custom_css;
global_edit_master.class.php:	$this->show_close('Custom Page CSS');
global_edit_master.class.php:	$this->show_more('Maintenance');
global_edit_master.class.php:	$this->print_wrap('maintenance',true);
global_edit_master.class.php:	$this->print_wrap('file gnerate');
global_edit_master.class.php:	$this->print_wrap('file gnerate');
global_edit_master.class.php:	$this->print_wrap('regen_backup_table','fsmredAlert');
global_edit_master.class.php:	$msg='Regenerates the backup database. Will recompile list of all stored backup gzipped sql files and delete old files in excess of '.$this->backup_copies. ' (Stored Db gz Copies Setting may be changed in the page_configurations or the setting default in the Cfg file';
global_edit_master.class.php:	$this->print_wrap('iframe all','fsmredAlert');
global_edit_master.class.php:	$this->submit_button();
global_edit_master.class.php:	$this->print_wrap('iframe all_website');
global_edit_master.class.php:	$this->submit_button();
global_edit_master.class.php:	$this->print_wrap('cache regen','fsmredAlert');
global_edit_master.class.php:	$this->submit_button();
global_edit_master.class.php:	$this->print_wrap('cache regen','fsmredAlert');
global_edit_master.class.php:	$this->submit_button();
global_edit_master.class.php:	$this->show_close('Maintenance');
global_edit_master.class.php:	$this->edit_metadata();
global_edit_master.class.php:	$this->submit_button(); 
global_edit_master.class.php:	$this->show_close('Configure this Page','buffer_configure_page');//<!--End Show More Configure-->
global_edit_master.class.php:	$this->show_more('Full Pages Navigation','','button'.$this->column_lev_color.' navnavy smallest','',' ');
global_edit_master.class.php:	$this->print_wrap('full page navigation');
global_edit_master.class.php:	$q="select distinct page_ref, page_title, page_filename from $this->master_page_table  order by page_ref ASC";  
global_edit_master.class.php:	$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false); 
global_edit_master.class.php:	while (list($page_ref,$title,$filename) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:		echo '<p class="editbackground editfont"><a style="color:inherit;"  href="'.$filename.$this->ext.'">'.$title.': &nbsp;&nbsp;<span class="smaller highlight" title="Page Ref:'. $page_ref.' filename: '.$filename.$this->ext.'">'.$page_ref.'</a></p><br>'; 
global_edit_master.class.php:	$this->close_print_wrap('full page navigation');
global_edit_master.class.php:	$this->show_close('full pages nav'); 
global_edit_master.class.php:	$this->spacing($style,$val,'left','left positioning','Adjust Position of absolute or relative positioned element/post/column','','','',$field);
global_edit_master.class.php:	$this->abs_spacing($style,$val,'right','Right Spacing','Position from Right Relative Absolute positioned elements');
global_edit_master.class.php:	$this->abs_spacing($style,$val,'top','Top Spacing','Position from Top Relative Absolute positioned elements. ');
global_edit_master.class.php:	$this->abs_spacing($style,$val,'bottom','Bottom Spacing','Position from Bottom Relative Absolute positioned elements');
global_edit_master.class.php:	$size=(is_numeric($this->{$style}[$val])&&$this->{$style}[$val]<=$maxspace&&$this->{$style}[$val]>=0)?$this->{$style}[$val]:'None'; 
global_edit_master.class.php:	$sizepx=($size !=='None')?$this->{$style}[$val].'px':$size;
global_edit_master.class.php:		$this->mod_spacing($style.'['.$val.']',$size,0,$maxspace,1,'%','none',$msgjava);   
global_edit_master.class.php:     $this->{$fstyle}[$val]=($sizepx==='None')?'':$css_class.':'.$final;
global_edit_master.class.php:     $font_arr=explode('@@',$this->{$style}[$val]);
global_edit_master.class.php:     $this->show_more('Font-Size','',' highlight editbackground editfontfamily','In columns and posts, body font-size may be used to setup em units with or without scaling effect');
global_edit_master.class.php:     $this->print_wrap('Font-Size Choices','','highlight editbackground editfontfamily','Choose px or scalable font sizes');
global_edit_master.class.php:     if (!empty($this->current_font_size))
global_edit_master.class.php:          printer::print_info("Current Inheritable Parent Value: $this->current_font_size  <br> Parent Source: $this->current_font_source");
global_edit_master.class.php:     elseif (!$this->is_page)printer::print_info("Inheritable parent font-size the default 16px.");
global_edit_master.class.php:     $this->show_more('Use font px units &amp; scaling px units');
global_edit_master.class.php:     echo'<p class="'.$this->column_lev_color.' clear editbackground editfont">Font Size: Currently '.$msg.'px<br>';
global_edit_master.class.php:     $this->mod_spacing($style.'['.$val.'][0] ',$fontsize1,0,100,1,'px','none',$msgjava); 
global_edit_master.class.php:     $this->rwd_scale($this->{$style}[$val],$style.'['.$val.']',"$this->pelement",'font-size','font size px','px',0,7,true,1);
global_edit_master.class.php:     $this->show_close('Use font px units ');
global_edit_master.class.php:               $scale=($this->rem_scale)?'on':'off';
global_edit_master.class.php:               $scale=($this->terminal_em_scale)?'on':'off';
global_edit_master.class.php:               $value=$this->terminal_font_em_px;
global_edit_master.class.php:               $final="<br>giving value of 1em unit = {$this->terminal_font_em_px}px for padding/margins/widths/etc. in this post/col";
global_edit_master.class.php:		if ($this->is_page&&$directcss!==false){//use html body to give greater priority
global_edit_master.class.php:			$this->pagecss.="
global_edit_master.class.php:               $this->css.="
global_edit_master.class.php:	$this->show_more('Use other font-size units');
global_edit_master.class.php:     printer::print_notice("Equivalent of 1em for font-size: {$this->current_font_em_px}px $final"); 
global_edit_master.class.php:     ($this->is_page)&&printer::print_warn('Using em for the default page level font-size (body) multiplies with the html level font-size of 16px including scaling if initiated for rem units.');
global_edit_master.class.php:      $more='';/*(!$this->is_page&&(!$this->col_primary||$this->is_blog))?'
global_edit_master.class.php:     echo'<p class="'.$this->column_lev_color.' editbackground editfont">Alt. Unit Font Size: Currently '.$msg2.'<br>';
global_edit_master.class.php:     $this->mod_spacing($style.'['.$val.'][2] ',$fontsize2,0,10,.1,'units','none',$msgjava); 
global_edit_master.class.php:	$this->submit_button();  
global_edit_master.class.php:	$this->show_close('Use other font-size units');  
global_edit_master.class.php:          $this->show_close('Font-Size Choices');  
global_edit_master.class.php:		$this->hidden_array[]='<input type="hidden" value="'.($fontsize1*16).'" name="'.$style.'['.$val.'][0]">'; 
global_edit_master.class.php:               $this->{$fstyle}[$val]=$style1.$style2;
global_edit_master.class.php:          if ($this->is_page&&empty($style1)&&empty($style2))
global_edit_master.class.php:               $this->{$fstyle}[$val]='font-size:16px';//insure value of default font size 
global_edit_master.class.php:               $this->css.='
global_edit_master.class.php:      html '.$this->pelement.'{'.$style2.'}';
global_edit_master.class.php:          if (!$this->is_blog&&!empty($style2)){  
global_edit_master.class.php:               $this->current_font_size=$style2;
global_edit_master.class.php:          elseif(!$this->is_blog&&!empty($style1)){ 
global_edit_master.class.php:               $this->current_font_size=$style1;
global_edit_master.class.php:          $this->current_font_source=($this->is_page)?'body':'c'.$this->col_id;
global_edit_master.class.php:	$this->spacing($style,$val,$width,'Width','Straight forward Width option will not override a max-width or min-width property','','',false, $field,$directcss);
global_edit_master.class.php:	$this->spacing($style,$val,$width,'Max Width','Max-Width sets a maximum width and overrides width property','','',false, $field,$directcss);
global_edit_master.class.php:     $this->spacing($style,$val,$width,'Min-Width','Note: Media Query removing Minimum Width is automatically generated at viewports at or below the min-width value set! Minimum Width sets a minimum width and overrides width property','','',false, $field,$directcss);
global_edit_master.class.php:	$this->spacing($style,$val,'height','Height','Straight forward Height option will not override  a max-height or min-height property','','',false, $field,$directcss);
global_edit_master.class.php:	$this->spacing($style,$val,'max-height','Max Height','Max-Height sets a maximum height and overrides height property','','',false, $field,$directcss);
global_edit_master.class.php:     $this->spacing($style,$val,'min-height','Min-Height','Minimum Height sets a minimum height and overrides height property','','',false, $field,$directcss);
global_edit_master.class.php:     if ($this->column_use_flex_array[$this->column_level]){
global_edit_master.class.php:	$maxspace=$this->column_net_width[$this->column_level];
global_edit_master.class.php:	$wid=$this->{$style}[$val]=(!empty($this->{$style}[$val])&&is_numeric($this->{$style}[$val])&&$this->{$style}[$val]<=100)?$this->{$style}[$val]:'';
global_edit_master.class.php:	$widval=(!empty($wid)&&$this->use_blog_main_width)?$wid:0;
global_edit_master.class.php:	$px=(empty($wid))?'None Chosen':(intval(ceil($wid*$this->column_net_width[$this->column_level]/10)/10)).'px';
global_edit_master.class.php: 	printer::alertx('<p class="highlight editbackground editfont" title="The Column Width less its margins and paddings sets the Upper Limit for Post Width. Optionally set a narrower Post Width if required (does not effect other posts in this Column). The total width Available for your actual content such as text or an images will be narrowed by values of padding and margin styles made in this post styles">Max Width Available: <span class="editcolor editbackground editfont">'.(intval(ceil($this->column_net_width[$this->column_level]*10)/10)).'px</span></p>');
global_edit_master.class.php:     if ($this->use_blog_main_width)
global_edit_master.class.php:		$factor=$this->column_net_width[$this->column_level]/100; 
global_edit_master.class.php:          $this->mod_spacing($style.'['.$val.']',$widval,0,100,.05,'%','',$msgjava,$factor,'px');
global_edit_master.class.php:	$this->submit_button();		 
global_edit_master.class.php:	$maxspace=($this->is_page)?4000:$this->column_total_width[0];//limit width
global_edit_master.class.php:	$type=($this->is_page)?'page':(($this->is_column)?'column':'blog'); 
global_edit_master.class.php:	$spacing_arr=explode('@@',$this->{$style}[$val]);
global_edit_master.class.php:	$maxspace=($this->is_page&&$showpercent)?$this->page_width:(($showpercent)?$this->column_total_width[$this->column_level]:4000);//limit width
global_edit_master.class.php:	($this->is_page)&&$showpercent=false;	 
global_edit_master.class.php:	$percent=($showpercent)?(ceil($this->{$style}[$val]*100/$this->column_total_width[$this->column_level]*10)/10):''; 
global_edit_master.class.php:	$this->show_more($msg,'',$class.' editbackground editfont italic info',$title);
global_edit_master.class.php:          $this->show_more('Negative Value Option','','highlight click editbackground editfont tiny');
global_edit_master.class.php:          $this->show_close('Negative Val Option');
global_edit_master.class.php:     $pxpercent=(!$this->is_page&&$showpercent)?'&nbsp;&nbsp;('.$current_px*100/$this->current_total_width.'% Avail Parent Wid)':'';
global_edit_master.class.php:     $this->show_more('Choose Px Units'); 
global_edit_master.class.php:	$factor=(!$this->is_page)?100/$this->current_total_width:1;
global_edit_master.class.php:	$unit2=(!$this->is_page&&$showpercent)?'%':'';  
global_edit_master.class.php:	$this->mod_spacing($style.'['.$val.']['.$start.']',$current_px,0,$maxspace,1,$unit1,'',$msgjava,$factor,$unit2);
global_edit_master.class.php:     $pass_element=($directcss!==false&&!empty($directcss))?$directcss:$this->pelement;
global_edit_master.class.php:	 $this->rwd_scale($pos_neg.$this->{$style}[$val],$style.'['.$val.']'," $pass_element",$css_style,$msg.' px','px',$start,7,true,1); 
global_edit_master.class.php:	$this->submit_button();
global_edit_master.class.php:     $this->show_close('Choose Px Units');
global_edit_master.class.php:                         $remscale=($this->rem_scale)?'px scaling on':'px scaling off';
global_edit_master.class.php:                         $emscale=($this->terminal_em_scale)?'px scaling on':'px scaling off';
global_edit_master.class.php:                         $pxequiv='&nbsp;&nbsp; = '.($this->terminal_font_em_px*${'current_'.$ext}).$emscale;
global_edit_master.class.php:	$this->show_more('Use Other '.$msg.' Units');
global_edit_master.class.php:     $emscale=($this->terminal_em_scale)?'px scaling on':'px scaling off';
global_edit_master.class.php:     $remscale=($this->rem_scale)?'px scaling on':'px scaling off';
global_edit_master.class.php:     printer::print_info("each em unit (if used) has current equivalent = $this->terminal_font_em_px$emscale");
global_edit_master.class.php:     $this->show_more('Setting up em rem info','','info','Click for important info on em rem');
global_edit_master.class.php:     $this->show_close('Setting up em rem info');
global_edit_master.class.php:	$this->mod_spacing($style.'['.$val.']['.($start+2).']',$current_percent,0,100,.05,'%','none');
global_edit_master.class.php:     $pxpercent=(!$this->is_page&&$showpercent)?'&nbsp;&nbsp;('.$current_em*$this->terminal_font_em_px*100/$this->current_total_width.'% Avail Parent Wid)':''; 
global_edit_master.class.php:	$factor=(!$this->is_page)?$this->terminal_font_em_px*100/$this->current_total_width:1;
global_edit_master.class.php:	$unit2=(!$this->is_page&&$showpercent)?'%':''; 
global_edit_master.class.php:	$this->mod_spacing($style.'['.$val.']['.($start+3).']',$current_em,0,200,.05,'em','none','',$factor,$unit2);
global_edit_master.class.php:     $pxpercent=(!$this->is_page&&$showpercent)?'&nbsp;&nbsp;('.$current_rem*16*100/$this->current_total_width.'% Avail Parent Wid)':''; 
global_edit_master.class.php:	$factor=(!$this->is_page)?16.*100/$this->current_total_width:1;
global_edit_master.class.php:	$unit2=(!$this->is_page&&$showpercent)?'%':''; 
global_edit_master.class.php:	$this->mod_spacing($style.'['.$val.']['.($start+4).']',$current_rem,0,200,.05,'rem','none','',$factor,$unit2);
global_edit_master.class.php:	$this->mod_spacing($style.'['.$val.']['.($start+5).']',$current_vw,0,100,.02,'vw','none');
global_edit_master.class.php:		$this->mod_spacing($style.'['.$val.']['.($start+6).']',$current_vh,0,100,.02,'vh','none');
global_edit_master.class.php:	$this->submit_button();
global_edit_master.class.php:	$this->show_close('Use other spacing units'); 
global_edit_master.class.php:	$this->submit_button(); 
global_edit_master.class.php:	$this->show_close($msg); 
global_edit_master.class.php:          $csstype=($this->is_page)?'pagecss':'css';
global_edit_master.class.php:           if ($directcss!==false&&!empty($directcss)){//direct css is css expressed directly with this->css.=   instead of collected and aggregrated with other css that is expressed under same classname through the main style editor
global_edit_master.class.php:                                   $remscale=($this->rem_scale)?'px scaling on':'px scaling off';
global_edit_master.class.php:                                   $emscale=($this->terminal_em_scale)?'px scaling on':'px scaling off'; 
global_edit_master.class.php:                                   $pxequiv='&nbsp;&nbsp; = '.($this->terminal_font_em_px*16*${'current_'.$ext}).$emscale;
global_edit_master.class.php:                              $this->$csstype.="
global_edit_master.class.php:                         $this->$csstype.=$directcss.'{'.$ifempty.'}';  
global_edit_master.class.php:                    $this->$csstype.=$directcss.'{'.$overridevalue.'}';
global_edit_master.class.php:               $this->{$fstyle}[$val]='';
global_edit_master.class.php:                              $this->{$fstyle}[$val].=$css_style.':'.$pos_neg.${'current_'.$ext}.$scaleunit.';'; 
global_edit_master.class.php:                                   $this->$csstype.='
global_edit_master.class.php:html '.$this->pelement.'{'.$css_style.':'.$pos_neg.${'current_'.$ext}.$scaleunit.';}';
global_edit_master.class.php:                         $this->{$fstyle}[$val]=$ifempty;
global_edit_master.class.php:                    $this->{$fstyle}[$val]=$overridevalue;
global_edit_master.class.php:	$this->spacing($style,$val,'padding-bottom','Padding Bottom Spacing','Adding bottom padding-spacing creates space below this post, column, etc. Augments the background color and spacing within borders if either used!','hidepad','','','','','','Default Value 0');
global_edit_master.class.php:	$this->spacing($style,$val,'padding-right','Padding Right Spacing','Adding right padding-spacing creates space on the right of this post, column, etc. Augments the background color and spacing within borders if either used!','hidepad','',true, '','','','Default Value 0');
global_edit_master.class.php:     $this->spacing($style,$val,'padding-left','Padding Left Spacing','Creates space on the left of this post, column, etc. Augments the background color and spacing within borders if either used!','hidepad','',true, $field,'','','Default Value 0');
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){  
global_edit_master.class.php:    $this->spacing($style,$val,'padding-top','Padding Top Spacing' ,'Creates space on the top of this post, column, etc. Augments the background color and spacing within borders if either used.','hidepad',false,'','','','','Default Value 0');
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){ 
global_edit_master.class.php:	$this->spacing($style,$val,'margin-top','Margin top Spacing','Creates space on the top of this post, column, etc. The Space will be outside of borders or Background Colors if either is used!!','hidemar','','','','','','Default Value 0',array('auto'=>'margin-top:auto;'));  
global_edit_master.class.php:     $this->spacing($style,$val,'margin-bottom','Margin Bottom Spacing','Creates space on the bottom of this post, column, etc. The Space will be outside of borders or Background Colors if either is used!!','hidemar','','','','','','Default Value: 0',array('auto'=>'margin-bottom:auto;')); 
global_edit_master.class.php:	if ($this->rwd_post&&strpos($style,'style')!==false)return; 
global_edit_master.class.php:     $this->spacing($style,$val,'margin-right','Margin Right Spacing','Creates space to the right of this post, column, etc. that will be outside of borders or Background Colors if either is used!!','hidemar','',true,$field,'','','Default Value: margin-right:auto; (for centering).',array('zero'=>'margin-right:0;'));
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){ 
global_edit_master.class.php:		if ($this->rwd_post&&strpos($style,'style')!==false){
global_edit_master.class.php:			$this->show_more('RWD Margin Left Right Info','noback','info underline italic');
global_edit_master.class.php:			printer::printx('<p class="fsminfo '.$this->column_lev_color.' editbackground editfont">When in RWD mode set left and right Spaces as options when choosing pos Grid units. The spaces will also be added as information in the total grid unit tracker!</p>'); 
global_edit_master.class.php:			$this->show_close('RWD Margin Left Right Info');
global_edit_master.class.php:	$this->spacing($style,$val,'margin-left','Margin Left Spacing','Creates space on the left of this post, column, etc. that  will be outside of borders or Background Colors if either is used!!','hidemar','',true,$field,'','','Default Value: margin-left:auto; (for centering)',array('zero'=>'margin-left:0;'));  
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){  
global_edit_master.class.php:		$msg= (empty($this->{$style}[$val]))? 'Default Value': str_replace(';','',str_replace('=>',',',$this->{$style}[$val]));  
global_edit_master.class.php:		$this->show_more('Font Family ', 'noback','editbackground editfont '.$this->column_lev_color.' italic info',' Choose the Font Family Style for this post here','500');
global_edit_master.class.php:		echo '<p class="fs1red"><span class="highlight" title="Select a new text style (font-family) for this post from the dropdown menu. View a image of how the text style looks, click the link below. Choose None to return to the inherited font-family value.  &#40;Inherited Parent Values are the most recent values that have been set in the parent Columns and if not set there then in the body or the default browser font if none has been chosen in any parent!!">Text Font Style: </span>Currently:<br><span class="'.$this->column_lev_color.'"> '.$msg.'</span></p>';
global_edit_master.class.php:          $mod_val=str_replace(';','',$this->{$style}[$val]);
global_edit_master.class.php:		   foreach ($this->fonts_all as $family){ 
global_edit_master.class.php:		$this->submit_button();
global_edit_master.class.php:		$this->show_close('Font Family');
global_edit_master.class.php:	$value=str_replace('=>',',',$this->{$style}[$val]);
global_edit_master.class.php:	if (in_array($v,$this->fonts_extended)){
global_edit_master.class.php:		$this->at_fonts[]=$v;
global_edit_master.class.php:	$this->{$fstyle}[$val]=(!empty($value))?'font-family: '.$value.';':'0';
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){  
global_edit_master.class.php:		$msg= (empty($this->{$style}[$val]))? 'None ': $this->{$style}[$val];
global_edit_master.class.php:		$selected=(!empty($this->{$style}[$val]))?$this->{$style}[$val]:400;
global_edit_master.class.php:		<option  value="'.$this->{$style}[$val].'" selected="selected">'.$selected.'</option>
global_edit_master.class.php:     $this->{$fstyle}[$val]=(empty($this->{$style}[$val]))?'0':'font-weight: '.$this->{$style}[$val].'; ';
global_edit_master.class.php:     $msg= ($this->{$style}[$val]==='center'||$this->{$style}[$val]==='right'||$this->{$style}[$val]==='left')?  $this->{$style}[$val]:'Full Row (margin-right:auto;margin-left:auto;';
global_edit_master.class.php:     $this->show_more('Float Right/Left/Center', 'noback','editbackground editfont highlight',' Choose to Position Next to instead of full Space',500);
global_edit_master.class.php:        <fieldset class="sfield"><legend></legend><p class="'.$this->column_lev_color.' editbackground editfont  Os3salmon fsminfo float">Float: Currently '.$msg.'<br>
global_edit_master.class.php:    <option  value="'.$this->{$style}[$val].'" selected="selected">'.$current.'</option>
global_edit_master.class.php:     $this->show_close('Float Right/Left');
global_edit_master.class.php:	$this->{$fstyle}[$val]=($this->{$style}[$val]==='right'||$this->{$style}[$val]==='left')?'float:'.$this->{$style}[$val].'; ':(($this->{$style}[$val]==='none')?'':'margin-right:auto;margin-left:auto;');
global_edit_master.class.php:	if (arrayhandler::is_empty_array($this->{$style}[$val])){//default may be set to 1
global_edit_master.class.php:		$radius_array=explode('@@',$this->{$style}[$val]);
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){  
global_edit_master.class.php:          $this->show_more('Radius Background', 'noback','editbackground editfont highlight',' Radius a Colored Post Background if in use Here!',500);
global_edit_master.class.php:          $this->print_wrap('wrap radius',false);
global_edit_master.class.php:          echo '<p class="fsminfo editbackground editfont rad10 '.$this->column_lev_color.' editfont">As an Example we have used a radius around this text with a border to show the radius effect. A value of 10px was selected for each corner<br> <span class="italic"> Note that your Radius will only show up when background colors, box shadows, and borders are used</span> <br> Radius the stylized corners of Column, Posts, and Menu-Link Button Area, and Images directly.</p>'; 
global_edit_master.class.php:          $this->spacing($style,$val,$css_type,'Radius All Corners','Creates Radius on all four background corners using one value &amp; multiple unit choices','','','','','',8);//allowing three xtra for incorporation of px radius scale units..
global_edit_master.class.php:          $this->show_more('or choose value for each corner in px');
global_edit_master.class.php:             <p class="'.$this->column_lev_color.' editbackground editfont">Choose: Top Left Radius:
global_edit_master.class.php:             <p class="'.$this->column_lev_color.' editbackground editfont">Choose: Top Right Radius:
global_edit_master.class.php:             <p class="'.$this->column_lev_color.' editbackground editfont"> Choose: Bottom Right Radius:
global_edit_master.class.php:               <p class="'.$this->column_lev_color.' editbackground editfont">Choose: Bottom Left Radius:
global_edit_master.class.php:          $this->show_close('or choose value for each corner in px');
global_edit_master.class.php:          $this->submit_button();
global_edit_master.class.php:          $this->show_close('radius');
global_edit_master.class.php:          $this->{$fstyle}[$val]=$radiuscss;
global_edit_master.class.php:	if (arrayhandler::is_empty_array($this->{$style}[$val])){//default may be set to 1
global_edit_master.class.php:		$transform_array=explode('@@',$this->{$style}[$val]);
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){   
global_edit_master.class.php:		$this->show_more('Rotate/Skew', 'noback','highlight editbackground editfont',' Rotate or Skew the Content of this post!',500);
global_edit_master.class.php:		$this->print_wrap('transform',false);
global_edit_master.class.php:		echo '<p class="fsminfo editbackground editfont rad5 skewx3 '.$this->column_lev_color.' editfont">we have demonstrated a skew Xdirection of 4 degrees around this text to show the transform option in practice.  Be sure to allow enough width for your final effect! For more info on using the css3 transform feature and examples see <a href="http://www.w3schools.com/cssref/css3_pr_transform.asp"> Column Examples</a></p>'; 
global_edit_master.class.php:		<p class="'.$this->column_lev_color.' editbackground editfont">Degrees of Rotation: Currently '.$size.'<br>
global_edit_master.class.php:		echo'<p class="'.$this->column_lev_color.' editbackground editfont">Skew Xdirection  Degrees: Currently '.$size.'<br>
global_edit_master.class.php:		echo'<p class="'.$this->column_lev_color.' editbackground editfont">Skew Ydirection Degrees: Currently '.$size.'<br>
global_edit_master.class.php:          $this->submit_button();
global_edit_master.class.php:		$this->show_close('tranform border');
global_edit_master.class.php:	$this->{$fstyle}[$val]=$transformcss;
global_edit_master.class.php:	if (arrayhandler::is_empty_array($this->{$style}[$val])){//default may be set to 1
global_edit_master.class.php:		$column_array=explode('@@',$this->{$style}[$val]);
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){  
global_edit_master.class.php:		$this->show_more('Multiple Columns', 'noback','highlight editbackground editfont',' turn this text into 2 or more columns',300);
global_edit_master.class.php:		$this->print_wrap('multiple cols');
global_edit_master.class.php:		echo '<p class="column2 '.$this->column_lev_color.' fsminfo editbackground editfont rad3 editfont">This text you are reading was set up with 2 columns and a space of 16px between the columns with no divider line showing. The columns will be split between the available width.<br>For quick overview of using the css3 column feature and examples see <a href="http://css-tricks.com/snippets/css/css-box-column/"> Column Examples.</a><br> </p>';
global_edit_master.class.php:		<p class="'.$this->column_lev_color.' editbackground editfont">Choose the number of columns: Currently '.$size.'<br>
global_edit_master.class.php:		echo'<p class="'.$this->column_lev_color.' editbackground editfont">Choose the spacing between columns Currently '.$size.' px <br>
global_edit_master.class.php:		echo'<p class="'.$this->column_lev_color.' editbackground editfont">Show  line Separator Between Columns: Currently '.$column_array[2].'<br>
global_edit_master.class.php:          $this->submit_button(); 
global_edit_master.class.php:		$this->show_close('multiple columns');
global_edit_master.class.php:	$col=(!empty($this->{$style}[$this->font_color_index]))?$this->{$style}[$this->font_color_index]:$this->editor_color;
global_edit_master.class.php:	$this->{$fstyle}[$val]=$columncss;
global_edit_master.class.php:	$border_sides=$this->border_sides;
global_edit_master.class.php:     $css_id=$this->pelement;
global_edit_master.class.php:	if (arrayhandler::is_empty_array($this->{$style}[$val])){//default may be set to 1
global_edit_master.class.php:		$parr=$border_array=explode('@@',$this->{$style}[$val]);
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){  
global_edit_master.class.php:		$this->show_more('Border styling','noback','editfont highlight editbackground editfont', 'For Information on Borders and to Choose Border Type, Colors, and Edges click Here',500);
global_edit_master.class.php:		$this->print_wrap('border styling wrap');
global_edit_master.class.php:		echo '<p style="margin:13px; padding:13px;border-width: 3px 0 3px 0; border-style:double; border-color:#'.$this->aqua.';" class="'.$this->column_lev_color.' editbackground editfont"><!--End function border style-->We have used a light blue border selecting top and bottom around this text with a border type: double and a border thickness of 4'.$px.'. Borders are lines dashes dots,etc. stylize around columns, posts, groups of posts or menu link &#34;buttons&#34; depending on which of these you are currently styling! <br></p>'; 
global_edit_master.class.php:		echo'<p class="'.$this->column_lev_color.' editbackground editfont">Choose Border Profile (Top Bottom Sides) Currently: '.$border_array[3].'<br></p>';
global_edit_master.class.php:          $this->mod_spacing($style.'['.$val.'][0]',$border_value,0,100,1,'px');
global_edit_master.class.php:          $this->rwd_scale($parr,$style.'['.$val.']',$css_id,$css_style,'border-width','px',0,5,true); 
global_edit_master.class.php:          $this->show_more('Use other border-size units');
global_edit_master.class.php:          $more='';/*(!$this->is_page&&(!$this->col_primary||$this->is_blog))?'
global_edit_master.class.php:          // (!$this->is_page&&(!$this->col_primary||$this->is_blog))&&printer::alert('<input type="radio" name="'.$style.'['.$val.'][1]" value="vw" '.$checked4.'>vw units'); 
global_edit_master.class.php:          echo'<p class="'.$this->column_lev_color.' editbackground editborder">Scalable border Size: Currently '.$border_value2.'<br>
global_edit_master.class.php:          $this->mod_spacing($style.'['.$val.'][8]',$border_value2,0,10,.1,'unit');
global_edit_master.class.php:          $this->submit_button();  
global_edit_master.class.php:          $this->show_close('Use other border-size units');
global_edit_master.class.php:		printer::alert('Set border Color <input onclick="jscolor.installByClassName(\'border_id'.$inc.'_'.self::$xyz.'\');" style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text" name="'.$style.'['.$val.'][1]" id="border_id'.$inc.'_'.self::$xyz.'" value="'.$border_array[1].'" size="12" maxlength="6" class="border_id'.$inc.'_'.self::$xyz.' {refine:false}">'.$span_color.'<br>',false,'left editcolor editbackground editfont');
global_edit_master.class.php:		$this->mod_spacing($style.'['.$val.'][4]',$border_opacity,0,100,1,'%');
global_edit_master.class.php:		echo'<p class="left '.$this->column_lev_color.'">Set Border Type Currently: '.$border_array[2].'<br>
global_edit_master.class.php:          $this->submit_button();
global_edit_master.class.php:		$this->show_close('Border styling');
global_edit_master.class.php:     $this->{$fstyle}[$val]=($border_array[3]!='No Border'&&!empty($blog_border_color))?$this->{$style}[$val]='border-width: '.$border_width.'; border-style:'. $blog_border_type.';'.$border_color:'';//this 
global_edit_master.class.php:	if (arrayhandler::is_empty_array($this->{$style}[$val])){//default may be set to 1
global_edit_master.class.php:		$outline_array=explode('@@',$this->{$style}[$val]);
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){  
global_edit_master.class.php:          $this->show_more('Outline Styling','noback','editfont highlight editbackground editfont', 'For Information on outlines and to Choose outline Type, Colors, and Edges click Here',500);
global_edit_master.class.php:		printer::alert('Set outline Color Here.  Use 0 or non color to remove outline<input onclick="jscolor.installByClassName(\'outline_id'.$inc.'_'.self::$xyz.'\');" style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text" name="'.$style.'['.$val.'][1]" id="outline_id'.$inc.'_'.self::$xyz.'" value="'.$outline_array[1].'" size="12" maxlength="6" class="outline_id'.$inc.'_'.self::$xyz.' {refine:false}">'.$span_color.'<span style="font-size: 1.1em; color: yellow;" id="outline_id'.$inc.'_'.self::$xyz.'instruct"></span><br>',false,'left editcolor editbackground editfont'); 
global_edit_master.class.php:		echo'<p class="left '.$this->column_lev_color.'">Set outline Type Currently: '.$outline_array[2].'<br>
global_edit_master.class.php:          $this->submit_button();
global_edit_master.class.php:		$this->show_close('Style Table params');//<!--Show More outline Style Table params-->'; 
global_edit_master.class.php:	$this->{$fstyle}[$val]=(preg_match(Cfg::Preg_color,$blog_outline_color))?$this->{$style}[$val]='outline-width: '.$outline_width.'px; outline-style:'. $blog_outline_type.'; outline-color:  #'.$blog_outline_color.';':'';//this
global_edit_master.class.php:	if (arrayhandler::is_empty_array($this->{$style}[$val])){ 
global_edit_master.class.php:		$shadow_array=explode('@@',$this->{$style}[$val]);
global_edit_master.class.php:	$shadow_array[$this->shadowbox_blur_radius_index]= (empty($shadow_array[$this->shadowbox_blur_radius_index]))? 0:$shadow_array[$this->shadowbox_blur_radius_index];
global_edit_master.class.php:	$shadow_array[$this->shadowbox_spread_radius_index]= (empty($shadow_array[$this->shadowbox_spread_radius_index]))? 0:$shadow_array[$this->shadowbox_spread_radius_index];
global_edit_master.class.php:	$shadow_array[$this->shadowbox_horiz_offset_index]= (empty($shadow_array[$this->shadowbox_horiz_offset_index]))? 0:$shadow_array[$this->shadowbox_horiz_offset_index];
global_edit_master.class.php:	$shadow_array[$this->shadowbox_insideout_index]= ($shadow_array[$this->shadowbox_insideout_index]!=='inset')? '':'inset';	
global_edit_master.class.php:	$shadow_array[$this->shadowbox_vert_offset_index]= (empty($shadow_array[$this->shadowbox_vert_offset_index]))? 0:$shadow_array[$this->shadowbox_vert_offset_index];
global_edit_master.class.php:	if (!preg_match(Cfg::Preg_color,$shadow_array[$this->shadowbox_color_index]))$shadow_array[$this->shadowbox_color_index]="0";
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){  
global_edit_master.class.php:		$this->show_more('Box Shadow', 'noback','editfont highlight editbackground editfont',' add a Shadow around this text or image post',500);  
global_edit_master.class.php:		$this->print_wrap('Box shadow',false);
global_edit_master.class.php:		echo '<p class="fbs1info '.$this->column_lev_color.' whitebackground editfont">We have used a maroon box shadow effect on the bottom right of this text. <span class="highlight" title="Blur Radius: 7px; Spread Radius -6px; Horizontal Offset: 4px; Vertical Offset: 4px; Color:#f7f2a8;">See Settings</span> for this box shadow!<br>Like Borders, Box Shadows provide styling around a Column Post or Menu Link Area, though providing a customizable shadow instead. For a quick overview  and examples see <a href="http://css-tricks.com/snippets/css/css-box-shadow/">Shadow Examples.</a>  </p>';
global_edit_master.class.php:		echo '<p class="fsminfo editbackground editfont rad3 floatleft '.$this->column_lev_color.' editfont">Shadow may be an outside box shadow (recommended for styling directly around images or an inside box shadow :<br> ';
global_edit_master.class.php:          $checked2=($shadow_array[$this->shadowbox_insideout_index]==='inset')?'checked="checked"':''; 
global_edit_master.class.php:          $checked1=($shadow_array[$this->shadowbox_insideout_index]!=='inset')?'checked="checked"':''; 
global_edit_master.class.php:		echo ' <p class="fsminfo editbackground editfont rad3 '.$this->column_lev_color.' editfont">The blur radius: 
global_edit_master.class.php:		echo ' <span class="'.$this->column_lev_color.' left5 editbackground editfont">Currently '.$shadow_array[$this->shadowbox_blur_radius_index].'</span><br>
global_edit_master.class.php:	    <option  value="'.$shadow_array[$this->shadowbox_blur_radius_index].'" selected="selected">'.$shadow_array[$this->shadowbox_blur_radius_index].'</option>';
global_edit_master.class.php:		echo ' <p class="fsminfo editbackground editfont rad3 '.$this->column_lev_color.' editfont">The spread radius gives all sides even shadow width: A positive values increase the size of the shadow
global_edit_master.class.php:		echo ' <span class="'.$this->column_lev_color.' left5 editbackground editfont">Currently '.$shadow_array[$this->shadowbox_spread_radius_index].'</span><br>
global_edit_master.class.php:	    <option  value="'.$shadow_array[$this->shadowbox_spread_radius_index].'" selected="selected">'.$shadow_array[$this->shadowbox_spread_radius_index].'</option>';
global_edit_master.class.php:		echo '<p class="fsminfo editbackground editfont rad3 '.$this->column_lev_color.' editfont">Box Shadow Horizonal offet, more negative value  means more on left side of the box, positive right: '; 
global_edit_master.class.php:          echo '<span class="'.$this->column_lev_color.' left5 editbackground editfont">Currently '.$shadow_array[$this->shadowbox_horiz_offset_index].'</span><br> 
global_edit_master.class.php:	    <option  value="'.$shadow_array[$this->shadowbox_horiz_offset_index].'" selected="selected">'.$shadow_array[$this->shadowbox_horiz_offset_index].'</option>';
global_edit_master.class.php:		echo '<p class="fsminfo editbackground editfont rad3 '.$this->column_lev_color.' editfont">Box Shadow Vertical offet, more negative value means more above the box, more positive more below: ';
global_edit_master.class.php:		echo '   <span class="'.$this->column_lev_color.' left5  editbackground editfont">Currently '.$shadow_array[$this->shadowbox_vert_offset_index].'</span><br>
global_edit_master.class.php:	    <option  value="'.$shadow_array[$this->shadowbox_vert_offset_index].'" selected="selected">'.$shadow_array[$this->shadowbox_vert_offset_index].'</option>';
global_edit_master.class.php:		echo '<p class="fsminfo editbackground editfont rad3 '.$this->column_lev_color.' editfont">Use 0 to remove box shadow<br>You Color Choice Can Also Produce a More or Less Subtle Shadow Effect!:</p> ';
global_edit_master.class.php:		$span_color=(!empty($shadow_array[$this->shadowbox_color_index]))?'<span class="fs1npred" style="background-color:#'.$shadow_array[$this->shadowbox_color_index].';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>':''; 
global_edit_master.class.php:		if (preg_match(Cfg::Preg_color,$shadow_array[$this->shadowbox_color_index])){
global_edit_master.class.php:			$msg= (!empty($shadow_array[$this->shadowbox_color_index]))?$shadow_array[$this->shadowbox_color_index] . ' is not a valid color code. Enter a new shadow color code: #':'Enter a shadow color code: #';
global_edit_master.class.php:		printer::alert($msg.'<input onclick="jscolor.installByClassName(\''.$style.'-'.$val.$inc.'\');" style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text" name="'.$style.'['.$val.'][4]" id="'.$style.'-'.$val.$inc.'" value="'. $shadow_array[$this->shadowbox_color_index].'" size="6" maxlength="6" class="'.$style.'-'.$val.$inc.' {refine:false}">'.$span_color); 
global_edit_master.class.php:		$this->submit_button();
global_edit_master.class.php:		$this->show_close('edit shadow');//'edit shadow'
global_edit_master.class.php:	$shadowcss='-moz-box-shadow:'.$shadow_array[$this->shadowbox_insideout_index].' '.$shadow_array[$this->shadowbox_horiz_offset_index].'px '.$shadow_array[$this->shadowbox_vert_offset_index].'px '.$shadow_array[$this->shadowbox_blur_radius_index].'px '.$shadow_array[$this->shadowbox_spread_radius_index].'px '. '#'. $shadow_array[$this->shadowbox_color_index].';  
global_edit_master.class.php:	-webkit-box-shadow:'.$shadow_array[$this->shadowbox_insideout_index].'  '.$shadow_array[$this->shadowbox_horiz_offset_index].'px '.$shadow_array[$this->shadowbox_vert_offset_index].'px '.$shadow_array[$this->shadowbox_blur_radius_index].'px '.$shadow_array[$this->shadowbox_spread_radius_index].'px '. '#'. $shadow_array[$this->shadowbox_color_index].';   
global_edit_master.class.php:	box-shadow:'.$shadow_array[$this->shadowbox_insideout_index].'  '.$shadow_array[$this->shadowbox_horiz_offset_index].'px '.$shadow_array[$this->shadowbox_vert_offset_index].'px '.$shadow_array[$this->shadowbox_blur_radius_index].'px '.$shadow_array[$this->shadowbox_spread_radius_index].'px '. '#'. $shadow_array[$this->shadowbox_color_index].';';  
global_edit_master.class.php:	$shadowcss= (!preg_match(Cfg::Preg_color,$shadow_array[$this->shadowbox_color_index]))?'':$shadowcss; 
global_edit_master.class.php:	$this->{$fstyle}[$val]=$shadowcss;
global_edit_master.class.php:	static $inc=0;  $inc++;if (arrayhandler::is_empty_array($this->{$style}[$val])){//default may be set to 1
global_edit_master.class.php:		$shadow_array=explode('@@',$this->{$style}[$val]);
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){  
global_edit_master.class.php:          $this->show_more('Text Shadow','noback','highlight editbackground editfont','Add a Shadow to the text fonts',500);
global_edit_master.class.php:		echo' <div class="fsminfo editbackground editfont rad3 '.$this->column_lev_color.' editfont"><!--leftrightoffset-->Text Shadow Left/Right offet, more negative value  means more left, positive right:';
global_edit_master.class.php:          echo'<p class="'.$this->column_lev_color.' left5 editbackground editfont">Currently '.$shadow_array[0].'<br>
global_edit_master.class.php:		echo'<div class="fsminfo editbackground editfont rad3 '.$this->column_lev_color.' editfont"><!--vert offset-->Text Shadow Above/Below offet 
global_edit_master.class.php:		echo'<p class="'.$this->column_lev_color.' rad3 editbackground editfont">Currently '.$shadow_array[1].'<br>
global_edit_master.class.php:		echo'<div class="'.$this->column_lev_color.' fsminfo editbackground editfont rad3 editfont"><!--Blur length-->Set Shadow Blur Length: Currently '.$shadow_array[2].'<br>
global_edit_master.class.php:		echo '<div class="'.$this->column_lev_color.' fsminfo editbackground editfont">Edit the Text Shadow color <br><span class="editcolor editbackground editfont"><!--shadow text color-->'.$msg.'</span><input onclick="jscolor.installByClassName(\''.$style.'-'.$val.$inc.'" style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';"   type="text" name="'.$style.'['.$val.'][3]" id="'.$style.'-'.$val.$inc.'" value="'. $shadow_array[3].'" size="6" maxlength="6" class="'.$style.'-'.$val.$inc.' {refine:false}">'.$span_color;
global_edit_master.class.php:		$this->show_close('text shadow');
global_edit_master.class.php:	$this->{$fstyle}[$val]=$shadowcss;
global_edit_master.class.php:     $this->show_more('Set '.$type.' Overflow Property');
global_edit_master.class.php:     $overflowx=(in_array($this->{$type.'_options'}[$this->{$type.'_overflowx_index'}],$overflow_arr))?$this->{$type.'_options'}[$this->{$type.'_overflowx_index'}]:'';
global_edit_master.class.php:     $overflowy=(in_array($this->{$type.'_options'}[$this->{$type.'_overflowy_index'}],$overflow_arr))?$this->{$type.'_options'}[$this->{$type.'_overflowy_index'}]:'';
global_edit_master.class.php:	printer::alert('<input type="radio"  name="'.$data.'_'.$type.'_options['.$this->{$type.'_overflowx_index'}.']" value="hidden" '.$check1.'>hidden');
global_edit_master.class.php:	printer::alert('<input type="radio"  name="'.$data.'_'.$type.'_options['.$this->{$type.'_overflowx_index'}.']" value="scroll" '.$check2.'>scroll');
global_edit_master.class.php:	printer::alert('<input type="radio"  name="'.$data.'_'.$type.'_options['.$this->{$type.'_overflowx_index'}.']" value="visible" '.$check3.'>visible');
global_edit_master.class.php:	printer::alert('<input type="radio"  name="'.$data.'_'.$type.'_options['.$this->{$type.'_overflowy_index'}.']" value="hidden" '.$check1.'>hidden');
global_edit_master.class.php:	printer::alert('<input type="radio"  name="'.$data.'_'.$type.'_options['.$this->{$type.'_overflowy_index'}.']" value="scroll" '.$check2.'>scroll');
global_edit_master.class.php:	printer::alert('<input type="radio"  name="'.$data.'_'.$type.'_options['.$this->{$type.'_overflowy_index'}.']" value="visible" '.$check3.'>visible');
global_edit_master.class.php:     $css_id=($type==='blog')?$this->dataCss:$this->col_dataCss;
global_edit_master.class.php:     $this->show_close('Set Post Overflow Property');
global_edit_master.class.php:		$this->css.= '.'.$css_id.'{'.$overflowx.$overflowy.'}';
global_edit_master.class.php:	$serial_data=$this->{$style}[$val];  
global_edit_master.class.php:	$idref=($this->is_column)?$this->col_dataCss:(($this->is_blog)?$this->dataCss:$this->pagename);
global_edit_master.class.php:	if($this->is_page) 
global_edit_master.class.php:		$db_table=$this->master_page_table;
global_edit_master.class.php:	elseif ($this->is_column&&!$this->clone_local_style)
global_edit_master.class.php:		$db_table=$this->master_col_table;
global_edit_master.class.php:	elseif ($this->is_column){
global_edit_master.class.php:		$db_table=$this->master_col_css_table;
global_edit_master.class.php:	elseif ($this->is_blog&&!$this->clone_local_style)
global_edit_master.class.php:		$db_table=$this->master_post_table;
global_edit_master.class.php:		$db_table=$this->master_post_css_table;
global_edit_master.class.php:	$ref_id=($this->is_page)?'page_id':(($this->is_column)?'col_id':'blog_id');
global_edit_master.class.php:	if (!empty($serial_data)&&$this->isSerialized($serial_data)){ 
global_edit_master.class.php:		if (strlen($this->{$style}[$val]>6))echo serial_data. ' is not recognized as serialized';
global_edit_master.class.php:	if (isset($_POST['media_added_style_'.$this->clone_ext.$field.'_'.$this->$ref_id])){
global_edit_master.class.php:		foreach($_POST['media_added_style_'.$this->clone_ext.$field.'_'.$this->$ref_id] as $index => $array){
global_edit_master.class.php:		$style_arr=explode(',',$this->$field);
global_edit_master.class.php:		$style_arr[$this->custom_style_index]=$update_val; 
global_edit_master.class.php:		$ref=($this->is_page)?'page_':(($this->is_column)?'col_':'blog_');
global_edit_master.class.php:		$q="update $db_table set $field='$implode_style_arr',{$ref}time='".time()."',{$ref}update='".date("dMY-H-i-s")."', token='".mt_rand(1,mt_getrandmax()). "' where $ref_id='$localprefix{$this->$ref_id}'"; 
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		$newref=(!$this->is_page)?str_replace('.'.$idref,'#'.$idref,$this->pelement):$this->pelement;//so here we switch class to ids. same name diff prefix is all!// 
global_edit_master.class.php:		$this->advancedmediacss.=$mediacss;
global_edit_master.class.php:		$this->advancedstyles[$this->pelement]=$mediacss; 
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){
global_edit_master.class.php:		 $this->show_more('Advanced Styling Options','','highlight editbackground editfont highlight editstyle','Manually enter Css &amp; Css @media Rules Here');
global_edit_master.class.php:		$ptype=($this->is_page)?' body&#123;&#125;':(($this->is_column)?'this column':'this post');
global_edit_master.class.php:	echo '<div class="Od2olivedrab fsminfo editbackground editfont '.$this->column_lev_color.' "><!--custom style inner-->';
global_edit_master.class.php:			$newref=(!$this->is_page)?str_replace('.'.$idref,'#'.$idref,$this->pelement):$this->pelement;//so here we switch class to ids. same name diff prefix is all!
global_edit_master.class.php:               $css_class_id=$newref.$class_suffix;// ($newref===$this->pelement)?$this->pelement.$class_suffix:$this->pelement.$class_suffix.','.$newref;
global_edit_master.class.php:			if (empty($class_suffix))$this->show_more('Suffix','','tiny info','Add a class suffix');
global_edit_master.class.php:			echo '<p class="editbackground editfont editcolor">'.$msg.'<input type="text" name="media_added_style_'.$this->clone_ext.$field.'_'.$this->$ref_id.'['.$i.'][0]" value="'.$class_suffix.'" size="30" maxlength="100"></p>';
global_edit_master.class.php:			if (empty($class_suffix))$this->show_close('suffix');
global_edit_master.class.php:			$this->textarea($customcss,'media_added_style_'.$this->clone_ext.$field.'_'.$this->$ref_id.'['.$i.'][1]','600','16');
global_edit_master.class.php:			printer::printx('<p class="smaller '.$this->column_lev_color.'">Chosen max-width: <span class="navybackground white">'.$cur_maxpx.'</span><br></p>');
global_edit_master.class.php:			$this->mod_spacing('media_added_style_'.$this->clone_ext.$field.'_'.$this->$ref_id.'['.$i.'][2]',$media_maxpx,200,2000,1,'px','',$msgjava);
global_edit_master.class.php:               printer::printx('<p ><input type="checkbox" name="media_added_style_'.$this->clone_ext.$field.'_'.$this->$ref_id.'['.$i.'][2]" value="0">Remove max-width</p>');
global_edit_master.class.php:			printer::printx('<p class="smaller '.$this->column_lev_color.'">Chosen min-width: <span class="navybackground white">'.$cur_minpx.'</span></p>');
global_edit_master.class.php:			$this->mod_spacing('media_added_style_'.$this->clone_ext.$field.'_'.$this->$ref_id.'['.$i.'][3]',$media_minpx,200,2000,1,'px','',$msgjava);
global_edit_master.class.php:               printer::printx('<p ><input type="checkbox" name="media_added_style_'.$this->clone_ext.$field.'_'.$this->$ref_id.'['.$i.'][3]" value="0">Remove min-width</p>');
global_edit_master.class.php:			$this->submit_button();
global_edit_master.class.php:		printer::printx('<p class="fsminfo tip smaller">Note: Page Related Css &amp; Modified Custom functions affecting  this page only may be made in: <b>includes/'.$this->pagename.'.class.php</b><br>Custom css and functions affecting pages site-wide may be made in: <b>includes/site_master.class.php</b></p>');
global_edit_master.class.php:		$this->show_close('Advanced Styling Options');
global_edit_master.class.php:	$imagepx=(isset($this->background_img_px)&&$this->background_img_px>4)? $this->background_img_px:(($this->is_page)?$this->page_width:$this->current_net_width);   
global_edit_master.class.php:	if (empty($this->{$style}[$val])){ 
global_edit_master.class.php:		$background_array=explode('@@',$this->{$style}[$val]);
global_edit_master.class.php:	if ($this->is_blog){// determine the name of the field for adding new background image!!
global_edit_master.class.php:			$maxwid=$this->current_net_width;
global_edit_master.class.php:			$background_image_field=$field.'-blog-'.$val.'-'.$this->blog_order;
global_edit_master.class.php:			$table=$this->blog_table;
global_edit_master.class.php:			$maxwid=$this->current_net_width;
global_edit_master.class.php:			$background_image_field='blog_style-blog-' .$val.'-'.$this->blog_order;
global_edit_master.class.php:			$table=$this->blog_table;
global_edit_master.class.php:	elseif ($this->is_column) {
global_edit_master.class.php:		$maxwid=$this->current_net_width;
global_edit_master.class.php:		$table=$this->col_table;
global_edit_master.class.php:	elseif ($this->is_page) { 
global_edit_master.class.php:		$table=$this->pagename;
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){ 
global_edit_master.class.php:          $this->show_more('Background Styling','main2','highlight click editbackground editfont','Edit Colors, Gradient   Background Image','300');
global_edit_master.class.php:		$this->show_more('Background Color', 'noback','highlight  editbackground editfont','A background Color and Color Opacity May be Chosen Here',500); 
global_edit_master.class.php:		$colorprint=(!empty($gradient_css)||!empty($back_image_used))?'red':$this->column_lev_color;
global_edit_master.class.php:		$this->print_wrap('wrap background color');
global_edit_master.class.php:		printer::printx('<p class="floatleft"><input style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" onclick="jscolor.installByClassName(\''.$style.'-'.$val.'_'.$inc.'\');" type="text" name="'.$style.'['.$val.']['.$background_color_index.']" id="'.$style.'-'.$val.'_'.$inc.'" value="'. $background_array[$background_color_index].'" size="6" maxlength="6" class="'.$style.'-'.$val.'_'.$inc.' {refine:false}">' .$span_color.'</p>');
global_edit_master.class.php:		$this->mod_spacing($style.'['.$val.']['.$background_opacity_index.']',$background_color_opacity,0,100,1,'%');
global_edit_master.class.php:          $this->submit_button();
global_edit_master.class.php:		printer::close_print_wrap('wrap background color','Os2dodgerblue fsm'.$this->column_lev_color);
global_edit_master.class.php:		$this->show_close('back colors');echo '<!--show back colors-->';
global_edit_master.class.php:		$this->show_more('Background Gradients', 'noback','highlight editbackground editfont','A background Color Gradient of 2 or more colors may be  used instead of a single color',500);echo '<!--show gradients-->';
global_edit_master.class.php:		$this->print_wrap('gradient wrap' );
global_edit_master.class.php:		$this->show_more(' more gradient info', 'cnoback','click floatleft editbackground editfont');
global_edit_master.class.php:		$this->show_close('utilitygrad');
global_edit_master.class.php:		printer::printx('<p class="'.$this->column_lev_color.' editbackground editfont">Choose Which Gradient Type: Currently: '.$background_gradient_type.'<br>');
global_edit_master.class.php:			printer::printx('<p class="editcolor editbackground editfont">Enter Color Hexcode or Choose Color# '.$i.'&nbsp;<input style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text" name="'.$style.'['.$val.']['.${'background_gradient_color'.$i.'_index'}.']" id="'.$style.'-'.$val.'_'.$inc.$i.'"  value="'. $background_array[${'background_gradient_color'.$i.'_index'}].'" size="6" maxlength="6"  onclick="jscolor.installByClassName(\''.$style.'-'.$val.'_'.$inc.$i.'\');" class="'.$style.'-'.$val.'_'.$inc.$i.' {refine:false}">'.$span_color.'</p>');
global_edit_master.class.php:			$this->mod_spacing($style.'['.$val.']['.${'background_gradient_transparency'.$i.'_index'}.']',$opacity,0,100,1,'%',false,'transparent');
global_edit_master.class.php:			$this->show_more('Optional Colorstop for Color#'.$i,'noback','click editbackground editfont smaller '.$this->column_lev_color);
global_edit_master.class.php:			echo '<div class="fsminfo editbackground editfont '.$this->column_lev_color.'"><!--color stop-->Gradient Colors will normally blend evenly spaced, however specifying a Colorstop percentage  determines at which point along the gradient the color will stop blending';
global_edit_master.class.php:               $this->mod_spacing($style.'['.$val.']['.${'background_gradient_color_stop'.$i.'_index'}.']',$colorstop,0,100,1,'%','none');
global_edit_master.class.php:			$this->show_close('color stop');
global_edit_master.class.php:		$this->show_more('Optionally Position Radial Gradient','noback','click editbackground editfont smaller '.$this->column_lev_color,'','',150);
global_edit_master.class.php:		echo '<p class="fsminfo editbackground editfont '.$this->column_lev_color.'">Radial Gradients (ellipses and circles) will Normally Be Centered Positioned. Its also possible Choose To Custom Size and Position Your Gradient Here. See http://gradientcss.com/radial-gradient for a detailed explanation of the gradient options!</p>';
global_edit_master.class.php:		printer::printx('<p class="'.$this->column_lev_color.' editbackground editfont">Change Radial Horizontal Position (default:50%) Currently: '.$background_gradient_position1.'%<br></p>');
global_edit_master.class.php:		$this->mod_spacing($style.'['.$val.']['.${'background_gradient_position1_index'}.']', $background_gradient_position1,0,100,1,'%');
global_edit_master.class.php:		printer::printx('<p class="'.$this->column_lev_color.' editbackground editfont">Change Radial Vertical Position (default:50%) Currently: '.$background_gradient_position2.'%<br></p>');
global_edit_master.class.php:		$this->mod_spacing($style.'['.$val.']['.${'background_gradient_position2_index'}.']',$background_gradient_position2,0,100,1,'%');
global_edit_master.class.php:		printer::printx('<p class="'.$this->column_lev_color.' editbackground editfont">Optionally Change Radial Sizing Keyword: Currently: '.$background_gradient_position_keyword.'<br></p>');
global_edit_master.class.php:		$this->show_close('Position radial gradient');//Position radial gradient
global_edit_master.class.php:		$this->submit_button();
global_edit_master.class.php:		$this->show_close('show gradients');echo '<!--show gradients-->';
global_edit_master.class.php:		 $this->show_more('Background Image', 'noback','highlight editbackground editfont',' Use a Background Image  instead of color or color gradients.  Use them in posts, columns and menu link buttons',500);
global_edit_master.class.php:		$this->print_wrap('wrap background image');
global_edit_master.class.php:		echo '<div class="fsminfo editbackground editfont rad3 '.$this->column_lev_color.' editfont"><!--background image enter-->A background image behaves similar to background color.  It may also be positioned if necessary<br>'; 
global_edit_master.class.php:		echo '<div class="'.$this->column_lev_color.' fsminfo editbackground editfont"><!--Upload background image-->Upload a Larger than Needed Background Image Size and the Size Will Always Be Updated to Match the Current Width   + any Padding Left &amp; Right Space Added. Margin Spacings Are Always Outside of Background Effects. Repeating images horizontally, and Uploaded Images smaller than the spaces provided will remain their original sizes!!<br>';
global_edit_master.class.php:		$clone_local_style=($this->clone_local_style)?'&amp;clone_local_style=1':'';
global_edit_master.class.php:		printer::alert('<a href="add_page_pic.php?wwwexpand=0&amp;www='.$imagepx.'&amp;ttt='.$table.'&amp;fff='.$background_image_field.'&amp;postreturn='.Sys::Self.'&amp;pgtbn='.$this->pagename.'&amp;bbb=background_image_style'.$clone_local_style.'&amp;css='.$this->roots.Cfg::Style_dir.$this->pagename.'&amp;sess_override&amp;sess_token='.$this->sess->sess_token.'"><u> Upload a new background image ...</u></a>');
global_edit_master.class.php:		echo '<div class="fsminfo editbackground editfont rad3 '.$this->column_lev_color.'"><!--configure background image -->Configure Your Background Image:<br>';
global_edit_master.class.php:			$quality=(!empty($this->page_options[$this->page_image_quality_index])&&$this->page_options[$this->page_image_quality_index]<101&&$this->page_options[$this->page_image_quality_index]>9)?$this->page_options[$this->page_image_quality_index]:Cfg::Pic_quality;
global_edit_master.class.php:							($this->edit)&&printer::alert_pos('Missing Background Image has been copied to background directory');
global_edit_master.class.php:					$tid=($this->is_blog)?$this->blog_id:(($this->is_column)?$this->col_id:'pageback '.$this->pagename);
global_edit_master.class.php:				echo '<p class="fsmredAlert rad3 '.$this->column_lev_color.' editbackground editfont">Note: A background image is in use which overlays the background color.: '.Cfg_loc::Root_dir.Cfg::Background_image_dir.$background_array[$background_image_index].'</p>';
global_edit_master.class.php:			    list($width,$height)=$this->get_size($background_array[$background_image_index], Cfg_loc::Root_dir.Cfg::Background_image_dir);
global_edit_master.class.php:			if ($this->edit&&(empty($background_array[$background_repeat_index])||$background_array[$background_repeat_index]==='no-repeat'||$background_array[$background_repeat_index]==='repeat-y')&&!$background_array[$background_image_noresize_index]){  
global_edit_master.class.php:				list($width,$height)=$this->get_size($background_array[$background_image_index],Cfg_loc::Root_dir.Cfg::Background_image_dir);
global_edit_master.class.php:					$return=$this->resize($background_array[$background_image_index],$imagepx,0,0,Cfg_loc::Root_dir.Cfg::Upload_dir,Cfg_loc::Root_dir.Cfg::Background_image_dir,'backgroundimage field: '.$field.' style:'.$style,'file','Background Image',NULL,'95','center',false );
global_edit_master.class.php:					($return)&&$this->success[]='<div><img src="'.Cfg_loc::Root_dir.Cfg::Background_image_dir.$background_array[$background_image_index].'" class="floatleft" height="50" ><p class="pl10 maxwidth400 small floatleft">This Background Image photo '.$background_array[$background_image_index].' in Post Id'.$this->blog_id.' was resized to width '. $imagepx.'</p></div>';
global_edit_master.class.php:		$this->mod_spacing($style.'['.$val.']['.$background_horiz_index.']',$bhval,0,100,1,'%','',$msgjava);
global_edit_master.class.php:		$this->mod_spacing($style.'['.$val.']['.$background_vert_index.']',$bvval,0,100,1,'%','',$msgjava);
global_edit_master.class.php:          echo '<div class="fsminfo editbackground editfont rad3 '.$this->column_lev_color.' editfont"><!--Background Image Size-->Choose Background Image Size:<br>';
global_edit_master.class.php:		$this->mod_spacing($style.'['.$val.']['.$background_pos_width_index.']',$background_array[$background_pos_width_index],0,100,1,'%','',$msgjava);
global_edit_master.class.php:		$this->mod_spacing($style.'['.$val.']['.$background_pos_height_index.']',$background_array[$background_pos_height_index],0,100,1,'%','',$msgjava); 
global_edit_master.class.php:          $this->mod_spacing($style.'['.$val.']['.$background_image_opacity_index.']',$background_image_opacity,1,100,1,'%');
global_edit_master.class.php:          $this->submit_button();
global_edit_master.class.php:		$this->show_close('background');//background
global_edit_master.class.php:               $this->show_more('Upload Background Video','noback','infoclick editbackground editfont',' Videos can be used instead of a background color! Use them in posts, columns and menu link buttons',800);
global_edit_master.class.php:               this->print_wrap('Upload Background Video','Os3aqua fsminfo editcolor editbackground editfont');
global_edit_master.class.php:			$this->show_more('More Config Info','','small info click');
global_edit_master.class.php:			$id=($this->is_page)?$this->page_id:(($this->is_column)?$this->col_id:$this->blog_id);
global_edit_master.class.php:			$id_ref=($this->is_page)?'page_id':(($this->is_column)?'col_id':'blog_id');
global_edit_master.class.php:			$this->show_close('More Config Info'); 
global_edit_master.class.php:			echo'<p class="editcolor editbackground editfont"> <a href="add_page_vid.php?ttt='.$this->pagename.'&amp;type=background&amp;fff='.$field.'&amp;id='.$id.'&amp;id_ref='.$id_ref.'&amp;pgtbn='.$this->pagename.'&amp;postreturn='.Sys::Self.'&amp;css='.$this->roots.Cfg::Style_dir.$this->pagename.'&amp;sess_override&amp;sess_token='.$this->sess->sess_token.'"><u>Upload New Background Video</u></a></p>';
global_edit_master.class.php:			$this->print_wrap('display','fs1salmon editcolor editbackground editfont');
global_edit_master.class.php:			$this->show_close('Upload Background Video');
global_edit_master.class.php:		$this->show_close('background');//<!--show close background-->';
global_edit_master.class.php:          $this->pagecss.='
global_edit_master.class.php:		$this->{$fstyle}[$val]=$background_color.$gradient_css.$background_image.$video_css; 
global_edit_master.class.php:		$this->{$fstyle}[$val]='position:relative;z-index:1;'.$background_color.$gradient_css;
global_edit_master.class.php:		$pelement=str_replace(',',':after,',trim($this->pelement,','));
global_edit_master.class.php:		$this->css.="\n".trim($pelement).':after { 
global_edit_master.class.php:          $css_id=($this->is_column)?$this->col_dataCss:$this->dataCss;
global_edit_master.class.php:          $this->editoverridecss.='#'.$css_id.' {position:relative !important;}';
global_edit_master.class.php:          $this->overlapbutton=true; 
global_edit_master.class.php:	$display=($this->show_text_style)?'':' style="display:none;"';
global_edit_master.class.php:	$class=($this->show_text_style)?'':'fsminfo';
global_edit_master.class.php:	$txtmsg=(($this->is_blog&&$this->blog_type==='navigation_menu')&&$field==='blog_style')?'Link Align: ':'Text Align: ';
global_edit_master.class.php:	$title=(($this->is_blog&&$this->blog_type==='navigation_menu')&&$field==='blog_style')?'This setting will change the positioning of Links within Navigation Menus':'Select Left right or Center Align the text widthin this post/Can also Effect Image. If none is selected it will inherit the value from the parent &#40;Which may be a Column or the Body Setting&#41;';
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){  
global_edit_master.class.php:		$textalign= (empty($this->{$style}[$val]))? 'Inherited': $this->{$style}[$val];
global_edit_master.class.php:		<option  value="'.$this->{$style}[$val].'" selected="selected">'.$textalign.'</option>
global_edit_master.class.php:	$this->{$fstyle}[$val]=(!empty($this->{$style}[$val]))?' text-align: '.$this->{$style}[$val].';':'0';
global_edit_master.class.php:	$sval=(!empty($this->{$style}[$val])&&$this->{$style}[$val]>29&&$this->{$style}[$val]<251)?$this->{$style}[$val]:100;
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){  
global_edit_master.class.php:		echo '<p class="'.$this->column_lev_color.' editfont ">Adjust line height between lines:</p>';
global_edit_master.class.php:	$this->{$fstyle}[$val]=($sval!==100)?'line-height:'.$sval.'%;':'';
global_edit_master.class.php:    $sval=(!empty($this->{$style}[$val])&&$this->{$style}[$val]>-.22&&$this->{$style}[$val]<7)?$this->{$style}[$val]:0;
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){  
global_edit_master.class.php:		echo '<p class="'.$this->column_lev_color.' editfont ">Add or Subtract space between letters</p>'; 
global_edit_master.class.php:		//$this->mod_spacing($style.'['.$val.']',$sval,-.1,2,.05,'em');
global_edit_master.class.php:	$this->{$fstyle}[$val]=(!empty($sval)&&is_numeric($val))?'letter-spacing:'.$sval.'em;':'';
global_edit_master.class.php:     $this->font_effects($style,$val,$var);
global_edit_master.class.php:    $this->font_effects($style,$val,$var);
global_edit_master.class.php:     $this->font_effects($style,$val,$var);
global_edit_master.class.php:     if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){
global_edit_master.class.php:		if (array_key_exists($val,$this->$style)&&$this->{$style}[$val]) :
global_edit_master.class.php:			echo '<p class="'.$this->column_lev_color.' editfont '.$style.'_hidefont" style="display:none; text-align: left;"><input type="checkbox"  name="'.$style.'['. $val .']"   value="0">Turn Off '. $functions[$val].'</p>';
global_edit_master.class.php:			echo '<p class="'.$this->column_lev_color.' editfont '.$style.'_hidefont" style="display:none;text-align: left;"><input type="checkbox"  name="'.$style.'['. $val .']"  value="1">Turn On '. $functions[$val].'</p>';
global_edit_master.class.php:	$this->{$fstyle}[$val]=($this->{$style}[$val])?$var:'';
global_edit_master.class.php:	if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){  
global_edit_master.class.php:		$background=(preg_match(Cfg::Preg_color,$this->{$style}[$val]))?'background: #'.$this->{$style}[$val].';':'background: #'.$this->current_color.';';
global_edit_master.class.php:          $currentcolor=(preg_match(Cfg::Preg_color,$this->{$style}[$val]))?$this->{$style}[$val]:'inherited';
global_edit_master.class.php:		$span_color='<span class="fs1npred" style="'.$background.' color:#'.$this->current_background_color.';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>';
global_edit_master.class.php:		<div class="'.$bordercolor.' floatleft '.$hidefont.'" '.$styledisplay.'> <p class="highlight" title="Change the text color (font) of this post by Entering a valid font color 3 or 6 digit color code or clicking in the entry box which opens the Color Selector tool! Enter any blank or 0 to go back to the inherited parent color &#40;Inherited Parent Values are the most recent values that have been set in the parent Columns and if not set there then in the body or the default black!!">'.$msg.' : #<input onclick="jscolor.installByClassName(\''.$style.'_'.$val.'\');"  style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';"  class="'.$style.'_'.$val.' {refine:false}"   name="'.$style.'['.$val.']"  id="'.$style.'_'.$val.'" value="'.$currentcolor.'"
global_edit_master.class.php:	$this->{$fstyle}[$val]=(!empty($this->{$style}[$val])&&preg_match(Cfg::Preg_color,$this->{$style}[$val]))?'color: #'.$this->{$style}[$val].';':0;//'color: #'.$this->current_color.';';   
global_edit_master.class.php:     $this->show_more('tech info','noback','fs2info editbackground editfont highlight left5 right5','Click for Tech Information',500);
global_edit_master.class.php:	echo '<div class="editbackground editfont fsminfo editbackground editfont maxwidth500  '.$this->column_lev_color.' floatleft"><!--tech info-->'; 
global_edit_master.class.php:	$this->blog_order_array[0]=''; 
global_edit_master.class.php:	printer::alertx('<p class="highlight left" title="Unique Column Id: C'.$this->col_id.' would be Used for Copying/Mirroring/Moving This Entire Column">The Unique Column Id: C'.$this->col_id.'</p>');
global_edit_master.class.php:	printer::alert('Present <span class="highlight" title="The column level depth refers to columns within columns ie. level 2 would be a nested column within a nested column within a primary column">column level depth</span>: '.($this->column_level),'','editcolor editbackground editfont left');
global_edit_master.class.php:	for ($i=0; $i<=$this->column_level; $i++){
global_edit_master.class.php:		$column=($i==0)?'':'Column#'.$this->column_order_array[$i-1];
global_edit_master.class.php:		$from=($i!=$this->column_level)?' from which => ':' which is this column';
global_edit_master.class.php:	     $begat=($i!=0||!$this->is_clone)?' => gave rise to Column#':'';
global_edit_master.class.php:		$postid=($i==0)?'':' having Post Id P'.$this->blog_id_arr[$i];
global_edit_master.class.php:		printer::alertx('<p class="left">'.$column.$post.$this->blog_order_array[$i]. $postid.
global_edit_master.class.php:          $this->column_fol_arr[$i].$begat.
global_edit_master.class.php:          $this->column_order_array[$i].' Id: C'.
global_edit_master.class.php:          $this->column_id_array[$i].' => of Net Width: '.
global_edit_master.class.php:          (intval(ceil($this->column_net_width[$i]*10)/10)).'px '.$from.'</p>');
global_edit_master.class.php:	$this->show_close('tech');//tech 
global_edit_master.class.php:	$q="update $this->master_post_table set token='".mt_rand(1,mt_getrandmax()). "',blog_update='".date("dMY-H-i-s")."',blog_time='".time()."',blog_pub=1 where blog_col=$id";   
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);  
global_edit_master.class.php:	$q="select  blog_data1  from  $this->master_post_table where blog_type='nested_column' and blog_col=$id";   
global_edit_master.class.php:	$rx=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);   
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()) {
global_edit_master.class.php:		while(list($col_id)=$this->mysqlinst->fetch_row($rx,__LINE__)){
global_edit_master.class.php:			$this->publish($col_id); 
global_edit_master.class.php:	if (($this->blog_status==='clone')||($this->is_column&&$this->col_status==='clone'))return;  
global_edit_master.class.php:	$this->clone_check_arr[]=$id;
global_edit_master.class.php:	$this->show_more('Mirror release Options','Close Mirror release Options','fs2npinfo small highlight editbackground editfont floatleft','Modify/Change This Cloned '.str_replace('_',' ',strtoupper($this->blog_type)),500);//show_more un clone options
global_edit_master.class.php:	echo '<div class="fsminfo editbackground editfont left '.$this->column_lev_color.'" >With this Duplicate and Modify Option a Copy of this '.str_replace('_',' ',strtoupper($this->blog_type)).' will Be Created and May Then Be Modified Here Without Affecting the Original!<br>'; 
global_edit_master.class.php:	printer::printx('<p class="editcolor editbackground editfont left"><input type="checkbox" value="'.$this->post_target_clone_column_id.'" name="unclone_option_copy['.$this->blog_id.']"> Duplicate and Modify Option</p>');
global_edit_master.class.php:	echo '<div class="left fsminfo editbackground editfont '.$this->column_lev_color.'" >With this Replace Fresh Option Select Any New Post/Column Type to Replace this '.str_replace('_',' ',strtoupper($this->blog_type)).'<br/>';
global_edit_master.class.php:	$new_blog='create_unclone['.$this->blog_id.']['.$this->post_target_clone_column_id.']';  
global_edit_master.class.php:	$selected=$this->choose_blog_type;
global_edit_master.class.php:	forms::form_dropdown($this->blog_drop_array,false,'','',$new_blog,$selected,false,$this->column_lev_color  );
global_edit_master.class.php:	$this->submit_button();
global_edit_master.class.php:	$this->show_close('un clone options');//show_more un clone options
global_edit_master.class.php:	if (!$this->edit)return;
global_edit_master.class.php:				$AND=($globalize)?'':" AND col_base='$this->pagename'";
global_edit_master.class.php:				$q="update $this->master_col_table set col_clone_target='$newclone'  where   col_clone_target='$target_id' $AND";
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:				if ($this->mysqlinst->affected_rows())$this->success[]="You have successfully switched cloned Primary Column Id$target_id to column Id$newclone";
global_edit_master.class.php:				else $this->message[]='No clone switch updates were made for Primary Column Id'.$target_id;
global_edit_master.class.php:			else $this->message[]='Enter an Id Prefix c(for column) and the column Id to clone here';
global_edit_master.class.php:				$AND=($globalize)?'':" AND blog_table_base='$this->pagename'";
global_edit_master.class.php:				$q="update $this->master_post_table set blog_clone_target='$newclone'  where   blog_clone_target='$target_id' $AND";
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:				if ($this->mysqlinst->affected_rows())$this->success[]="You have successfully switched cloned '.$type Id$target_id to post Id$newclone";
global_edit_master.class.php:				else $this->message[]='No clone switch updates were made for '.$type.' Id'.$target_id;
global_edit_master.class.php:				$AND=($globalize)?'':" AND blog_table_base='$this->pagename'";
global_edit_master.class.php:				$q="update $this->master_post_table set blog_data1='$newclone'  where   blog_data1='$target_id' $AND";
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:				if ($this->mysqlinst->affected_rows())$this->success[]="You have successfully switched cloned $type Id$target_id to column Id$newclone";
global_edit_master.class.php:				else $this->message[]='No clone switch updates were made for '.$type.' Id'.$target_id;
global_edit_master.class.php:			else $this->message[]='Include the column or post Id prefix  (ie. c4 or p52)';
global_edit_master.class.php:	$this->show_more('Switch Clone Option','noback','tiny fs1info rad5 highlight editbackground editfont',$msg,500);
global_edit_master.class.php:          printer::printx('<p class="editcolor editbackground editfont"><input   style="background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text" name="primary_switch_clone['.$target_id.']" size="6" maxlength="7" value="">Enter New Column Id </p>');
global_edit_master.class.php:          printer::printx('<p class="editcolor editbackground editfont"><input  style="background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text" name="'.$type.'_switch_clone['.$target_id.']"  size="6" maxlength="7" value="">Enter Id to Clone Here/p>');
global_edit_master.class.php:	$this->show_close('switch to new clone');	
global_edit_master.class.php:     $this->col_width_info=''; 
global_edit_master.class.php:     $this->blog_width_info=''; 
global_edit_master.class.php:		$this->col_main_width[$this->column_level]=true;	 
global_edit_master.class.php:		if (!$this->col_primary&&$this->pagename!==$this->col_table_base){//is a nested column clone in pp primary position..
global_edit_master.class.php:			$this->col_width=''; 
global_edit_master.class.php:		$styles=explode(',',$this->col_style);
global_edit_master.class.php:	elseif ($this->blog_type==='nested_column'){ 
global_edit_master.class.php:		$styles=explode(',',$this->col_style);
global_edit_master.class.php:	else $styles=explode(',',$this->blog_style); 
global_edit_master.class.php:	$this->track_font_em($styles);
global_edit_master.class.php:	list($border_width,$border_height)=$this->border_calc($styles);   
global_edit_master.class.php:		$this->col_width=(is_numeric($this->col_width)&&$this->col_width > 5 &&$this->col_width <= Cfg::Col_maxwidth)?$this->col_width:0;
global_edit_master.class.php:          if (empty($this->col_width)){
global_edit_master.class.php:               $mxw=$this->alt_width_calc($this->col_options[$this->col_max_width_opt_index]);
global_edit_master.class.php:               $this->col_width_info.='Column alt max-width: '.$this->width_info;
global_edit_master.class.php:               $minw=$this->alt_width_calc($this->col_options[$this->col_min_width_opt_index]);
global_edit_master.class.php:               $this->col_width_info.='Column alt min-width: '.$this->width_info;
global_edit_master.class.php:               $w=(empty($mxw))?$this->alt_width_calc($this->col_options[$this->col_width_opt_index]):0;
global_edit_master.class.php:               $this->col_width_info.='Column alt width: '.$this->width_info;
global_edit_master.class.php:                    $this->use_col_main_width=true;
global_edit_master.class.php:                    $col_width=$this->col_width=$this->page_width; 
global_edit_master.class.php:               else $this->use_col_main_width=false;
global_edit_master.class.php:               $this->use_col_main_width=true;
global_edit_master.class.php:               $col_width=$this->col_width;
global_edit_master.class.php:          $this->current_total_width=$this->column_total_width[$this->column_level]= (!empty($col_width))?$col_width:((!empty($this->page_width))?$this->page_width:Cfg::Page_width);// page_width setting passes to create new page. 
global_edit_master.class.php:		list($padding_total,$margin_total)=$this->pad_mar_calc($styles,$this->column_total_width[$this->column_level]);
global_edit_master.class.php:          if ($this->column_total_width[$this->column_level]-($border_width+$padding_total)<10)    
global_edit_master.class.php:		$this->current_net_width=$this->column_net_width[$this->column_level]=$this->column_total_width[$this->column_level]-(($border_width+$padding_total)); //margins not limiting in primary column
global_edit_master.class.php:		$this->background_img_px=$this->current_net_width; 
global_edit_master.class.php:	$widmax=$this->column_net_width[$this->column_level];
global_edit_master.class.php:	if ($this->blog_type==='nested_column'){ 
global_edit_master.class.php:		$this->col_width= (!empty($this->col_width)&&is_numeric($this->col_width)&&$this->col_width>0&&$this->col_width<=100)?$this->col_width:0;
global_edit_master.class.php:		if (empty($this->col_width)){
global_edit_master.class.php:               $mxw=$this->alt_width_calc($this->col_options[$this->col_max_width_opt_index]);
global_edit_master.class.php:               $this->col_width_info.='Column alt max-width: '.$this->width_info; 
global_edit_master.class.php:               $minw=$this->alt_width_calc($this->col_options[$this->col_min_width_opt_index]);
global_edit_master.class.php:               $this->col_width_info.='Column alt min-width: '.$this->width_info;
global_edit_master.class.php:               $w=(empty($mxw))?$this->alt_width_calc($this->col_options[$this->col_width_opt_index]):0;
global_edit_master.class.php:               $this->col_width_info.='Column alt width: '.$this->width_info;
global_edit_master.class.php:                    $this->use_col_main_width=false;
global_edit_master.class.php:                    $this->use_col_main_width=false;
global_edit_master.class.php:               $this->use_col_main_width=true;
global_edit_master.class.php:               $col_width=$this->col_width;
global_edit_master.class.php:		$this->current_total_width=$this->column_total_width[$this->column_level+1]= ($col_width)*$widmax/100;
global_edit_master.class.php:		$this->current_total_width_percent=$col_width;
global_edit_master.class.php:		list($padding_total,$margin_total)=$this->pad_mar_calc($styles,$this->column_total_width[$this->column_level]);
global_edit_master.class.php:		//this is parent column  as the column level changes with   $this->nested_column()  call which we haven't done yet. Other type posts are in current column level;
global_edit_master.class.php:		$margin_total_percent=$margin_total/$this->column_total_width[$this->column_level]*100;
global_edit_master.class.php:		$padding_total_percent=$padding_total/$this->column_total_width[$this->column_level]*100;
global_edit_master.class.php:		$border_percent=$border_width/$this->column_total_width[$this->column_level]*100;
global_edit_master.class.php:		$this->current_padded_width_percent=$border_percent+$margin_total_percent+$padding_total_percent;//margins are relevant in calculation for nested columns 
global_edit_master.class.php:		$this->current_padded_width_px= $border_width+$margin_total+$padding_total;
global_edit_master.class.php:		if ($this->rwd_post)$this->current_padded_width_percent=$this->current_padded_width_px=0;//rwd posts do not utilize margins widths same way..
global_edit_master.class.php:          if ($col_width*$widmax/100-$this->current_padded_width_px<10)  
global_edit_master.class.php:		$this->current_net_width=$this->column_net_width[$this->column_level+1]=$col_width*$widmax/100-$this->current_padded_width_px; 
global_edit_master.class.php:		$this->current_net_width_percent=$this->col_width-$this->current_padded_width_percent; //col_width for nested columns are stored as percentages 
global_edit_master.class.php:		$this->blog_width=(!empty($this->blog_width)&&is_numeric($this->blog_width)&&$this->blog_width>0)?$this->blog_width:0;
global_edit_master.class.php:		if (empty($this->blog_width)){
global_edit_master.class.php:               $mxw=$this->alt_width_calc($this->blog_options[$this->blog_max_width_opt_index]);
global_edit_master.class.php:               $this->blog_width_info.='Blog alt max-width: '.$this->width_info; 
global_edit_master.class.php:               $minw=$this->alt_width_calc($this->blog_options[$this->blog_min_width_opt_index]);
global_edit_master.class.php:               $this->blog_width_info.='Blog alt min-width: '.$this->width_info;
global_edit_master.class.php:               $w=(empty($mxw))?$this->alt_width_calc($this->blog_options[$this->blog_width_opt_index]):0;
global_edit_master.class.php:               $this->blog_width_info.='Blog alt width: '.$this->width_info;
global_edit_master.class.php:                    $this->use_blog_main_width=false;
global_edit_master.class.php:                    $this->use_blog_main_width=false;
global_edit_master.class.php:               $this->use_blog_main_width=true;
global_edit_master.class.php:               $blog_width=$this->blog_width;
global_edit_master.class.php:		$this->current_total_width=$blog_width*$widmax/100;
global_edit_master.class.php:		$this->current_total_width_percent=$blog_width;
global_edit_master.class.php:		list($padding_total,$margin_total)=$this->pad_mar_calc($styles,$this->column_total_width[$this->column_level]);
global_edit_master.class.php:		//this is parent column  as the column level changes with   $this->nested_column()  call which we haven't done yet. Other type posts are in current column level;
global_edit_master.class.php:		$margin_total_percent=$margin_total*$this->column_total_width[$this->column_level]/100;
global_edit_master.class.php:		$padding_total_percent=$padding_total*$this->column_total_width[$this->column_level]/100;
global_edit_master.class.php:		$border_percent=$border_width*$this->column_total_width[$this->column_level]/100;
global_edit_master.class.php:		$this->current_padded_width_percent=$border_percent+$margin_total_percent+$padding_total_percent;//margins are relevant in calculation for nested columns
global_edit_master.class.php:		$this->current_padded_width_px= $border_width+$margin_total+$padding_total;
global_edit_master.class.php:		if ($this->rwd_post)$this->current_padded_width_percent=$this->current_padded_width_px=0;//rwd posts do not utilize margins widths same way..
global_edit_master.class.php:		$this->current_net_width_percent=$blog_width-$this->current_padded_width_percent;
global_edit_master.class.php:          if ($blog_width*$widmax/100-$this->current_padded_width_px<10) 
global_edit_master.class.php:		$this->current_net_width=$blog_width*$widmax/100-$this->current_padded_width_px;
global_edit_master.class.php:		/* if ($this->blog_type==='image'){
global_edit_master.class.php:			list($bw,$bh)=$this->border_calc($this->blog_data4,false);
global_edit_master.class.php:			$hwidth=$this->calc_image_height($bh); 
global_edit_master.class.php:				$this->current_net_width_percent=$blog_width-($bw*$this->column_total_width[$this->column_level]/100+$this->current_padded_width_percent);
global_edit_master.class.php:				$this->current_total_width_percent=$hwidth/$this->current_total_width*$this->blog_width;
global_edit_master.class.php:				$this->current_net_width=$hwidth-($bw+$this->current_padded_width_px);//current padded calculate for border sides presuming same for height
global_edit_master.class.php:				$this->current_total_width=$hwidth; 
global_edit_master.class.php:	$this->background_img_px=$this->current_net_width; 
global_edit_master.class.php:	$this->delete_col_arr[]=$col_id;//used in funct blog render
global_edit_master.class.php:	$q="select  blog_id,blog_type,blog_data1,blog_status from $this->master_post_table where blog_col='$col_id' and blog_table_base='$this->pagename'";
global_edit_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		while (list($blog_id,$blog_type,$blog_data1,$status)=$this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:			$q="delete from $this->master_post_table where blog_id='$blog_id' and blog_table_base='$this->pagename'";
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			if ($this->mysqlinst->count_field($this->comment_table,'com_id','',false," where comment_blog_id='$blog_id'")){
global_edit_master.class.php:					$q="delete from ".$this->comment_table." where comment_blog_id='$blog_id' and blog_table_base='$this->pagename'"; 
global_edit_master.class.php:					$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:			if ($this->mysqlinst->count_field($this->master_post_css_table,'blog_id','',false,"Where blog_id='$blog_id'")>0){
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:				$q="delete from ".$this->master_post_css_table." where blog_id='p$blog_id' and blog_table_base='$this->pagename'";
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:				$this->delete_col($blog_data1);
global_edit_master.class.php:	$q="delete from $this->master_post_table where blog_data1='$col_id' and blog_table_base='$this->pagename' ";  
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	$q="DELETE FROM $this->master_col_table WHERE col_id='$col_id' and col_table_base='$this->pagename'";   
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	$this->success[]=$msg;
global_edit_master.class.php:     $q="select col_table, col_id from $this->master_col_table where col_table_base='$this->pagename'";  
global_edit_master.class.php:     $r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:     if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:          while (list($col_table,$col_id)=$this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:               $this->process_col_data($col_table,$col_id);
global_edit_master.class.php:                    $this->process_col_configcopy($col_id);
global_edit_master.class.php:                    $this->process_col_configexport($col_id); 
global_edit_master.class.php:                    $this->process_col_rwdexport($col_id); 
global_edit_master.class.php:     $q="select col_table, css_id from $this->master_col_css_table where col_table_base='$this->pagename'";  
global_edit_master.class.php:     $r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:     if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:          while (list($col_table,$css_id)=$this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:               $where2=" and col_table_base='$this->pagename'";
global_edit_master.class.php:               $this->process_col_data($col_table,$css_id,$this->master_col_css_table,Cfg::Col_css_fields,$where2,'clone_');
global_edit_master.class.php:	//standard form for processing is $this->blog_table.'_'.$refval1.'_blog_field
global_edit_master.class.php:				$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);  
global_edit_master.class.php:				list($c_val)=$this->mysqlinst->fetch_row($r,__LINE__);
global_edit_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);  
global_edit_master.class.php:          if ($this->mysqlinst->affected_rows()) { 
global_edit_master.class.php:               (!in_array($msg,$this->success))&&$this->success[]=$msg;
global_edit_master.class.php:               // $this->backup_page_arr[]=array($dbtable,"WhErE col_table='$tablename' $where2");#used for generating styles of pages where clones of posted content changes may be used.
global_edit_master.class.php:               $this->message[]=$msg;
global_edit_master.class.php:               // echo '<p style="font-weight: bold; font-size: 1.4em; color:#'.$this->redAlert.'">'.$msg.'</p>';
global_edit_master.class.php:     $r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:     if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:          list($blog_col_id)=$this->mysqlinst->fetch_row($r);
global_edit_master.class.php:          $this->coll_col_arr[]=$blog_col_id;
global_edit_master.class.php:     else $this->coll_col_arr[]=$col_id;
global_edit_master.class.php:     $q="select blog_id,blog_type,blog_data1 from  $this->master_post_table where blog_col=$col_id and blog_table_base='$this->pagename' and blog_status!='clone'";
global_edit_master.class.php:     $r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:     if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:          while(list($blog_id,$blog_type,$blog_data1)=$this->mysqlinst->fetch_row($r)){
global_edit_master.class.php:                    $this->clone_delete_list[]=$blog_id.'@@'.$blog_type.'@@'.$blog_data1;
global_edit_master.class.php:               else $this->clone_delete_list[]=$blog_id.'@@'.$blog_type.'@@'.'none';
global_edit_master.class.php:	$this->is_blog=true;
global_edit_master.class.php:	$this->blog_id_array=array();// whether submitted or not this must be populated below... for tinymce
global_edit_master.class.php:	$count=$this->mysqlinst->count_field($this->master_post_table,'blog_order','',false,"Where blog_table='$tablename'");   
global_edit_master.class.php:			  ($blogtype!=$this->choose_blog_type)&&$this->create_blog($tablename,$blogtype,10,0);//this type appears by default so elimate the choice
global_edit_master.class.php:			  ($blogtype!=$this->choose_blog_type)&&$this->create_blog($tablename,$blogtype,10,$this->insert_half);//this type appears by default so elimate the choice
global_edit_master.class.php:		$this->is_blog=false;
global_edit_master.class.php:	$q="select blog_id,blog_order,blog_table from ".$this->master_post_table." Where blog_table='$tablename' order by blog_order";  
global_edit_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:	while($rows=$this->mysqlinst->fetch_assoc($r,__LINE__)){
global_edit_master.class.php:		$this->blog_table=$rows['blog_table']; #this is needed as check for edit pages_obj
global_edit_master.class.php:		$this->process_blog_border($tablename.'_'.$blog_order,$tablename,$blog_order);#new blog says don't update posted vals because blog_order will be updated with new_blog Post# process posts  can change current value of border etc..	
global_edit_master.class.php:		 $this->process_blog_input($tablename.'_'.$blog_order,$tablename,$blog_order);#new blog says don't update posted vals because blog_order will be upda
global_edit_master.class.php:		$this->editpages_obj($this->master_post_table,Cfg::Post_fields,$this->blog_table.'_'.$blog_order.'_','blog_order',$blog_order,'blog_table',$this->blog_table,'update','',",blog_time=".time().",token='". mt_rand(1,mt_getrandmax())."', blog_update='".date("dMY-H-i-s")."'");#all the posted blogs before tidying is done... the last arguement will return after updating...
global_edit_master.class.php:			$this->process_post_configexport($blog_id);
global_edit_master.class.php:			$this->process_post_configcopy($blog_id); 
global_edit_master.class.php:			$this->process_post_rwdcopy($blog_id); 
global_edit_master.class.php:			$this->process_post_altrwdexport($blog_id);
global_edit_master.class.php:			$this->process_post_rwdexport($blog_id);
global_edit_master.class.php:			$this->process_post_heightexport($blog_id);
global_edit_master.class.php:			$this->process_post_widthexport($blog_id);
global_edit_master.class.php:			$this->process_post_floatexport($blog_id); 
global_edit_master.class.php:			$this->process_col_altrwdexport($blog_id);
global_edit_master.class.php:			$this->process_post_configexportdump($blog_id);
global_edit_master.class.php:			$this->process_post_configimportdump($blog_id);
global_edit_master.class.php:                    $q="update $this->master_post_table t, $this->master_post_table r SET set t.time=".time().",
global_edit_master.class.php:                    $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);	//this is affecting only one pagename... intra...
global_edit_master.class.php:		$this->delete_blog($tablename);
global_edit_master.class.php:	$this->count_blog=$count=$this->mysqlinst->count_field($this->master_post_table,'blog_order','',false,$where);
global_edit_master.class.php:	$maxcount=$this->mysqlinst->get('fieldmax');
global_edit_master.class.php:     for ($i=0;$i<=$maxcount+$this->insert_full;$i+=$this->insert_full){ 
global_edit_master.class.php:                 ($blogtype!=$this->choose_blog_type)&&$this->create_blog($tablename,$blogtype,$i,$this->insert_half);//this type appears by default so elimate the choice
global_edit_master.class.php:                 ($blogtype!=$this->choose_blog_type)&&$this->create_blog($tablename,$blogtype,$i,($this->insert_half+1));//this type appears by default so elimate the choice
global_edit_master.class.php:	if (empty($count)){}#$this->create_blog($tablename,$this->blog_drop_array[$this->text_box_index],0,$this->insert_full);
global_edit_master.class.php:		$q="select blog_type, blog_text from ".$this->master_post_table." where blog_table='$tablename' AND blog_order='$maxcount'";
global_edit_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		list($type,$text)=$this->mysqlinst->fetch_row($r); 
global_edit_master.class.php:	(isset($_POST['submitted']))&&$this->blog_tidy($tablename);#time to clean them up!!
global_edit_master.class.php:		$q="select blog_data1,blog_id,blog_type,blog_order,blog_status from  $this->master_post_table  where blog_table='$tablename' order by blog_order";  
global_edit_master.class.php:		$rdel=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		while($rows=$this->mysqlinst->fetch_assoc($rdel,__LINE__)){
global_edit_master.class.php:				$delete_arr[]=array($this->master_post_table,"where blog_id='$blog_id'",'message',$msg); 
global_edit_master.class.php:				$delete_arr[]=array($this->master_post_css_table," where blog_id='$blog_id'",'message',"Blog id $blog_id Deleted from $this->master_post_css_table");
global_edit_master.class.php:				$delete_arr[]=array($this->comment_table," where comment_blog_id='$blog_id'",'message',"Blog id $blog_id Deleted from $this->comment_table"); 
global_edit_master.class.php:					$delete_arr[]=array($this->directory_table,"where dir_menu_id='$blog_data1'",'message',$msg); 
global_edit_master.class.php:					$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:               $this->delete($delete[0],$delete[1],$delete[2],$delete[3]);
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->{$typemsg}[]=$msg;
global_edit_master.class.php:	if (!$this->edit)return;
global_edit_master.class.php:     if ($this->is_clone){
global_edit_master.class.php:          $this->submit_button();
global_edit_master.class.php:          $this->mysqlinst->count_field($this->master_post_table,'blog_order','',false," where blog_table='$tablename'");
global_edit_master.class.php:          $max=$this->mysqlinst->get('fieldmax');
global_edit_master.class.php:     $selected=$this->choose_blog_type;
global_edit_master.class.php:     $this->show_more($msg_open_prefix.$msg.' Col#'.$this->column_order_array[$this->column_level],$msg_close_prefix.$msg.' Col#'.$this->column_order_array[$this->column_level],'highlight fs1'.$this->column_lev_color.' editbackground editfont  rad3 editfont ','Click Here To Add New Posts/Column and For More info on making Choices',250);
global_edit_master.class.php:	$this->show_more('Info Post Choices','noback','highlight smaller','click for more info on post choices');   
global_edit_master.class.php:	printer::alertx('<p class="width500 fsminfo editbackground editfont '.$this->column_lev_color.' editfont left">Not only create Post content here such as Text, Images, a Navigation menu, or Social Icons etc.  andalso Create a Nested Column as well or copy clone move previous posts and columns of posts.  A nested Column is a Column within a column  used for organizing the posts (and other columns) that you create within it.  Please Review the discussion of this important topic in the Overview Section at the top of the Page!!</p>');
global_edit_master.class.php:	$this->show_close('Info Post Choices');
global_edit_master.class.php:	forms::form_dropdown($this->blog_drop_array,false,'','',$new_blog,$selected,false,$this->column_lev_color );
global_edit_master.class.php:	$this->show_more('Additional new','','floatleft smallest highlight italic','Add an additional new post type here','asis');
global_edit_master.class.php:	forms::form_dropdown($this->blog_drop_array,false,'','',$new_blog.'_add_second',$selected,false,$this->column_lev_color );
global_edit_master.class.php:	$this->show_close('Additional new');
global_edit_master.class.php:	$this->show_close($msg);
global_edit_master.class.php:	$this->submit_button();
global_edit_master.class.php:	echo'  <p class="clear"><input  type="hidden" name="submitted"  value="1" ></p><p><input class="editbackground editfont rad5 smallest cursor button'.$this->column_lev_color.' '.$this->column_lev_color.' mb10" type="submit" name="submit"   value="'.$value.'" ></p>';
global_edit_master.class.php:          $this->message[]='Post IDs Are FOUND AT THE TOP OF Each Post ie. The Number having the ID: P1, P2, etc. FORMAT. BE SURE TO INCLUDE THE P PREFIX ';
global_edit_master.class.php:     $q="update $this->master_post_table t, $this->master_post_table r SET ";
global_edit_master.class.php:     $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:     if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:             $this->success[]="Post p$blog_id was updated using styles and configs from Post p$parent_id";
global_edit_master.class.php:     else $this->message[]="Mismatch updating Post p$blog_id with Post p$parent_id"; 
global_edit_master.class.php:	$q="update $this->master_col_table t, $this->master_col_table r, $this->master_post_table  pt, $this->master_post_table  pr  SET ";
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->success[]="col p$col_id configs  and styles were exported to the same col types in this column";
global_edit_master.class.php:	else $this->message[]="No cols configs  and styles were exported using col id P$col_id";	
global_edit_master.class.php:			$this->message[]='Post IDs Are FOUND AT THE TOP OF Each Post ie. The Number having the ID: P1, P2, etc. FORMAT. BE SURE TO INCLUDE THE P PREFIX ';
global_edit_master.class.php:     $q="update $this->master_post_table t, $this->master_post_table r SET t.blog_gridspace_right=r.blog_gridspace_right,t.blog_gridspace_left=r.blog_gridspace_left,t.blog_grid_width=r.blog_grid_width, t.token='".mt_rand(1,mt_getrandmax()). "',t.blog_update='".date("dMY-H-i-s")."',t.blog_time='".time()."'"; 
global_edit_master.class.php:     $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:     if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:             $this->success[]="Post p$blog_id was updated using RWD settings  from Post p$parent_id";
global_edit_master.class.php:     else $this->message[]="Problem updating RWD settings to Post p$blog_id from Post p$parent_id"; 
global_edit_master.class.php:	$q="update $this->master_page_table c, $this->master_page_table p SET ";
global_edit_master.class.php:	$q.=" $value c.page_update='".date("dMY-H-i-s")."', c.page_time='".time()."',c.token='".mt_rand(1,mt_getrandmax()). "' where c.page_ref='$this->pagename' and p.page_ref='$parent_ref'";
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->success[]="Page Configs  were imported";
global_edit_master.class.php:	else $this->message[]="No Page Configs were affected with $q";
global_edit_master.class.php:		$q="select page_options,page_id,page_ref from $this->master_page_table where page_ref='$parent_ref' limit 1";  
global_edit_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);    
global_edit_master.class.php:		list($page_options,$page_id,$page_ref)=$this->mysqlinst->fetch_row($r,__LINE__); 
global_edit_master.class.php:		$mcount=count($this->page_options);
global_edit_master.class.php:			$this->page_options[$this->{$poption.'_index'}]=$page_options[$this->{$poption.'_index'}];
global_edit_master.class.php:		$implode_opts=implode(',',$this->page_options);
global_edit_master.class.php:		$q="update $this->master_page_table set page_options='$implode_opts' where page_ref='$this->pagename'";
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:			$this->success[]="More Page Configs  were imported";
global_edit_master.class.php:		else $this->message[]="No Page Configs were affected with $q"; 
global_edit_master.class.php:	$q="update $this->master_page_table c, $this->master_page_table p   SET ";
global_edit_master.class.php:	$q.=" $value c.page_update='".date("dMY-H-i-s")."', c.page_time='".time()."',c.token='".mt_rand(1,mt_getrandmax()). "' where  p.page_ref='$this->pagename'";
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->success[]="Page Configs  were imported";
global_edit_master.class.php:	else $this->message[]="No Page Configs were affected with $q";
global_edit_master.class.php:		$q="select page_options,page_id,page_ref from $this->master_page_table";  
global_edit_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);    
global_edit_master.class.php:		while (list($page_options,$page_id,$page_ref)=$this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:			if ($page_ref===$this->pagename)continue;
global_edit_master.class.php:			$mcount=count($this->page_options);
global_edit_master.class.php:				$opt_array[$this->{$poption.'_index'}]=$this->page_options[$this->{$poption.'_index'}];
global_edit_master.class.php:			$q="update $this->master_page_table set page_options='$implode_opts' where page_id='$page_id'";
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:			if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:				$this->success[]="More Page Configs  were exported";
global_edit_master.class.php:			else $this->message[]="No Page Configs were affected with $q"; 
global_edit_master.class.php:	$q="update $this->master_col_table t, $this->master_col_table r, $this->master_post_table pt, $this->master_post_table pr SET t.col_gridspace_right=r.col_gridspace_right,t.col_gridspace_left=r.col_gridspace_left,t.col_grid_width=r.col_grid_width, t.token='".mt_rand(1,mt_getrandmax()). "',t.col_update='".date("dMY-H-i-s")."',t.col_time='".time()."' where  t.col_primary!=1 and r.col_primary!=1 and r.col_id=$col_id and pt.blog_data1=t.col_id and pr.blog_data1=r.col_id and pt.blog_col=pr.blog_col"; // bt.blog_col and br.blog_col refer to the parent col ids being a match... 
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->success[]="col p$col_id RWD Grid settings were exported to Nested column col types directly in the parent column";
global_edit_master.class.php:	else $this->message[]="No cols were affected for RWD Grid settings update using $q in col id P$col_id";
global_edit_master.class.php:		$q="update $this->master_col_table r, $this->master_post_table pt, $this->master_post_table pr SET pt.blog_gridspace_right=r.col_gridspace_right,pt.blog_gridspace_left=r.col_gridspace_left,pt.blog_grid_width=r.col_grid_width, pt.token='".mt_rand(1,mt_getrandmax()). "',pt.blog_update='".date("dMY-H-i-s")."',pt.blog_time='".time()."' where r.col_id=$col_id and pr.blog_data1=r.col_id and pt.blog_col=pr.blog_col"; // bt.blog_col and br.blog_col refer to the parent col ids being a match... 
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->success[]="col p$col_id RWD Grid settings were also exported to all direct Post types in the parent column";
global_edit_master.class.php:		else $this->message[]="No non nested columns were affected for RWD Grid settings update using $q in col id P$col_id";
global_edit_master.class.php:	$q="update $this->master_post_table t, $this->master_post_table r  SET t.blog_alt_rwd=r.blog_alt_rwd, t.token='".mt_rand(1,mt_getrandmax()). "',t.blog_update='".date("dMY-H-i-s")."',t.blog_time='".time()."' where  r.blog_id=$blog_id and t.blog_type='nested_column'  and r.blog_type='nested_column'  and t.blog_col=r.blog_col";  
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->success[]="col Alternative-RWD settings were exported to nested column col types in same parent column";
global_edit_master.class.php:	else $this->message[]="No cols were affected for Alternative-RWD settings update using $q "; 
global_edit_master.class.php:	$q="select $fields from $this->master_post_table where blog_id=$parent_id";
global_edit_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$row=$this->mysqlinst->fetch_assoc($r);
global_edit_master.class.php:		$this->message[]=$dir.'lastpostdump.dat'.' file does not exist for data import';
global_edit_master.class.php:	$q="update $this->master_post_table set ";
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	$q="update $this->master_post_table t, $this->master_post_table r SET ";
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->success[]="Post p$blog_id configs  and styles were exported to the same post types directly in the parent column";
global_edit_master.class.php:	else $this->message[]="No Posts configs  and styles were exported using post id P$blog_id";	
global_edit_master.class.php:	$q="update $this->master_post_table t, $this->master_post_table r SET t.blog_gridspace_right=r.blog_gridspace_right,t.blog_gridspace_left=r.blog_gridspace_left,t.blog_grid_width=r.blog_grid_width, t.token='".mt_rand(1,mt_getrandmax()). "',t.blog_update='".date("dMY-H-i-s")."',t.blog_time='".time()."' where  t.blog_type!='nested_column' and r.blog_id=$blog_id and t.blog_table=r.blog_table";
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->success[]="Post p$blog_id RWD Grid settings were exported to  non nested column post types directly in the parent column";
global_edit_master.class.php:	else $this->message[]="No Posts were affected for RWD Grid settings update using $q in post id P$blog_id";
global_edit_master.class.php:		$q="update $this->master_col_table t, $this->master_post_table r, $this->master_post_table pt SET t.col_gridspace_right=r.blog_gridspace_right,t.col_gridspace_left=r.blog_gridspace_left,t.col_grid_width=r.blog_grid_width, t.token='".mt_rand(1,mt_getrandmax()). "',t.col_update='".date("dMY-H-i-s")."',t.col_time='".time()."' where  r.blog_id=$blog_id and pt.blog_data1=t.col_id and  pt.blog_col=r.blog_col"; // 
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:			$this->success[]="Post p$blog_id RWD Grid settings were exported to  non nested column post types in this column";
global_edit_master.class.php:		else $this->message[]="No Posts were affected for RWD Grid settings update using $q in post id P$blog_id";
global_edit_master.class.php:	$q="update $this->master_post_table t, $this->master_post_table r SET t.blog_alt_rwd=r.blog_alt_rwd,
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->success[]="Post p$blog_id Alternative-RWD settings were exported to  post types $msg_nested in this parent column";
global_edit_master.class.php:	else $this->message[]="No Posts were affected for Alternative-RWD settings update using $q in post id P$blog_id";
global_edit_master.class.php:	$q="update $this->master_post_table t, $this->master_post_table r SET t.blog_height=r.blog_height,
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->success[]="Post p$blog_id height setting was exported to post types $msg_nested in this column";
global_edit_master.class.php:	else $this->message[]="No Posts were affected for height update using using post id P$blog_id";
global_edit_master.class.php:	$q="update $this->master_post_table t, $this->master_post_table r SET t.blog_float=r.blog_float,
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->success[]="Post p$blog_id float setting was exported to  post types$msg_nested in the parent column";
global_edit_master.class.php:	else $this->message[]="No Posts were affected for float update using using post id P$blog_id";
global_edit_master.class.php:	$q="update $this->master_post_table t, $this->master_post_table r SET t.blog_width=r.blog_width,
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->success[]="Post p$blog_id width setting was exported to post types in the parent column";
global_edit_master.class.php:	else $this->message[]="No Posts were affected for width update using using post id P$blog_id";
global_edit_master.class.php:		$q="update $this->master_col_table t, $this->master_post_table s, $this->master_post_table r SET t.col_width=r.blog_width,
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:			$this->success[]="Post p$blog_id width setting was exported to nested col types in the parent column";
global_edit_master.class.php:		else $this->message[]="No Posts were affected for width update using using post id P$blog_id";
global_edit_master.class.php:			$this->message[]='col IDs Are FOUND AT THE TOP OF Each col ie. The Number having the ID: C1, C2, etc. FORMAT. BE SURE TO INCLUDE THE C PREFIX ';
global_edit_master.class.php:		$q="select col_table_base from $this->master_col_table where col_id='$child_id'";
global_edit_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:			list($table_base)=$this->mysqlinst->fetch_row($r);
global_edit_master.class.php:			$this->message[]="col table base not ffound with $q";
global_edit_master.class.php:		$q="update $this->master_col_table set col_clone_target='$child_id',col_clone_target_base='$table_base' where col_status='clone' and col_clone_target='$parent_id'";
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:			$this->success[]="col clone tranfer has occurred tranfering clones of C$parent_id Id to C$child_id";
global_edit_master.class.php:		else $this->inform[]="No Primary column Column Transfers were made using $q";
global_edit_master.class.php:		$q="update $this->master_post_table set blog_data1='$child_id',blog_clone_target_base='$table_base' where blog_status='clone' and blog_data1='$parent_id'";
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:			$this->success[]="Nested col clone tranfer has occurred tranfering clones of C$parent_id Id to C$child_id";
global_edit_master.class.php:		else $this->inform[]="No Nested column Column Transfers were made using $q";
global_edit_master.class.php:		$this->message[]='col IDs Are FOUND AT THE TOP OF Each col ie. The Number having the ID: C1, C2, etc. FORMAT. BE SURE TO INCLUDE THE C PREFIX ';
global_edit_master.class.php:	$q="update $this->master_col_table t, $this->master_col_table r SET ";
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->success[]="col c$col_id was updated using styles and configs from col c$parent_id";
global_edit_master.class.php:	else $this->message[]="Mismatch updating col c$col_id with col c$parent_id";	
global_edit_master.class.php:		$q="update $this->master_post_table set blog_time=".time().",token='".mt_rand(1,mt_getrandmax()). "', blog_border_start=0  where blog_table='$tablename' AND blog_order=$blog_order";  
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		$q="update $this->master_post_table  set blog_time=".time().",token='".mt_rand(1,mt_getrandmax()). "', blog_border_stop=0 where blog_table='$tablename' AND blog_order=$blog_order";  
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:	$q3="select distinct dir_menu_id from $this->directory_table"; 
global_edit_master.class.php:	$r3=$this->mysqlinst->query($q3,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){ 
global_edit_master.class.php:		while (list($dir_menu_id)=$this->mysqlinst->fetch_row($r3)){  
global_edit_master.class.php:				$q="delete from $this->directory_table where dir_menu_id='$dir_menu_id'"; 
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:				if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:					$this->success[]=$msg;
global_edit_master.class.php:					$this->message[]=$msg;
global_edit_master.class.php:	else $this->message[]="No delete Menu Ids Affected";
global_edit_master.class.php:	$q="select col_table,col_id,col_status from $this->master_col_table where col_table_base='$this->pagename'";
global_edit_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:	while(list($col_table,$col_id,$col_status)=$this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:			$this->delete_col($col_id,$status);
global_edit_master.class.php:			//$this->message[]='Cloned Column Id'.$col_id.' has Successfully Been Deleted';
global_edit_master.class.php:	$q="update $this->master_col_table set col_time='".time()."', token='".mt_rand(1,mt_getrandmax())."',col_tcol_num=col_num";
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			$this->success[]="Primary Column to Clone/Copy/Move has been Created"; 
global_edit_master.class.php:			$this->success[]="Primary Column to Begin has been Created";
global_edit_master.class.php:	foreach ($this->col_field_arr_all as $field) {
global_edit_master.class.php:	$col_table_base=$this->pagename;
global_edit_master.class.php:	 $q="insert into $this->master_col_table ($col_fields_all)  values ($values)";   
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true); 
global_edit_master.class.php:		$this->mysqlinst->count_field($this->master_col_table,'col_id','',false,'');  
global_edit_master.class.php:		$col_id=$this->mysqlinst->fieldmax;
global_edit_master.class.php:		$q="update $this->master_col_table set col_table='{$this->pagename}_post_id$col_id' where col_id='$col_id'"; 
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:	 $this->primary_order_update(false);
global_edit_master.class.php:		$q="update $this->master_col_table set token='".mt_rand(1,mt_getrandmax())."',col_tcol_num=col_num";
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	$q="select col_id,col_tcol_num  from $this->master_col_table where col_table_base='$this->pagename' and col_primary=1 order by col_tcol_num"; 
global_edit_master.class.php:	$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		while (list($col_id,$pptcol)=$this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:			$q2="UPDATE  $this->master_col_table set col_num=$order, token='".mt_rand(1,mt_getrandmax())."' where col_id=$col_id";   
global_edit_master.class.php:			$this->mysqlinst->query($q2,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:	$q="update $this->master_post_table  set blog_time=".time().",token='".mt_rand(1,mt_getrandmax()). "', $key='$val' where blog_table='$tablename' AND blog_order=$blog_order";   
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			$q="delete from $this->master_post_table where blog_id='$id' and blog_table_base='$this->pagename'";
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			$this->message[]='Post Id: P'.$id.' has been Deleted';
global_edit_master.class.php:			$q="select blog_data1,blog_status from $this->master_post_table where  blog_data1='$id' and blog_unstatus='unclone' and blog_type='nested_column'"; 
global_edit_master.class.php:			$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:				list($col_id,$status)=$this->mysqlinst->fetch_row($r,__LINE__);
global_edit_master.class.php:					$this->delete_col($col_id);
global_edit_master.class.php:					$q="delete from $this->master_post_table where blog_data1='$id' and blog_table_base='$this->pagename'";
global_edit_master.class.php:					$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		if ($switch===$this->choose_blog_type)continue;
global_edit_master.class.php:			$this->message[]=$msg;  
global_edit_master.class.php:		$tablename='uncle_'.$this->pagename.'_id'.$blog_id;
global_edit_master.class.php:		$count=$this->mysqlinst->count_field($this->master_post_table,'blog_order','',false, " where blog_table='$tablename'");
global_edit_master.class.php:			$q="delete from $this->master_post_table where blog_table='$tablename'";
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		$q="select blog_width,blog_float from $this->master_post_table where blog_id='$blog_id'";
global_edit_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		list ($blog_width,$blog_float)=$this->mysqlinst->fetch_row($r,__LINE__,__method__); 
global_edit_master.class.php:		$this->create_blog($tablename,$switch,'10',$this->insert_half,$blog_id,'unclone',$blog_width,$blog_float,$parent_tableID);
global_edit_master.class.php:		$this->success[]="You Have Created a New Mirror release $switch";
global_edit_master.class.php:		 if ((isset($_POST['create_unclone'][$blog_id])&&$_POST['create_unclone'][$blog_id]!=$this->choose_blog_type)){
global_edit_master.class.php:			$this->message[]=$msg;  
global_edit_master.class.php:		$tablename='uncle_'.$this->pagename.'_id'.$blog_id;  
global_edit_master.class.php:		$count=$this->mysqlinst->count_field($this->master_post_table,'blog_order','',false, " where blog_table='$tablename'");
global_edit_master.class.php:			$q="delete from $this->master_post_table where blog_table='$tablename'";
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		$q="select blog_id,$post_fields from $this->master_post_table where blog_id=$blog_id";   
global_edit_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		if (!$this->mysqlinst->affected_rows()){
global_edit_master.class.php:			$this->message[]='Error Copy Mirror release PostID'.$blog_id;
global_edit_master.class.php:		$row1= $this->mysqlinst->fetch_assoc($r,__LINE__); 
global_edit_master.class.php:               if($field==='blog_table_base')$value.="'$this->pagename',";
global_edit_master.class.php:		$q="insert into $this->master_post_table  ($post_fields,blog_update,blog_time,token) values ($value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')";   
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		$this->mysqlinst->count_field($this->master_post_table,'blog_id','',false,'');  
global_edit_master.class.php:		$blog_id=$this->mysqlinst->fieldmax;
global_edit_master.class.php:			$q="select $col_fields from $this->master_col_table where col_id=".$row1['blog_data1'];   
global_edit_master.class.php:			$r3=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			$row2 = $this->mysqlinst->fetch_assoc($r3,__LINE__); 
global_edit_master.class.php:			foreach ($this->col_field_arr as $field) {
global_edit_master.class.php:				if($field==='col_table_base')$value.="'$this->pagename',";
global_edit_master.class.php:			$q="insert into $this->master_col_table ($col_fields,col_update,col_time,token) values ( $value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')";    
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			$this->mysqlinst->count_field($this->master_col_table,'col_id','',false,'');  
global_edit_master.class.php:			$col_id=$this->mysqlinst->fieldmax;
global_edit_master.class.php:			$q="update $this->master_col_table set col_table='{$this->pagename}_post_id$col_id' where col_id='$col_id'"; 
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			$q="update $this->master_post_table set token='".mt_rand(1,mt_getrandmax()). "',blog_data1='$col_id',blog_data2='{$this->pagename}_post_id$col_id' where blog_id=$blog_id";   
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			$this->copy_col($col_id,$row1['blog_data1'],'copy',false);
global_edit_master.class.php:		$this->success[]="You Have Created a New Mirror release Post";
global_edit_master.class.php:		$q="select col_id from $this->master_col_table where col_table='$tablename' Limit 1";
global_edit_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		list($col_id)=$this->mysqlinst->fetch_row($r,__LINE__);
global_edit_master.class.php:          case $this->blog_drop_array[11]:  #copy clone post
global_edit_master.class.php:          case $this->blog_drop_array[12]: #copy clone column
global_edit_master.class.php:          case	$this->blog_drop_array[0]:# nested column
global_edit_master.class.php:               //$this->column_new_array[]=$col_id;
global_edit_master.class.php:               //$this->mysqlinst->count_field($this->master_col_table,'col_num','',false,'');
global_edit_master.class.php:                    if($field==='col_table_base')$value.="'$this->pagename',";
global_edit_master.class.php:               $q="insert into $this->master_col_table ($col_fields,col_update,col_time,token) values ($value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')";  
global_edit_master.class.php:               $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:               $this->mysqlinst->count_field($this->master_col_table,'col_id','',false,'');  
global_edit_master.class.php:               $new_col_id=$this->mysqlinst->fieldmax;
global_edit_master.class.php:               $q="update $this->master_col_table set col_table='{$this->pagename}_post_id$new_col_id' where col_id='$new_col_id'"; 
global_edit_master.class.php:               $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:               $this->column_new=$col_id;//used in alerting for new column!
global_edit_master.class.php:          case $this->blog_drop_array[1]:#   'New Text Editor Box',
global_edit_master.class.php:               $blog_text=$this->default_blog_text;
global_edit_master.class.php:          case $this->blog_drop_array[2]:#new image
global_edit_master.class.php:          case $this->blog_drop_array[3]:#'New Left Image Right Side Text',
global_edit_master.class.php:          case $this->blog_drop_array[4]:# 'New Right Image Left Side Text',
global_edit_master.class.php:          case $this->blog_drop_array[5]:#'New Video',
global_edit_master.class.php:          case $this->blog_drop_array[6]:#new contact Form
global_edit_master.class.php:          case $this->blog_drop_array[7]:#new social array
global_edit_master.class.php:          case $this->blog_drop_array[8]:#slideshow
global_edit_master.class.php:          case $this->blog_drop_array[9]:#ga 
global_edit_master.class.php:          case $this->blog_drop_array[10]:#new navigation 
global_edit_master.class.php:		elseif($field==='blog_table_base')$value.="'$this->pagename',";
global_edit_master.class.php:	$q="insert into $this->master_post_table  ($post_fields,blog_update,blog_time,token) values ($value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')";  
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:	if ($this->mysqlinst->affected_rows())$this->success[]="You have Successfuly Created a New $blog_type ";
global_edit_master.class.php:	else $this->message[]="Problem with creating New post type $blog_type";
global_edit_master.class.php:	$i=$this->insert_full; 
global_edit_master.class.php:	$q="select blog_id,blog_order from ".$this->master_post_table." where blog_table='$tablename' order by blog_order"; 
global_edit_master.class.php:	$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if (!$this->mysqlinst->affected_rows())return;
global_edit_master.class.php:	while (list($blog_id,$blog_order)=$this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:		$q2="UPDATE  $this->master_post_table set blog_temp=$i, token='".mt_rand(1,mt_getrandmax())."' where blog_id='$blog_id' AND blog_order=$blog_order"; 
global_edit_master.class.php:	     $this->mysqlinst->query($q2,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		$i+=$this->insert_full;
global_edit_master.class.php:	$q="Update  $this->master_post_table set blog_time='".time()."',token='".mt_rand(1,mt_getrandmax())."',blog_order=blog_temp where blog_table='$tablename'";  
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	$q="select col_num  from ".$this->master_col_table." where col_primary=1 and col_table_base='$this->pagename' order by col_num"; 
global_edit_master.class.php:	$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if (!$this->mysqlinst->affected_rows())return;
global_edit_master.class.php:	while (list($col_num)=$this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:		$q2="UPDATE  $this->master_col_table set col_temp=$i, token='".mt_rand(1,mt_getrandmax())."' where col_table_base='$this->pagename'  AND col_num=$col_num";   
global_edit_master.class.php:	     $this->mysqlinst->query($q2,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:	$q="Update  $this->master_col_table  set col_time='".time()."',token='".mt_rand(1,mt_getrandmax())."',col_num=col_temp where col_table_base='$this->pagename' and col_primary=1";  
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false); 
global_edit_master.class.php:		$q="delete from $this->master_post_table where blog_id=$key";
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	$msg='Delete This Mirror released Recloned '.$this->blog_type.' &#40;Will Return to Original Cloned Parent&#41;';
global_edit_master.class.php:	if ($this->pagename!=$this->blog_table_base)return;
global_edit_master.class.php:	$type=(isset($this->blog_type))?$this->blog_type:'Divison';
global_edit_master.class.php:	$msg=($this->blog_unstatus==='unclone')?'Delete This Mirror released '.$type.' &#40;Will Return to Cloned Parent&#41;':'Delete this Post';
global_edit_master.class.php:	echo'<p class="warn1 floatleft redAlert left"><input type="checkbox" name="delete_blog['.$this->blog_table.']['.$this->blog_order.']" value="delete" onchange="edit_Proc.oncheck(\'delete_blog['.$this->blog_table.']['.$this->blog_order.']\',\'THIS ENTRY WILL BE DELETED WHEN YOU HIT CHANGE, UNCHECK TO CANCEL\');gen_Proc.use_ajax(\''.Sys::Self.'?unclone_list_post='.$this->blog_id.'@@del_unc_'.$this->blog_id.'\',\'handle_replace\',\'get\');" >&nbsp;'.$msg.'</p>';
global_edit_master.class.php:	echo '<p id="del_unc_'.$this->blog_id.'"></p>';
global_edit_master.class.php:	if ($this->is_page){
global_edit_master.class.php:	elseif ($this->is_column){
global_edit_master.class.php:	elseif ($this->is_blog){
global_edit_master.class.php:	else $this->message[]='Overran in break point';
global_edit_master.class.php:	echo '<div class="'.$this->column_lev_color.'  floatleft left fsminfo editbackground editfont"><!--wrap break point-->';
global_edit_master.class.php:	printer::alertx('<p class="fs1'.$this->column_lev_color.'  floatleft" >This Systems main Responsive Web Design settings, referred to here as RWD,  is based on Current Device Screen Width and Fluid Percentage Styling and avoids "device specific" styling due to the ever increasing variety of device screen sizes.  This system enables you to control CSS styling with @media break points which  sets specific content width based on the viewers device screen dimension and to further customize RWD break points and content width size for individual nested columns or posts or both so it can best respond to your content.  Initially, posts within columns have a width of 100% and no RWD set,  but posts have built in response non-the-less.  And for many column postings layouts this will suffice. </p>');
global_edit_master.class.php:	$this->{'fdate'.$i}=date("F j, Y",$date);$i++;
global_edit_master.class.php:	$this->{'fdate'.$i}=date("M j, y",$date);$i++;
global_edit_master.class.php:	$this->{'fdate'.$i}=date("j F, Y",$date);$i++;
global_edit_master.class.php:	$this->{'fdate'.$i}=date("M j",$date);$i++;
global_edit_master.class.php:	$this->{'fdate'.$i}=date("j M",$date);$i++;
global_edit_master.class.php:	$this->{'fdate'.$i}=date("n/j/Y",$date);$i++;
global_edit_master.class.php:	$this->{'fdate'.$i}=date("n/j/y",$date);$i++;
global_edit_master.class.php:	$this->{'fdate'.$i}=date("j/n/Y",$date);$i++;
global_edit_master.class.php:	$this->{'fdate'.$i}=date("j/n/y",$date);$i++;
global_edit_master.class.php:	$this->{'fdate'.$i}='<p class="center style_day">'.date("j",$date).'</p><p class="center style_month">'.date("M",$date).'</p>';$i++;
global_edit_master.class.php:	$this->{'fdate'.$i}='<p class="center style_month">'.date("M",$date).'</p><p class="center style_day">'.date("j",$date).'</p>';$i++;
global_edit_master.class.php:	$this->{'fdate'.$i}=date("F j, Y g:i A",$date);$i++;
global_edit_master.class.php:	$this->{'fdate'.$i}=date("M j, y g:i A",$date);$i++; 
global_edit_master.class.php:	$this->{'fdate'.$i}=date("j F, Y g:i A",$date);$i++;
global_edit_master.class.php:	$this->{'fdate'.$i}=date("j M, y g:i A",$date);$i++;
global_edit_master.class.php:	$this->{'fdate'.$i}=date("F j g:i A",$date);$i++;
global_edit_master.class.php:	$this->{'fdate'.$i}=date("M j g:i A",$date); $i++;
global_edit_master.class.php:	$this->{'fdate'.$i}=date("j F g:i A",$date);$i++;
global_edit_master.class.php:	$this->{'fdate'.$i}=date("j M g:i A",$date);$i++;  
global_edit_master.class.php:	$val=(is_numeric($this->page_options[$this->page_date_format_index])&&$this->page_options[$this->page_date_format_index]<$i)?$this->page_options[$this->page_date_format_index]:0;
global_edit_master.class.php:	$fdate=$this->{'fdate'.$val}; 
global_edit_master.class.php:	$this->show_more('em, rem, %, px &amp; px scale opt for  min-width, max-width, &amp; width choices');
global_edit_master.class.php:	if ($this->is_column)
global_edit_master.class.php:	$css_id=($this->is_column)?$this->col_dataCss:$this->dataCss; 
global_edit_master.class.php:	$this->width_max_special($data.'_'.$type.'_options',$this->{$type.'_max_width_opt_index'},'','.'.$css_id,$this->{'use_'.$type.'_main_width'});
global_edit_master.class.php:	$this->width_special($data.'_'.$type.'_options',$this->{$type.'_width_opt_index'},'','.'.$css_id,$this->{'use_'.$type.'_main_width'});
global_edit_master.class.php:	$this->width_min_special($data.'_'.$type.'_options',$this->{$type.'_min_width_opt_index'},'','.'.$css_id,$this->{'use_'.$type.'_main_width'});
global_edit_master.class.php:	$this->show_close('em, rem, px with scale, min-width, max-width, &amp; width choices');
global_edit_master.class.php:	$this->show_more('Uniform Post Height Option');
global_edit_master.class.php:	$this->print_wrap('Uniform Post Height Option');
global_edit_master.class.php:     if ($type=='blog'&&$this->blog_type==='image')
global_edit_master.class.php:	$this->height_options($type,$data);
global_edit_master.class.php:     $css_id=($type==='col')?$this->col_dataCss:$this->dataCss;
global_edit_master.class.php:     $this->editoverridecss.='#'.$css_id.'{max-height:100%;min-height:0px;height:100%;overflow:visible;}';
global_edit_master.class.php:	$this->show_more('em, rem, px with scale opt for  min-height, max-height, &amp; height choices'); 
global_edit_master.class.php:	$css_id=($this->is_column)?$this->col_dataCss:$this->dataCss;
global_edit_master.class.php:     if ($this->is_blog&&$this->blog_type==='image'&&$this->image_height_set){
global_edit_master.class.php:	$this->{$data.'_'.$type.'_options'}[$this->{$type.'_max_height_opt_index'}]=$this->{$type.'_options'}[$this->{$type.'_max_height_opt_index'}];
global_edit_master.class.php:	$this->height_max_special($data.'_'.$type.'_options',$this->{$type.'_max_height_opt_index'},'','.'.$css_id);
global_edit_master.class.php:	$this->{$data.'_'.$type.'_options'}[$this->{$type.'_height_opt_index'}]=$this->{$type.'_options'}[$this->{$type.'_height_opt_index'}];
global_edit_master.class.php:	$this->height_special($data.'_'.$type.'_options',$this->{$type.'_height_opt_index'},'','.'.$css_id);
global_edit_master.class.php:	$this->{$data.'_'.$type.'_options'}[$this->{$type.'_min_height_opt_index'}]=$this->{$type.'_options'}[$this->{$type.'_min_height_opt_index'}];
global_edit_master.class.php:	$this->height_min_special($data.'_'.$type.'_options',$this->{$type.'_min_height_opt_index'},'','.'.$css_id);
global_edit_master.class.php:	$this->show_close('em, rem, px with scale, min-height, max-height, &amp; height choices');
global_edit_master.class.php:	if ($this->is_clone&&!$this->clone_local_style)return;
global_edit_master.class.php:	$data=$this->data; 
global_edit_master.class.php:	$name='name="'.$data.'_'.$type.'_alt_rwd['.$this->{$type.'_width_mode_index'}.']" ';
global_edit_master.class.php:		switch ($this->{$type.'_alt_rwd'}[$this->{$type.'_width_mode_index'}]) {
global_edit_master.class.php:			$this->blog_alt_rwd[$this->blog_width_mode_index]='none'; 
global_edit_master.class.php:          $altype=($this->blog_type==='nested_column')?'nested column post':'post';
global_edit_master.class.php:		$colmsg=($this->blog_type==='nested_column')?'<b>Note: Setting alternative width on a nested column directly affects the column sizing itself</b>':'';
global_edit_master.class.php:		echo '<div class="fsminfo editbackground editfont '.$this->column_lev_color.'"><!--alt width wrapper-->';
global_edit_master.class.php:		$compression=(is_numeric($this->{$type.'_alt_rwd'}[$this->{$type.'_min_width_index'}])&&$this->{$type.'_alt_rwd'}[$this->{$type.'_min_width_index'}]<101&&$this->{$type.'_alt_rwd'}[$this->{$type.'_min_width_index'}]>0)?$this->{$type.'_alt_rwd'}[$this->{$type.'_min_width_index'}]:Cfg::Default_min_width;
global_edit_master.class.php:		$value=$compression.'%   '.(round($compression * $this->current_total_width/100,1)).'px';   
global_edit_master.class.php:		$name=$data.'_'.$type.'_alt_rwd['.$this->{$type.'_min_width_index'}.']';
global_edit_master.class.php:		$factor=$this->current_total_width/100;
global_edit_master.class.php:		$this->mod_spacing($name,$compression,0,100,.05,'%','',$msgjava,$factor,'px');
global_edit_master.class.php:		$bounceback=(is_numeric($this->{$type.'_alt_rwd'}[$this->{$type.'_bounce_width_index'}])&&$this->{$type.'_alt_rwd'}[$this->{$type.'_bounce_width_index'}]<301&&$this->{$type.'_alt_rwd'}[$this->{$type.'_bounce_width_index'}]>0)?$this->{$type.'_alt_rwd'}[$this->{$type.'_bounce_width_index'}]:0;
global_edit_master.class.php:		$name=$data.'_'.$type.'_alt_rwd['.$this->{$type.'_bounce_width_index'}.']';// page not setup  was determining different default..
global_edit_master.class.php:		printer::printx('<p class="'.$this->column_lev_color.'">Change Current bounceback percentage of this post</p>');
global_edit_master.class.php:		$this->mod_spacing($name,$bounceback,0,300,1,'%');
global_edit_master.class.php:		$this->submit_button();
global_edit_master.class.php:	if (!$this->edit)return;  
global_edit_master.class.php:     $this->tracker=array(); 
global_edit_master.class.php:	$upper_width=($this->is_page)?$this->page_width:$this->column_total_width[0]; 
global_edit_master.class.php:	$this->show_more('RWD Scale '.$type,'','highlight floatleft editfont '.$fsize.' editbackground buttoninfo','Choose bps to further RWD scale the size value you choose here'); 
global_edit_master.class.php:	$this->print_wrap('break points');
global_edit_master.class.php:	$upper_msg=($this->is_page)?'Page width in default page settings':'Primary Column Width';
global_edit_master.class.php:	$this->mod_spacing($name.'['.$bp1_index.']',$bp1,300,$upper_width,1,'px','none'); 
global_edit_master.class.php:	$this->mod_spacing($name.'['.$bp2_index.']',$bp2,300,$upper_width,1,'px','none');
global_edit_master.class.php:     $this->show_more('Modify default Linear Scaling','','smaller editcolor editfont editbackground');
global_edit_master.class.php:	$this->mod_spacing($name.'['.$mod_percent_index.']',$mod_percent,25,400,1,'%','none',$msgjava);
global_edit_master.class.php:     $this->submit_button();
global_edit_master.class.php:	$this->show_close('Modify default One to One Scaling','','smaller editcolor editfont editbackground');
global_edit_master.class.php:     $this->submit_button();
global_edit_master.class.php:	$this->close_print_wrap('break points'); 
global_edit_master.class.php:	$this->show_close('Set RWD Breakpoints');
global_edit_master.class.php:          $this->scale_render($arr,$value,$mod_percent,$incs,$css,$style,$bp1,$bp2,$unit);
global_edit_master.class.php:     $this->tracker=false;
global_edit_master.class.php:     $this->tracker=true;
global_edit_master.class.php:     $typecss=($this->is_page)?'pagecss':'mediacss';
global_edit_master.class.php:     $this->$typecss.='
global_edit_master.class.php:              // $this->tracker[$i]=$ratio*$value;
global_edit_master.class.php:          $this->$typecss.='
global_edit_master.class.php:     if ($this->is_page)return;
global_edit_master.class.php:     $id=($this->is_column)?'c'.$this->col_id:'b'.$this->blog_id;
global_edit_master.class.php:     if ($flag&&$i>=$this->max_width_limit) 
global_edit_master.class.php:	if ($this->is_blog&&$this->blog_type==='gallery'&&$this->blog_tiny_data2==='master_gall')printer::printx('<p class="tip"> Master Galleries are fully responsive and perfom best at 100% of available width for each break point. directly set a maximum availble width in the configuration</p>');
global_edit_master.class.php:	if ($type==='col'&&$this->column_level <1) return;  
global_edit_master.class.php:	$cid=($this->blog_type==='nested_column')?$this->column_id_array[$this->column_level-1]:$this->col_id;
global_edit_master.class.php:     $bc_id=($this->is_column)?'col_'.$this->col_id:'blog_'.$this->blog_id;
global_edit_master.class.php:    if($this->edit&&!$this->is_clone&&isset($_POST['submitted'])){
global_edit_master.class.php:              $new_colgc="{$this->current_grid_units}@@$this->page_br_points";
global_edit_master.class.php:              if ($new_colgc !== $this->col_grid_clone){
global_edit_master.class.php:                   $q="update $this->master_col_table set col_grid_clone='$new_colgc' where col_id=$this->col_id";
global_edit_master.class.php:                   $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:              $new_bloggc="{$this->current_grid_units}@@$this->page_br_points";
global_edit_master.class.php:              if ($new_bloggc !== $this->blog_grid_clone){
global_edit_master.class.php:                   $q="update $this->master_post_table set blog_grid_clone='$new_bloggc' where blog_id=$this->blog_id";
global_edit_master.class.php:                   $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:    if($this->is_clone&&!$this->clone_local_style){ 
global_edit_master.class.php:         if (!empty($this->{$type.'_grid_clone'})&&count(explode('@@',$this->{$type.'_grid_clone'})>1)){
global_edit_master.class.php:              $tarr=explode('@@',$this->{$type.'_grid_clone'});
global_edit_master.class.php:              if ($tarr[0]!=$this->current_grid_units){ 
global_edit_master.class.php:              if ($tarr[1]!=implode(',',$this->page_break_arr)){
global_edit_master.class.php:     $bp_arr=$this->page_break_arr;
global_edit_master.class.php:     $gu=$this->current_grid_units;
global_edit_master.class.php:     if(!isset($this->grid_width_record[$cid]))$this->grid_width_record[$cid]=array();
global_edit_master.class.php:          if(!isset($this->{'column_total_gu_arr'}))$this->{'column_total_gu_arr'}=array();
global_edit_master.class.php:          if(!array_key_exists($cid,$this->{'column_total_gu_arr'}))$this->{'column_total_gu_arr'}[$cid]=array();
global_edit_master.class.php:          ${$field.'_arr'}=explode(',',$this->{$field});
global_edit_master.class.php:          if ((!$this->is_clone||$this->clone_local_style)&&count(${$field.'_arr'})>$countbp){
global_edit_master.class.php:              $this->hidden_array[]='<input type="hidden" name="'.$data.'_'.$field.'" value="'.$newval.'">';//cut off xtra classes if bps for column less than previous
global_edit_master.class.php:              if(!array_key_exists($bp,$this->{'column_total_gu_arr'}[$cid]))$this->{'column_total_gu_arr'}[$cid][$bp]=0;
global_edit_master.class.php:                             $this->{'column_total_gu_arr'}[$cid][$bp]+=$ii;
global_edit_master.class.php:                             // the selected grid unit is used to build the current class and populate in this case the wid_array  which is used to populate...$this->grid_width_record[$cid] for display
global_edit_master.class.php:                              $this->{'column_total_gu_arr'}[$cid][$bp]+=$ii;
global_edit_master.class.php:                    $this->{'column_total_gu_arr'}[$cid][$bp]+=$default_calc;
global_edit_master.class.php:                    $this->hidden_array[]='<input type="hidden" name="'.$data.'_'.$field.'['.$i.']" value="'.${$prefix.'_grid_width'}[$bp].'">';//
global_edit_master.class.php:                    $this->message[]=('ReHit A SUBMIT Button For THIS TO UPDATE rwd break points of this moved copied or cloned '.$type.' id:'.$bc_id.' so that it matches with bp settings on this current page. Then you may have to rechoose appropriate bps settings.');
global_edit_master.class.php:               $id=($this->blog_type==='nested_column')?'c'.$cid:'p'.$this->blog_id;	
global_edit_master.class.php:               $this->{'grid_class_selected_'.$prefix.'_array'}=(isset($this->{'grid_class_selected_'.$prefix.'_array'}))?array_merge($this->{'grid_class_selected_'.$prefix.'_array'},array(${$prefix.'_grid_width'}[$bp])):array(${$prefix.'_grid_width'}[$bp]);
global_edit_master.class.php:         $bptotalcalc_arr['Tot Tot '.$bp]=$this->{'column_total_gu_arr'}[$cid][$bp];
global_edit_master.class.php:         $msgtot.='Tot Tot @bp '.$bp.': '.$this->{'column_total_gu_arr'}[$cid][$bp].'gu or '.(round($this->{'column_total_gu_arr'}[$cid][$bp]/$gu,4)).' full row(s)<br>';
global_edit_master.class.php:    if((!$this->is_clone||$this->clone_local_style)){//$this->scale_width_enabled&&  
global_edit_master.class.php:         printer::printx('<p class="fsm'.$this->column_lev_color.' '.$this->column_lev_color.' editbackground editfont">Posts and Columns within the Parent Column of this '.$colpost.' are enabled as a responsive Grid to share the total width of the column parent. Choose the relative width percentage display for this '.$colpost.'  for each break point which correspond to viewer device width values!.</p>');	
global_edit_master.class.php:         $this->grid_width_record[$cid][]=array_merge(array('id:'=>$id),$wid_array,$right_array,$left_array,$bpcalc_arr,$bptotalcalc_arr);
global_edit_master.class.php:         printer::printx('<p class="fsm'.$this->column_lev_color.' '.$this->column_lev_color.' editbackground editfont"><span class="bold center">'.$gu.'gu/row in use</span><br>'.$msgcurr.'</p>'); 
global_edit_master.class.php:         $this->show_more('View Complete Grid Unit Use Table & Info','noback','italic editbackground editfont '.$this->column_lev_color.' underline','','600');
global_edit_master.class.php:         printer::printx('<p class="fsm'.$this->column_lev_color.' '.$this->column_lev_color.' editbackground editfont"><span class="bold center">Tot# Rows Used For Posts Up to Current Post</span>in Col Id C'.$cid.'<br>'.$msgtot.'</p>');
global_edit_master.class.php:         printer::printx('<p class="fsm'.$this->column_lev_color.' '.$this->column_lev_color.' editbackground editfont">Table below shows values in Grid Units. You are configured for '.$gu.'gu per row. Each row has values for a single Post up to the post your curently viewing for each break point class.<br><span class="info">"max"</span>  value refers to Device Screen Width greater than the largest break point.
global_edit_master.class.php:         printer::horiz_print($this->grid_width_record[$cid],'','','','',false,false,'editcolor editbackground editfont smallest');
global_edit_master.class.php:    $this->show_close('Show Grid Unit Use Table');
global_edit_master.class.php:     $column_level=($type==='col')?($this->column_level-1):$this->column_level;
global_edit_master.class.php:     $this->grid_width_chosen_arr=array();
global_edit_master.class.php:     $this->grid_post_percent_arr=array();
global_edit_master.class.php:     // $this->column_bp_width_arr[$this->column_level]=array();
global_edit_master.class.php:          $maxlimit=(substr($bp,0,3)==='max')?$this->column_bp_width_arr[$this->column_level-1][$bp][1]:min($bp,$this->column_bp_width_arr[$this->column_level-1][$bp][1]);
global_edit_master.class.php:          if($this->column_bp_width_arr[$this->column_level-1][$bp][1]>$bp) 
global_edit_master.class.php:               $percentlimit=$wid_grid_unit[$bp]/$gu*$this->column_bp_width_arr[$this->column_level-1][$bp][0];
global_edit_master.class.php:               $percentlimit=$wid_grid_unit[$bp]/$gu*$this->column_bp_width_arr[$this->column_level-1][$bp][0]*$wid_grid_unit[$bp]/$gu;
global_edit_master.class.php:          $grid_temp=$this->column_bp_width_arr[$this->column_level][$bp][1]= $maxlimit* $wid_grid_unit[$bp]/$gu;//set new column_bp_width_arr for current by multipling parent value by current percent
global_edit_master.class.php:          $this->column_bp_width_arr[$this->column_level][$bp][0]=$percentlimit;
global_edit_master.class.php:          $this->grid_width_chosen_arr[$bp]=$grid_temp;//chosen width px
global_edit_master.class.php:          $this->grid_width_available[$this->column_level][$bp]=$maxlimit;  
global_edit_master.class.php:          $maxlimit=(substr($bp,0,3)==='max')?$this->column_bp_width_arr[$this->column_level][$bp][1]:min($bp,$this->column_bp_width_arr[$this->column_level][$bp][1]);
global_edit_master.class.php:          $grid_temp= $this->grid_post_percent_arr[$bp]=$maxlimit*$wid_grid_unit[$bp]/$gu;//multiply parent value by current percent
global_edit_master.class.php:          $this->grid_width_chosen_arr[$bp]=$grid_temp; //(substr($bp,0,3)==='max')?$this->max_width_limit*$grid_temp/100:$grid_temp*$maxlimit/100;
global_edit_master.class.php:          $this->grid_width_available[$this->column_level][$bp]=(substr($bp,0,3)==='max')?$this->column_net_width[0]*$this->column_total_net_width_percent[$this->column_level]/100:$this->column_total_net_width_percent[$this->column_level]*$maxlimit/100;
global_edit_master.class.php:          $this->grid_width_available[$this->column_level][$bp]=$maxlimit;
global_edit_master.class.php:     if ($this->edit&&!$this->is_clone&&isset($_POST['submitted'])){//this is more relaxed
global_edit_master.class.php:               if ($this->col_width!=$new_col_width){ 
global_edit_master.class.php:                    $q="update $this->master_col_table set col_width='$new_col_width', col_update='".date("dMY-H-i-s")."',col_time='".time()."',token='".mt_rand(1,mt_getrandmax()). "' where col_id=$this->col_id";
global_edit_master.class.php:                    $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:               if($this->blog_width!=$new_blog_width){
global_edit_master.class.php:                    $q="update $this->master_post_table set blog_width='$new_blog_width', token='".mt_rand(1,mt_getrandmax()). "',blog_update='".date("dMY-H-i-s")."',blog_time='".time()."' where blog_id=$this->blog_id";//this is how we   keep current_net_width and current_net_width_percent current... with use of rwd...
global_edit_master.class.php:                    $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:     if($this->is_clone&&!$this->clone_local_style){
global_edit_master.class.php:    printer::printx('<p class="floatleft editbackground editfont left '.$this->column_lev_color.'">RwD Grid Set the Width && Placement of this '.$colpost.' Display For Device Width Conditions (break points)</p>');
global_edit_master.class.php:          $curwid= ($this->scale_width_enabled)?floor($this->grid_width_chosen_arr[$bp]):''; 
global_edit_master.class.php:          $cur_wid_avail=($this->scale_width_enabled)?floor($this->grid_width_available[$this->column_level][$bp]):'';
global_edit_master.class.php:          $curleft=($this->scale_width_enabled)?floor($left_grid_unit[$bp]/$gu*$cur_wid_avail):'';
global_edit_master.class.php:          $curright=($this->scale_width_enabled)?floor($right_grid_unit[$bp]/$gu*$cur_wid_avail):'';
global_edit_master.class.php:          $px=($this->scale_width_enabled)?'px':'';
global_edit_master.class.php:               $swid=($this->scale_width_enabled)?$cur_wid_avail*$num/$gu:'';
global_edit_master.class.php:               $slef=($this->scale_width_enabled)?$cur_wid_avail*$num/$gu:'';
global_edit_master.class.php:               $srig=($this->scale_width_enabled)?$cur_wid_avail*$num/$gu:'';
global_edit_master.class.php:          //$this->show_close('Add Spacing'); 
global_edit_master.class.php:#$this->style_field is the raw data itself
global_edit_master.class.php:	$this->pelement=$css_classname;
global_edit_master.class.php:	if(!$this->edit||Sys::Printoff||Sys::Styleoff||Sys::Quietmode||$this->styleoff|| Sys::Custom)return;
global_edit_master.class.php:	if ($this->is_clone&&!$this->clone_local_style)return; 
global_edit_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log('begin edit styles close line:'.__LINE__.' @ '.__method__);   
global_edit_master.class.php:		$this->$style=$this->$style_field;
global_edit_master.class.php:		$this->render_array[]=array($element,'final_'.$style,$css_classname);
global_edit_master.class.php:		$style=$element.'_'.$style_field.'_arrayed';#for blog array:::: this leaves the orginal $this->blog_style alone...
global_edit_master.class.php:		$this->$style=$this->$style_field;#this is object to refer to actual current value in syle functions..
global_edit_master.class.php:		$this->render_array[]=array($element,'final_'.$style,$css_classname);//or css_generate all elements called will generate css..
global_edit_master.class.php:		 $this->message[]=$msgx;
global_edit_master.class.php:	 if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){
global_edit_master.class.php:		$globalstyle=($this->is_blog&&$this->blog_global_style==='global')?$this->column_lev_color.' floatleft border9 borderinfo shadowoff editbackground editfont glowbutton'.$this->column_lev_color:'';
global_edit_master.class.php:		$this->show_more($mod_msg,$show_option,$globalstyle,'',550,'','',$mainstyle);#mainshow
global_edit_master.class.php:		$this->print_wrap('mainstyle wrap',true); 
global_edit_master.class.php:		if(isset($this->render_view_css)&&count($this->render_view_css)>0){
global_edit_master.class.php:			if ($this->is_page){
global_edit_master.class.php:				$id=$this->page_id;
global_edit_master.class.php:			elseif ($this->is_column){
global_edit_master.class.php:				$id=$this->col_id;
global_edit_master.class.php:				$id=$this->blog_id;
global_edit_master.class.php:			$this->display_style($type,$style_field,$id);	
global_edit_master.class.php:			$this->show_more('Special Tag and Class Styles','','highlight tiny editbackground editfont floatleft','Style text through the use of tags and classes with Styles set in page options');
global_edit_master.class.php:			printer::array_print($this->render_view_css); 
global_edit_master.class.php:			$this->show_close('View Current Tag and Class Styles');
global_edit_master.class.php:		$class=($this->pelement==='body')?'body':$this->pelement;
global_edit_master.class.php:		$type_ref=($this->is_page)?'Page Ref: "'.$this->pagename.'"':(($this->is_column)?'Col Id: "C'.$this->col_id.'"':'Post Id: "P'.$this->blog_id.'"');
global_edit_master.class.php:		printer::printx('<p class="fsminfo smaller editbackground editfont editcolor">Class Name: <span class="'.$this->column_lev_color.'">'.$class.'</span><br>'.$type_ref.' Style Field: <span class="'.$this->column_lev_color.'"> '.$style_field.'</span></p>');
global_edit_master.class.php:		if ($this->is_blog&&($this->blog_type==='text'||$this->blog_type==='float_image_right'||$this->blog_type==='float_image_left'||$this->blog_type==='image'||$this->blog_type==='video')){
global_edit_master.class.php:			if (isset($_POST[$this->data.'_blog_global_style'])&&$_POST[$this->data.'_blog_global_style']==='global'){
global_edit_master.class.php:				$q="update $this->master_post_table set blog_global_style='0' where blog_col='$this->col_id' and blog_id!='$this->blog_id' and blog_type='$this->blog_type'";  //remove anothe current global setting if exists
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false); 
global_edit_master.class.php:			if (isset($_POST['delete_global_styles_'.$this->data.'_'.$style_field])&&$_POST['delete_global_styles_'.$this->data.'_'.$style_field]==='delete'){
global_edit_master.class.php:				$q="update $this->master_post_table set $style_field='0' where blog_col='$this->col_id' and blog_id!='$this->blog_id' and blog_type='$this->blog_type'";   
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false); 
global_edit_master.class.php:			if ($this->blog_global_style!=='global'){
global_edit_master.class.php:				$this->show_more('Globalize this styles');
global_edit_master.class.php:                    printer::printx('<p class="tip ">These styles made here will be applied to all '.$this->blog_type.' posts within this column.  Styles made in the individual posts will override these. Any Previous Globalized '.$this->blog_type.' styles will be removed.</p>');
global_edit_master.class.php:				printer::printx('<p class="'.$this->column_lev_color.' editbackground editfont"><input type="checkbox" name="'.$this->data.'_blog_global_style" value="global">Globalize these Styles</p>');
global_edit_master.class.php:				printer::printx('<p class="'.$this->column_lev_color.' editbackground editfont"><input type="checkbox" name="delete_global_styles_'.$this->data.'_'.$style_field.'" value="delete"  onchange="edit_Proc.oncheck(\'delete_global_styles_'.$this->data.'_'.$style_field.'\',\'SIMILAR STYLES OF SAME TYPE POSTS WITHIN PARENT COLUMN WILL BE DELETED WHEN YOU HIT CHANGE, UNCHECK TO CANCEL\')">Delete this style grouping in all other posts within this same column. Will remove all corresponding   post styles made in the other type '.$this->blog_type.' posts only. </p>');
global_edit_master.class.php:				$this->show_close('Globalize this '.$this->blog_type.' within Column');
global_edit_master.class.php:				$this->show_more('Undo Globalize these styles');
global_edit_master.class.php:                    printer::printx('<p class="tip ">These styles made here will longer be applied to all '.$this->blog_type.' posts within this column. </p>');
global_edit_master.class.php:				printer::printx('<p class="'.$this->column_lev_color.' editbackground editfont"><input type="checkbox" name="'.$this->data.'_blog_global_style" value="0">Check this box to Undo Globalize these Styles</p>');
global_edit_master.class.php:				printer::printx('<p class="'.$this->column_lev_color.' editbackground editfont"><input type="checkbox" name="delete_global_styles_'.$this->data.'_'.$style_field.'" value="delete"  onchange="edit_Proc.oncheck(\'delete_global_styles_'.$this->data.'_'.$style_field.'\',\'SIMILAR STYLES OF SAME TYPE POSTS WITHIN PARENT COLUMN WILL BE DELETED WHEN YOU HIT CHANGE, UNCHECK TO CANCEL\')">Delete this style grouping in all other posts within this same column. Will affect this style in other type '.$this->blog_type.' posts only. </p>');
global_edit_master.class.php:				$this->show_close('Globalize this '.$this->blog_type.' within Column');
global_edit_master.class.php:	if (!empty($this->$style)){
global_edit_master.class.php:		$this->$style= explode(',',$this->$style);// this for all sub $funtions....
global_edit_master.class.php:			(!array_key_exists($x,$this->{$style}))&&$this->{$style}[$x]='';#all style functions for empty css vals will have value of empty.. because all style elements must have count number of array elements
global_edit_master.class.php:		$this->$style=array();# as one cannot explode empty values...
global_edit_master.class.php:			$this->{$style}[]='';#all style functions for empty css vals will have value of zero.. because all style elements must have count number of array elements
global_edit_master.class.php:		$i=$this->{$index.'_index'};
global_edit_master.class.php:		(Sys::Deltatime)&&$this->deltatime->delta_log('Begin EditStyle function:    ele: '.$element.'  css:  '.$css_classname .' funct: '.$functions[$i]);
global_edit_master.class.php:		$this->{$functions[$i]}($style,$i,$style_field);  #this calls the functions.... 
global_edit_master.class.php:		(Sys::Deltatime)&&$this->deltatime->delta_log('End Function : '.$functions[$i]);
global_edit_master.class.php:          if  ($this->is_blog&&$this->is_clone&&$this->clone_local_style){
global_edit_master.class.php:               $this->show_more('Blog Copy Style','','highlight click editbackground editfont');
global_edit_master.class.php:               $this->clipboard('blogclone',$this->blog_id,$style_field);
global_edit_master.class.php:               $this->show_close('Blog Copy Style');
global_edit_master.class.php:          if  ($this->is_column&&$this->is_clone&&$this->clone_local_style){
global_edit_master.class.php:               $this->show_more('Column Copy Style','','highlight click editbackground editfont');
global_edit_master.class.php:               $this->clipboard('colclone',$this->col_id,$style_field);
global_edit_master.class.php:               $this->show_close('Column Copy Style');
global_edit_master.class.php:          elseif ($this->is_blog&&!$this->is_clone&&$clone_option&&!$this->clone_local_style) $this->port_blog_style($style_field);//
global_edit_master.class.php:		elseif ($this->is_column&&!$this->is_clone&&$clone_option&&!$this->clone_local_style)$this->port_col_style($style_field);// 
global_edit_master.class.php:		elseif ($this->is_page&&$clone_option&&!$this->clone_local_style)  
global_edit_master.class.php:			$this->port_page_style($style_field);
global_edit_master.class.php:          if ($this->is_page|| ($this->is_blog&&!$this->is_clone)||($this->is_column&&!$this->is_clone||$this->clone_local_style)){  
global_edit_master.class.php:               $this->submit_button(); 
global_edit_master.class.php:          $this->show_close($mod_msg,$show_option);//<!--end plus more class="white relative hide" for Edit Styles Close-->';
global_edit_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log('End edit styles close: '.$element.'  css:  '.$functions[$i]);
global_edit_master.class.php:     $table2=$this->master_page_table;
global_edit_master.class.php:						$table=$this->master_page_table;
global_edit_master.class.php:						$table=$this->master_col_table;
global_edit_master.class.php:						$table=$this->master_post_table;
global_edit_master.class.php:						$table=$this->master_post_css_table;
global_edit_master.class.php:						$table=$this->master_col_css_table;
global_edit_master.class.php:				$this->mysqlinst->query($q);
global_edit_master.class.php:				if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:					$this->success[]="Field: $f  from $id pasted from clipboard";
global_edit_master.class.php:				else $this->message[]="Field: $f from $id failed to paste from clipboard: $q";
global_edit_master.class.php:     $this->show_more('Page Style Copy','noback','italic highlight editbackground editfont floatleft underline','Copy all the styles from a previoulsy styled Page by entering page ref  here.');
global_edit_master.class.php:     $this->print_wrap('page style',true);
global_edit_master.class.php:     printer::printx('<p class="fsminfo editbackground editfont editcolor">Page Ref: '.$this->pagename.'&nbsp;&nbsp;&nbsp;Style Field: '.$style_field.'</p>');
global_edit_master.class.php:     echo '<div class="'.$this->column_lev_color.'floatleft left editbackground editfont"><!--global clone field column-->';
global_edit_master.class.php:     if(isset($_POST['globalize_style_copy'][$this->page_ref][$style_field])){
global_edit_master.class.php:          $parent_id=trim($_POST['globalize_style_copy'][$this->page_ref][$style_field]);
global_edit_master.class.php:          $count=$this->mysqlinst->count_field($this->master_page_table,'page_id','',false,$where);
global_edit_master.class.php:               $q="update $this->master_page_table as c, $this->master_page_table as p set
global_edit_master.class.php:                 c.$style_field=p.$style_field where p.page_ref='$parent_id' and c.page_ref='$this->page_ref'";  
global_edit_master.class.php:               $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);  
global_edit_master.class.php:               $this->success[]="Your Page Styles from Page ref $parent_id has been copied!"; 
global_edit_master.class.php:          else $this->message[]='No Page found for page Ref '.$parent_id;
global_edit_master.class.php:     $q="select distinct page_ref, page_title, page_filename from $this->master_page_table";  
global_edit_master.class.php:     $r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:     while (list($page_ref,$title,$filename) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:     echo'<p class="editcolor editbackground editfont">Choose Page for Import of '.$style_field.' Styles <select class="editcolor editbackground editfont"  name="globalize_style_copy['.$this->page_ref.']['.$style_field.']">';       
global_edit_master.class.php:     $this->clipboard('page',$this->page_id,$style_field);
global_edit_master.class.php:     $this->show_close('Page Style Copy');
global_edit_master.class.php:     $this->show_more('Column Style Copy','noback','italic highlight editbackground editfont floatleft underline','Copy all the styles from a previoulsy styled element by entering the id here.');
global_edit_master.class.php:     $this->print_wrap('Column Style copy');
global_edit_master.class.php:     echo '<div class="fsminfo '.$this->column_lev_color.' floatleft left editbackground editfont"><!--global clone field column-->';
global_edit_master.class.php:     printer::printx('<p class="fsminfo editbackground editfont editcolor editfont">Column Id: C'.$this->col_id.'&nbsp;&nbsp;&nbsp;Style Field: '.$style_field.'</p>');
global_edit_master.class.php:     if(isset($_POST['globalize_style_copy'][$this->col_id][$style_field])){
global_edit_master.class.php:          $parent_id=$_POST['globalize_style_copy'][$this->col_id][$style_field];
global_edit_master.class.php:          $count=$this->mysqlinst->count_field($this->master_col_table,'col_id','',false,$where);
global_edit_master.class.php:                 $q="update $this->master_col_table as c, $this->master_col_table as p set
global_edit_master.class.php:                 c.$style_field=p.$style_field where p.col_id=$parent_id and c.col_id=$this->col_id";
global_edit_master.class.php:               $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);  
global_edit_master.class.php:               $this->success[]="Your column Id: C$this->col_id has imported $style_field from $parent_id!";
global_edit_master.class.php:          else $this->message[]='No Column Id found for C'.$parent_id;
global_edit_master.class.php:     <input  type="text" name="globalize_style_copy['.$this->col_id.']['.$style_field.']"  size="7" maxlength="7" value=""> '); 
global_edit_master.class.php:     $this->clipboard('col',$this->col_id,$style_field);
global_edit_master.class.php:     $this->show_close('Column Style Copy');
global_edit_master.class.php:     $this->show_more('Copy Style Settings','noback','italic highlight editbackground editfont floatleft underline','Copy all the styles from a previoulsy styled Post by entering the id  here.');
global_edit_master.class.php:     $this->print_wrap('copy styles',false);
global_edit_master.class.php:     echo '<div class="'.$this->column_lev_color.' floatleft left editbackground editfont fsminfo "><!--global clone field blog-->';
global_edit_master.class.php:     printer::printx('<p class="floatleft fsminfo editcolor editbackground editfont">Blog Id: P'.$this->blog_id.'&nbsp;&nbsp;&nbsp;Style Field: '.$style_field.'</p>');
global_edit_master.class.php:     if(isset($_POST['globalize_style_copy'][$this->blog_id][$style_field])){
global_edit_master.class.php:          $parent_id=$_POST['globalize_style_copy'][$this->blog_id][$style_field];
global_edit_master.class.php:          $count=$this->mysqlinst->count_field($this->master_post_table,'blog_id','',false,$where);
global_edit_master.class.php:               $q="update $this->master_post_table as c, $this->master_post_table as p set
global_edit_master.class.php:                 c.$style_field=p.$style_field where p.blog_id=$parent_id and c.blog_id=$this->blog_id";
global_edit_master.class.php:               $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);  
global_edit_master.class.php:               $this->success[]="Your post Id: P$parent_id has been copied!";
global_edit_master.class.php:          else $this->message[]='No Post Id found for P'.$parent_id;
global_edit_master.class.php:     $msg=($this->blog_type!=='text')?'For Style Group stored under '.$style_field:'';
global_edit_master.class.php:                 <input  type="text" name="globalize_style_copy['.$this->blog_id.']['.$style_field.']"  size="7" maxlength="7" value=""> '); 
global_edit_master.class.php:     $this->clipboard('blog',$this->blog_id,$style_field);
global_edit_master.class.php:     $this->submit_button();
global_edit_master.class.php:     $this->show_close('Style Copy Settings');
global_edit_master.class.php:	$table2=$this->master_page_table;
global_edit_master.class.php:     $q="update $this->master_page_table set page_clipboard=''";//initializeby setting all as empty for cross page compatibility 
global_edit_master.class.php:	$this->mysqlinst->query($q);
global_edit_master.class.php:                         $this->message[]='Submit 1 copy to clipbard only';
global_edit_master.class.php:							$table=$this->master_page_table;
global_edit_master.class.php:							$table=$this->master_col_table;
global_edit_master.class.php:							$table=$this->master_post_table;
global_edit_master.class.php:							$table=$this->master_col_css_table;
global_edit_master.class.php:							$table=$this->master_post_css_table;
global_edit_master.class.php:					$q="update $table2 as c, $table as p set c.page_clipboard=p.$f where p.$field='$prefix$id' and c.page_ref='$this->pagename'";  
global_edit_master.class.php:					$this->mysqlinst->query($q);  
global_edit_master.class.php:					if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:						$this->success[]="Field: $field from $id copyied to clipboard";
global_edit_master.class.php:					else $this->message[]="Field: $field from $id did not change";
global_edit_master.class.php:				else  $this->message[]="Entry failed to copy to clipboard";
global_edit_master.class.php:	$this->print_wrap('global paste');
global_edit_master.class.php:	$this->display_style('page','page_clipboard',$this->page_id);
global_edit_master.class.php:	$this->submit_button();
global_edit_master.class.php: (Sys::Deltatime)&&$this->deltatime->delta_log(__LINE__.' @ '.__method__.'  '); 
global_edit_master.class.php:	if (!isset($this->render_array)||empty($this->render_array)){
global_edit_master.class.php:	foreach($this->render_array as $elem){ //render array is generated with each call to edit styles close!!
global_edit_master.class.php:			$this->message[]=$msg;
global_edit_master.class.php:	     if (!isset($this->$style)||!is_array($this->$style)||count($this->$style)<2){  
global_edit_master.class.php:	     $this->{$csstype}.="\n".'  '.$style_css .'{';
global_edit_master.class.php:		array_splice($this->$style, $count);//trim appendages..
global_edit_master.class.php:		foreach ($this->$style as $genstyle){
global_edit_master.class.php:				$this->{$csstype}.=$genstyle.' ';
global_edit_master.class.php:		$this->{$csstype}.='}
global_edit_master.class.php:		$this->id_class=false;//set back to false: set true if you wish to use # instead of .
global_edit_master.class.php:		$advanced= (array_key_exists($css_classname,$this->advancedstyles)&&!empty($this->advancedstyles[$css_classname]))?NL.$this->advancedstyles[$css_classname]:''; 
global_edit_master.class.php:		($element==='bodyview')&&$this->css_view[]=$css. $advanced;//for previewing special tags and classes styling only
global_edit_master.class.php:		(Sys::Deltatime)&&$this->deltatime->delta_log('After Insert '.__LINE__.' @ '.__method__.'  ');
global_edit_master.class.php:	file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'css_data_sheet_'.$this->pagename.$this->passclass_ext,serialize($this->css_view));//for previewing special tags and classes styling only
global_edit_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log('End of '.__LINE__.' @ '.__method__.'  ');
global_edit_master.class.php:	$this->show_more($show_msg,'','highlight editbackground editfont left floatleft smallest','Sent request for Styling Info breakdown of this current style');
global_edit_master.class.php:	$this->show_close($show_msg);
global_edit_master.class.php:    $this->alert('<input type="checkbox" name="globalize_text['.$x.']" value="'.$dataname.'">Click here to Globalize the text for '.$dataname.' To All Pages in Website');
global_edit_master.class.php:     if (!$this->edit)return;
global_edit_master.class.php:	if (!$this->is_blog){ 
global_edit_master.class.php:	$class=($this->current_net_width<100)?'supersmall':'smaller';
global_edit_master.class.php:	echo '<div class="shadowoff fs1'.$this->column_lev_color.' editbackground editfont left5 right5 floatleft editfont" style="max-width:'.$this->current_net_width.'px;"><!--edit styles open-->';
global_edit_master.class.php:	$a='Post#'.$this->blog_order_mod.' in Col#'.$this->column_order_array[$this->column_level];
global_edit_master.class.php:	$b='<span class="'.$class.'">Type: '.strtoupper(str_replace('_',' ',$this->blog_type)).'</span>';
global_edit_master.class.php:	$c="Post Id: P$this->blog_id";
global_edit_master.class.php:	if ($this->blog_unstatus==='unclone'){
global_edit_master.class.php:		$this->show_more('Mirror Release Info','','info underline italic small editbackground editfont');
global_edit_master.class.php:		if ($this->orig_val['blog_type'] ==='nested_column')
global_edit_master.class.php:			printer::print_info('The Original Column post which was indirectly cloned then unmirrored here is from is page_ref: '.$this->orig_val['blog_table_base'].'  and is Col Id:'.$this->orig_val['blog_data1'].'. If doing a template tranfer include this column in your template and you will automatically include this content from this current column here!');
global_edit_master.class.php:		else printer::print_info('The Original '.$this->orig_val['blog_type'].' Post which was indirectly cloned then unmirrored here is from page_ref: '.$this->orig_val['blog_table_base'].'  and is Post Id:'.$this->orig_val['blog_id'].'. If doing a template tranfer include this Post in your new template and you will automatically include this content from this current Post here!');
global_edit_master.class.php:		$this->show_close('From Info');
global_edit_master.class.php:	($this->blog_unstatus==='unclone')&&printer::alert('Mirror release Post','','orange left ');
global_edit_master.class.php:	printer::alert($a.NL.$b,'',$this->column_lev_color.' left ');
global_edit_master.class.php:	printer::alertx('<p class="highlight left" title="The Unique '.$c.' Would Be Used for Copying/Cloning/Moving this Post Elsewhere. For Styles look for '.$this->data.' For Advanced Styles look for #post_'.$this->blog_id.'. Parent column has Id:'.$this->col_id.'">'.$c.'</p>');
global_edit_master.class.php:	$this->show_more('info','','info smaller');
global_edit_master.class.php:	$this->print_wrap('primal');
global_edit_master.class.php:	printer::alert('Post Css: '.$this->dataCss);
global_edit_master.class.php:	printer::alert('Parent Col Id: '.$this->col_id);
global_edit_master.class.php:	printer::alert('Blog Order: '.$this->blog_order);
global_edit_master.class.php:	if ($this->rwd_post){
global_edit_master.class.php:		$float=($this->blog_float==='center_row')?'&#x2715;':'<span class="tiny">'.str_replace('_','',ucwords($this->blog_float ,'_')).'</span>';
global_edit_master.class.php:	else if ($this->flex_box_mode){
global_edit_master.class.php:          $scaleMode=(!$this->use_blog_main_width)?'&#x2713;':'&#x2715;';
global_edit_master.class.php:	elseif($this->use_blog_main_width){
global_edit_master.class.php:		$widthSetting=($this->blog_alt_rwd[$this->blog_width_mode_index]!=='compress_full_width'&&$this->blog_alt_rwd[$this->blog_width_mode_index]!=='compress_to_percentage')?'&#x2713;':'&#x2715;';    
global_edit_master.class.php:		$float=($this->blog_float==='center_row')?'&#x2715;':'<span class="tiny">'.str_replace('_','',ucwords($this->blog_float ,'_')).'</span>'; 
global_edit_master.class.php:		$altGridFull=($this->blog_alt_rwd[$this->blog_width_mode_index]==='compress_full_width')?'&#x2713;':'&#x2715;';
global_edit_master.class.php:		$altGridPercent=($this->blog_alt_rwd[$this->blog_width_mode_index]==='compress_to_percentage')?'&#x2713;':'&#x2715;'; 
global_edit_master.class.php:		$enableMasonry=($this->is_masonry)?'&#x2713;':'&#x2715;';
global_edit_master.class.php:		$float=($this->blog_float==='center_row')?'&#x2715;':'<span class="tiny">'.str_replace('_','',ucwords($this->blog_float ,'_')).'</span>'; 
global_edit_master.class.php:		$enableMasonry=($this->is_masonry)?'&#x2713;':'&#x2715;';
global_edit_master.class.php:          printer::print_info($this->blog_width_info);
global_edit_master.class.php:     $emscale=($this->terminal_em_scale)?'on':'off';
global_edit_master.class.php:     printer::print_info("1 em unit currently equivalent to {$this->terminal_font_em_px}px with scaling $emscale");
global_edit_master.class.php:     $remscale=($this->rem_scale)?'on':'off';
global_edit_master.class.php:          if (!empty($this->{$space.'_info'})){
global_edit_master.class.php:               $blog_pad_info.=$type.' set: '.$this->{$space.'_info'}.'<br>';
global_edit_master.class.php:     (!empty($this->left_border_info))&&printer::print_info($this->left_border_info);
global_edit_master.class.php:     (!empty($this->right_border_info))&&printer::print_info($this->right_border_info);
global_edit_master.class.php:	$this->close_print_wrap('primal'); 	
global_edit_master.class.php:	$this->show_close('info','','info fs1info');
global_edit_master.class.php:	 ($this->edit)&&    
global_edit_master.class.php:			$this->blog_options($data,$this->blog_table);
global_edit_master.class.php:	if ($this->edit){
global_edit_master.class.php:		$this->show_more('Create a Line Here');
global_edit_master.class.php:		$this->print_wrap('create line');
global_edit_master.class.php:		$this->print_wrap('create start line');
global_edit_master.class.php:		$this->mod_spacing($data.'_blog_tiny_data1',$startx,1,100,1,'%');
global_edit_master.class.php:		$this->print_wrap('create end line');
global_edit_master.class.php:		$this->mod_spacing($data.'_blog_tiny_data2',$endx,1,100,1,'%');
global_edit_master.class.php:		$this->print_wrap('choose line width');
global_edit_master.class.php:		$this->mod_spacing($data.'_blog_tiny_data3',$widthx,1,100,1,'px');
global_edit_master.class.php:		$this->print_wrap('choose line color');
global_edit_master.class.php:		$this->mod_spacing($data.'_blog_tiny_data4',$colorx,1,100,1,'px');
global_edit_master.class.php:		$this->show_close('Create a Line Here');
global_edit_master.class.php:	$this->edit_styles_close($data,'blog_style','.'.$data, $style_list ,"Add Additional Background Styling Features Here");
global_edit_master.class.php:	$data=(isset($this->$dataname))?$this->$dataname:$dataname;    
global_edit_master.class.php:	echo '<textarea style="width:'.$percent.'%; float:'.$float.';" class="'.$class.' scrollit '.$display_editor.' fs1'.$this->column_lev_color.'" name="'.$name.'" rows="'.$rowlength.'" onkeyup="gen_Proc.autoGrowFieldScroll(this)">' . process_data::textarea_validate($data).'</textarea>'; 
global_edit_master.class.php:	if (!$this->edit&&$this->blog_options[$this->blog_comment_index]!=='comment_on')return;
global_edit_master.class.php:	if ($this->edit){
global_edit_master.class.php:		if(isset($_POST['comment_remove'][$this->blog_id])){
global_edit_master.class.php:			foreach($_POST['comment_remove'][$this->blog_id] as $del_id =>$del_name){
global_edit_master.class.php:				$q="delete from $this->comment_table  where com_blog_id='$this->blog_id' and com_id='$del_id'";
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:				if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:					$this->success[]='Comment from '.$del_name.' has been Deleted for postId p'.$this->blog_id;
global_edit_master.class.php:				else $this->message[]='Comment from '.$del_name.' has not been Deleted for postId p'.$this->blog_id;
global_edit_master.class.php:		if (isset($_POST['comment_accept'][$this->blog_id])){
global_edit_master.class.php:			foreach($_POST['comment_accept'][$this->blog_id] as $acc_id =>$acc_name){
global_edit_master.class.php:			$q="update $this->comment_table set com_status=1 where com_blog_id='$this->blog_id' and com_id='$acc_id'";
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:			if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:				$this->success[]='Comment from '.$acc_name.' has been Added for postId p'.$this->blog_id;
global_edit_master.class.php:			else $this->message[]='Comment from '.$acc_name.' has not been Addedfor postId p'.$this->blog_id;
global_edit_master.class.php:		if(isset($_POST['delete_all_comments'][$this->blog_id])){
global_edit_master.class.php:			$q="delete from $this->comment_table  where com_blog_id='$this->blog_id'";
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:				if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:					$this->success[]='All Comments from have been Deleted for postId p'.$this->blog_id;
global_edit_master.class.php:				else $this->message[]='No Comments have been Deleted for postId p'.$this->blog_id;
global_edit_master.class.php:	if (isset($_GET['accept_'.$this->blog_id])&&strlen($_GET['accept_'.$this->blog_id])===$num){
global_edit_master.class.php:		$q="update $this->comment_table set com_status=1 where com_blog_id='$this->blog_id' and com_token='".$_GET['accept_'.$this->blog_id]."'";
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:			$where="WHERE com_blog_id='$this->blog_id' and  com_token='".$_GET['accept_'.$this->blog_id]."'"; 
global_edit_master.class.php:			$count=$count=$this->mysqlinst->count_field($this->comment_table,'com_blog_id','',false,$where);
global_edit_master.class.php:	if (isset($_GET['remove_'.$this->blog_id])&&strlen($_GET['remove_'.$this->blog_id])===$num){
global_edit_master.class.php:		$q="delete from $this->comment_table  where com_blog_id='$this->blog_id' and com_token='".$_GET['remove_'.$this->blog_id]."'";
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:		if (isset($_POST['comment_name'][$this->blog_id])&&!empty($_POST['comment_name'][$this->blog_id])){
global_edit_master.class.php:			$comment_name=$_POST['comment_name'][$this->blog_id]; 
global_edit_master.class.php:		if (isset($_POST['comment_email'][$this->blog_id])&&!empty($_POST['comment_email'][$this->blog_id])){
global_edit_master.class.php:			$comment_email=$_POST['comment_email'][$this->blog_id]; 
global_edit_master.class.php:		if (isset($_POST['comment_text'][$this->blog_id])&&!empty($_POST['comment_text'][$this->blog_id])){
global_edit_master.class.php:			$comment_text=$_POST['comment_text'][$this->blog_id];
global_edit_master.class.php:		if (isset($comment_text)&&!isset($comment_name))printer::alert_neg("Name field was omitted in postId$this->blog_id Comment");
global_edit_master.class.php:		elseif (!isset($comment_text)&&isset($comment_name))printer::alert_neg("Name field was omitted in postId$this->blog_id ");
global_edit_master.class.php:			$q="insert into  $this->comment_table (com_blog_id,com_text,com_name,com_email,com_status,com_token,com_time,com_update,token)   values ('$this->blog_id','$comment_text','$comment_name','$comment_email','0','$comment_token','".time()."','".date('dMY-H-i-s')."','".mt_rand(1,mt_getrandmax())."')";  
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:				$msg.='<br>'.$comment_name." has sent a comment post to your post id$this->blog_id on page $this->pagename  "; 
global_edit_master.class.php:				$msg.='<br><a style="color:red" href="http://'.$site.'?remove_'.$this->blog_id.'='.$comment_token.'&amp;msg=Comment from '.$comment_name.' has been Deleted">Click Here To Delete This Comment</a>';
global_edit_master.class.php:				$msg.='<br><br> <a style="color:green;" href="http://'.$site.'?accept_'.$this->blog_id.'='.$comment_token.'&amp;msg=Comment from '.$comment_name.' has been approved">Click Here To Publish This '.$this->comment.'</a>';
global_edit_master.class.php:				$this->body=$msg;
global_edit_master.class.php:				$this->subject='Website Feedback Recieved on '.Cfg::Owner;
global_edit_master.class.php:					$this->contact_mail_send($address);
global_edit_master.class.php:	$where="WHERE com_blog_id='$this->blog_id' and com_status=1";
global_edit_master.class.php:	$count=$count=$this->mysqlinst->count_field($this->comment_table,'com_blog_id','',false,$where);
global_edit_master.class.php:	$comment=($count===1)?' '.$this->comment.'':' '.$this->comment.'s';
global_edit_master.class.php:	if (!$this->edit&&$this->blog_options[$this->blog_comment_display_index]!=='display_comment') 
global_edit_master.class.php:		$this->show_more($count.$comment,'slow','style_comment_view floatleft small');
global_edit_master.class.php:	if ($this->edit){ 
global_edit_master.class.php:		$where="WHERE com_blog_id='$this->blog_id' and com_status!=1";
global_edit_master.class.php:		$accept_count=$this->mysqlinst->count_field($this->comment_table,'com_blog_id','',false,$where);
global_edit_master.class.php:		$comment=($accept_count==1)?' '.$this->comment.'':' '.$this->comment.'s'; 
global_edit_master.class.php:	if (!$this->edit){
global_edit_master.class.php:		$upper_maxwidth=500*$this->current_font_px/16;//upper contact form max width
global_edit_master.class.php:		$current_net_width=($this->current_net_width<$upper_maxwidth)?$this->current_net_width:$upper_maxwidth;
global_edit_master.class.php:		forms::form_open('','onsubmit="return gen_Proc.funcPass({funct:\'validateEntered\',pass:{idVal:\'comment_name_'.$this->blog_id.'\',ref:\'name\'}},{funct:\'validateEntered\',pass:{idVal:\'comment_text_'.$this->blog_id.'\',ref:\'comment textarea\'}});"');
global_edit_master.class.php:		 <input  style="color:red;background:white;" type="text" name="comment_name['.$this->blog_id.']" id="comment_name_'.$this->blog_id.'"  maxlength="35" value=""> ');
global_edit_master.class.php:		 <input style="color:red;background:white;" type="text" name="comment_email['.$this->blog_id.']" id="comment_email_'.$this->blog_id.'"  maxlength="35" value=""> ');
global_edit_master.class.php:		printer::printx('<p class="floatleft smaller" style="background:white;color:red;float:left; margin-left:2px;">'.$this->comment.':</p>'); 
global_edit_master.class.php:		printer::printx('<textarea   id="comment_text_'.$this->blog_id.'" class="width100 editbackground editfont fs1'.$this->column_lev_color.'" name="comment_text['.$this->blog_id.']" rows="3"    onkeyup="gen_Proc.autoGrowFieldScroll(this);"></textarea>');
global_edit_master.class.php:		forms::form_close('','Add '.$this->comment,'feedback_submit');
global_edit_master.class.php:		 if ($this->blog_options[$this->blog_comment_display_index]!=='display_comment')
global_edit_master.class.php:			$this->show_close('Leave '.$this->comment.'');
global_edit_master.class.php:	if ($count>0 || ($this->edit&&$accept_count>0)){
global_edit_master.class.php:		if($this->edit){
global_edit_master.class.php:               $this->show_more('Accept/Remove Comments');
global_edit_master.class.php:		$q="select com_id,com_name,com_email,com_text,com_status,com_time from $this->comment_table where com_blog_id='$this->blog_id' order by com_time DESC";  
global_edit_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		($this->edit)&&$this->print_wrap('wrap edit comments');
global_edit_master.class.php:		while(list($com_id,$name,$email,$text,$status,$date)=$this->mysqlinst->fetch_row($r,__LINE__,__METHOD__)){
global_edit_master.class.php:			if (!$this->edit){
global_edit_master.class.php:				(!$status)&&printer::printx('<p class="editbackground editfont editcolor editfont"><input type="checkbox" name="comment_accept['.$this->blog_id.']['.$com_id.']" value="'.$name.'"><span class="bold white posbackground">Accept New '.$this->comment.' </span></p>');
global_edit_master.class.php:				printer::printx('<p class="editbackground editfont editcolor editfont"><input type="checkbox" name="comment_remove['.$this->blog_id.']['.$com_id.']" value="'.$name.'"><span class="white bold redAlertbackground">Remove New Feedback </span></p><br>');
global_edit_master.class.php:		($this->edit)&&printer::close_print_wrap('wrap edit comments');
global_edit_master.class.php:		($this->edit)&&printer::alertx('<p class="redAlertbackground left white Os2redAlert fs2npblack floatleft smaller">&nbsp;&nbsp;&nbsp;<input type="checkbox" name="delete_all_comments['.$this->blog_id.']" value="delete" onchange="edit_Proc.oncheck(\'delete_all_comments['.$this->blog_id.']\',\''.$delete_msg.'\')" >REMOVE All COMMENTS FOR THIS POST &nbsp;&nbsp;</p>');
global_edit_master.class.php:		($this->edit)&&$this->show_close('Accept/Remove Comments');	
global_edit_master.class.php:		if (!$this->edit&&$this->blog_options[$this->blog_comment_display_index]!=='display_comment') 
global_edit_master.class.php:			$this->show_close($count.$comment);
global_edit_master.class.php:	if ($this->edit){ 
global_edit_master.class.php:		$this->css.='
global_edit_master.class.php:			.'.$this->dataCss.' input{max-width:250px;}
global_edit_master.class.php:			.'.$this->dataCss.' input{max-width:200px;}
global_edit_master.class.php:			.'.$this->dataCss.' input{max-width:160px;}
global_edit_master.class.php:	if (!$this->edit)return;
global_edit_master.class.php:	echo'<p class="editcolor editbackground editfont">Change Video to a Previously Uploaded video<br>:<input style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" name="'.$datavid.'[0]" value="'.$vidname.'" size="40"></p>';
global_edit_master.class.php:	if (strpos($vidname,'wmv') ) printer::alert('WMV videos do not current support displaying a Still Picture Frame',false,''.$this->column_lev_color.' editfont neg');	  
global_edit_master.class.php:		$this->show_more('Add Video Still Image','Close Add Image','highlight editbackground editfont','Video Still Images Will Display Image Before Video is Played. ',500);
global_edit_master.class.php:		printer::alertx('<p class="editcolor editbackground editfont">Change Image to Previously Uploaded image:<input style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" name="'.$datapic.'" value="'.$this->blog_tiny_data1.'" size="40"></p>'); 
global_edit_master.class.php:		printer::alertx('<p class="left editbackground editfont editcolor"><a class="highlightclick" title="Click here to Upload a New  Display Image for the video player (displays before video is Started otherwise could be blank screen)" href="add_page_pic.php?vidname='.$vidname.'&amp;addvid=1&amp;wwwexpand=0&amp;www='.$this->current_net_width.'&amp;ttt='.$this->blog_table.'&amp;fff='.$picfield.'&amp;id='.$this->blog_id.'&amp;id_ref=blog_id&amp;pgtbn='.$this->pagename.'&amp;postreturn='.Sys::Self.'&amp;css='.$this->roots.Cfg::Style_dir.$this->pagename.'&amp;sess_override&amp;sess_token='.$this->sess->sess_token.'">UPLOAD a Starter Image for YOUR VIDEO PLAYER</a></p>');
global_edit_master.class.php:		$this->show_close('Add Video Still Image');
global_edit_master.class.php:     echo'<form action="'.Sys::Self.'" ' .$this->form_load.' method="post" '.$this->onsubmit.'> ';
global_edit_master.class.php:	$this->edit_styles_open();
global_edit_master.class.php:	($this->edit)&&    
global_edit_master.class.php:		$this->blog_options($data,$this->blog_table);
global_edit_master.class.php:	if  (!$this->edit||$this->blog_table_base!=$this->pagename){
global_edit_master.class.php:		if($this->blog_data1==='vid_upload'){
global_edit_master.class.php:			$image=(is_file(Cfg_loc::Root_dir.Cfg::Vid_image_dir.$this->$picfield))?Cfg_loc::Root_dir.Cfg::Vid_image_dir.$this->$picfield:''; #pic in   vid in Cfg::Vid_fir
global_edit_master.class.php:			$video->render_video($vidname,$image,$width,$height,$viddir,$this->blog_data5);//blog info currently used for flv autoplay
global_edit_master.class.php:		else	if($this->blog_data1==='iframe_embed'){ 
global_edit_master.class.php:			$embed= (strpos($this->blog_data4,'iframe')===false&&strpos($this->blog_data4,'object')===false)?'<iframe src="'.$this->blog_data4.'"  width="100%"  frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>':$this->blog_data4; 
global_edit_master.class.php:	if (!$this->edit)return; 
global_edit_master.class.php:	if ($this->blog_data1==='iframe_embed'&&strlen($this->blog_data4)>30){//check to resize iframe
global_edit_master.class.php:		if (strpos($this->blog_data4,'height')!==false){
global_edit_master.class.php:			if (false){//$width!=$this->current_net_width)
global_edit_master.class.php:				$newwidth='100%'; round($this->current_net_width);
global_edit_master.class.php:				$this->blog_data4=str_replace($replace,$this->blog_data4);
global_edit_master.class.php:				$this->blog_data4=str_replace($replace,$this->blog_data4);
global_edit_master.class.php:				$this->blog_data4=preg_replace($preg_match_h,'',$this->blog_data4);
global_edit_master.class.php:				$this->blog_data4=preg_replace($preg_match_w,' width="100%' ,$this->blog_data4);
global_edit_master.class.php:				$q="update $this->master_post_table set blog_data4='$this->blog_data4',token='". mt_rand(1,mt_getrandmax())."',blog_time='".time()."' where blog_id='$this->blog_id'";	
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		$q="update $this->master_post_table set  blog_data1='iframe_embed',blog_data4='$newvid',blog_data2='',blog_data3='',token='". mt_rand(1,mt_getrandmax())."',blog_time='".time()."' where blog_id='$this->blog_id'"; 
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		$this->success[]='Video Embed successfully Changed
global_edit_master.class.php:		$this->blog_data1='iframe_embed';
global_edit_master.class.php:		$this->blog_data4=$newvid;	 
global_edit_master.class.php:	if (!$this->is_clone){
global_edit_master.class.php:		echo '<div class="fsminfo editbackground editfont '.$this->column_lev_color.' floatleft"><!--Choose video Display--><p class="floatleft">Choose Video iframe/object embed (ie from youtube.com or Vimeo.com) or direct video upload. Other types of Iframes may also be displayed by using the first method. Video should autoadjust to the full post width using either method </p> ';
global_edit_master.class.php:		if ($this->blog_data1==='vid_upload')$this->show_more('Embed Video Code: ie Youtube.com','','','',500);
global_edit_master.class.php:		echo '<div class="fsminfo editbackground editfont floatleft left '.$this->column_lev_color.'"><!--Iframe Embed Code-->Place Video/Other Embed code Here, ie from Vimeo or Youtube or other type of iframe or object code.  This method has widest support for all video types on all devices, ie. preferred method<br>Enter Video Iframe, Object (Embed code), or Full Url Only:';
global_edit_master.class.php:		$this->textarea('blog_data4',$data.'_blog_data4_vid','600','16');
global_edit_master.class.php:		if ($this->blog_data1==='vid_upload')$this->show_close('Embed Youtube/Other Video Code Options');
global_edit_master.class.php:		if ($this->blog_data1!=='vid_upload'){
global_edit_master.class.php:			echo '<div class="fsminfo editbackground editfont floatleft left '.$this->column_lev_color.'"><!--Upload File-->Or  Upload Video File. Takes mp4,  ogg, webm, m4v';
global_edit_master.class.php:		echo'<p class="editcolor editbackground editfont  underline"> <a href="add_page_vid.php?www='.$this->current_net_width.'&amp;ttt='.$this->pagename.'&amp;fff='.$vidfield.'&amp;id='.$this->blog_id.'&amp;id_ref=blog_id&amp;pgtbn='.$this->pagename.'&amp;postreturn='.Sys::Self.'&amp;css='.Cfg_loc::Root_dir.Cfg::Style_dir.$this->pagename.'&amp;sess_override&amp;sess_token='.$this->sess->sess_token.'">Upload a Video File</a></p>';
global_edit_master.class.php:		if ($this->blog_data1==='vid_upload'){
global_edit_master.class.php:			$image=(is_file(Cfg_loc::Root_dir.Cfg::Vid_image_dir.$this->$picfield))?Cfg_loc::Root_dir.Cfg::Vid_image_dir.$this->$picfield:''; #pic in root dir  vid in Cfg::Vid_fir
global_edit_master.class.php:			$blog_data5=(!empty($this->blog_data5))?false:true;//for autoplay
global_edit_master.class.php:			$blog_show_change=(!empty($this->blog_data5))?"false":"true";
global_edit_master.class.php:			$blog_show_info=(!empty($this->blog_data5))?"true":"false";
global_edit_master.class.php:			printer::printx('<p class="fsminfo editbackground editfont '.$this->column_lev_color.' floatleft">Setting Autoplay to True will Cause the Video to Automaticaly Play Immediately! </p>');
global_edit_master.class.php:			printer::printx('<p class="editfont '.$this->column_lev_color.'">Autoplay Curently: '.$blog_show_info.'</p>');
global_edit_master.class.php:			$this->edit_vid($data,$vidinfo,$viddir);
global_edit_master.class.php:			echo '<div class="fsminfo editbackground editfont floatleft left '.$this->column_lev_color.'"><!--Upload File-->Change Video File. Takes mp4,  ogg, webm, m4v.';
global_edit_master.class.php:		echo'<p class="editcolor editbackground editfont  underline"> <a href="add_page_vid.php?www='.$this->current_net_width.'&amp;ttt='.$this->pagename.'&amp;fff='.$vidfield.'&amp;id='.$this->blog_id.'&amp;id_ref=blog_id&amp;pgtbn='.$this->pagename.'&amp;postreturn='.Sys::Self.'&amp;css='.Cfg_loc::Root_dir.Cfg::Style_dir.$this->pagename.'&amp;sess_override&amp;sess_token='.$this->sess->sess_token.'">Upload a Different Video File:</a></p>';
global_edit_master.class.php:	$global_field=($this->blog_global_style==='global')?',.'.$this->col_dataCss.' > .'.$this->blog_type.',.'.$this->col_dataCss.' >fieldset>.'.$this->blog_type:'';
global_edit_master.class.php:	$globalmsg=($this->blog_global_style==='global')?' Global Style':'';
global_edit_master.class.php:	$this->edit_styles_close($data,'blog_style','.'.$this->dataCss.'.'.$this->blog_type.$global_field, $style_list ,'Style Video'.$globalmsg,'','',true);
global_edit_master.class.php:	$css_id=($this->is_column)?$this->col_dataCss:$this->dataCss;
global_edit_master.class.php:	$max_name=($this->is_column)?$this->col_name.'_col_options['.$this->col_display_max_index.']':$this->data.'_blog_options['.$this->blog_display_max_index.']';
global_edit_master.class.php:	$min_name=($this->is_column)?$this->col_name.'_col_options['.$this->col_display_min_index.']':$this->data.'_blog_options['.$this->blog_display_min_index.']';
global_edit_master.class.php:	$type=($this->is_column)?'Column':'Post'; 
global_edit_master.class.php:	$val_max=($this->is_column)?$this->col_options[$this->col_display_max_index]:$this->blog_options[$this->blog_display_max_index];
global_edit_master.class.php:	$val_min=($this->is_column)?$this->col_options[$this->col_display_min_index]:$this->blog_options[$this->blog_display_min_index];
global_edit_master.class.php:	$this->show_more('Display '.$type.' Off',$msg,'','','800');
global_edit_master.class.php:	$this->print_wrap('Display state');
global_edit_master.class.php:     $btype=($this->is_blog)?$this->blog_type:'nested';
global_edit_master.class.php:     $this->css.=$mediacss;
global_edit_master.class.php:     $this->editoverridecss.=" 
global_edit_master.class.php:     html div#{$css_id}.$btype {display: $this->display_edit_data;}";//display state on in editmode  
global_edit_master.class.php:     printer::printx('<p class="smaller '.$this->column_lev_color.'">Chosen Display Off max-width: <span class="navybackground white">'.$displayoff_maxpx.'</span><br></p>'); 
global_edit_master.class.php:     $this->mod_spacing($max_name,$displayoff_maxpx,200,2000,1,'px','none');  
global_edit_master.class.php:     printer::printx('<p class="smaller '.$this->column_lev_color.'">Chosen min-width: <span class="navybackground white">'.$displayoff_minpx.'</span></p>');
global_edit_master.class.php:     $this->mod_spacing($min_name,$displayoff_minpx,200,2000,1,'px','none');  
global_edit_master.class.php:     $this->submit_button(); 
global_edit_master.class.php:     $this->close_print_wrap('Display state');
global_edit_master.class.php:     $this->show_close('display state Off'); 
global_edit_master.class.php:	$options=($this->is_column)?$this->col_options[$this->col_position_index]:$this->blog_options[$this->blog_position_index];
global_edit_master.class.php:     $type=($this->is_column)?'Column':'Post';
global_edit_master.class.php:	$prefix=($this->is_column)?'col':'blog';
global_edit_master.class.php:	$opacity_index=($this->is_column)?$this->col_opacity_index:$this->blog_opacity_index;
global_edit_master.class.php:	$opacity_options=($this->is_column)?$this->col_options:$this->blog_options;
global_edit_master.class.php:	$css_id=($this->is_column)?$this->col_dataCss:$this->dataCss;
global_edit_master.class.php:     $name=($this->is_column)?$this->col_name.'_col_options['.$this->col_position_index.']':$this->data.'_blog_options['.$this->blog_position_index.']';
global_edit_master.class.php:     $pos_horiz_val_name=($this->is_column)?$this->col_name.'_col_options':$this->data.'_blog_options';
global_edit_master.class.php:     $pos_vert_val_name=($this->is_column)?$this->col_name.'_col_options':$this->data.'_blog_options'; 
global_edit_master.class.php:	$name=($this->is_column)?$this->col_name.'_col_options['.$this->col_pos_vert_val_index.']':$this->data.'_blog_options['.$this->blog_position_index.']';
global_edit_master.class.php:	$max_name=$name.'['.$this->position_max_index.']';
global_edit_master.class.php:	$min_name=$name.'['.$this->position_min_index.']';
global_edit_master.class.php:	$pos_name=$name.'['.$this->position_index.']';
global_edit_master.class.php:	$pos_vert_name=$name.'['.$this->position_vert_index.']';
global_edit_master.class.php:	$pos_horiz_name=$name.'['.$this->position_horiz_index.']';
global_edit_master.class.php:	$pos_zindex_name=$name.'['.$this->position_zindex_index.']';
global_edit_master.class.php:     $opacity_name=($this->is_column)?'col_options['.$this->col_opacity_index.']':'blog_options['.$this->blog_opacity_index.']';
global_edit_master.class.php:	$pos_horiz_val=$this->{$prefix.'_options'}[$this->{$prefix.'_pos_horiz_val_index'}];
global_edit_master.class.php:	$pos_vert_val=$this->{$prefix.'_options'}[$this->{$prefix.'_pos_vert_val_index'}];
global_edit_master.class.php:	$pos_horiz=(!empty($options[$this->position_horiz_index])&&in_array($options[$this->position_horiz_index],$pos_horiz_vals_arr))?$options[$this->position_horiz_index]:'none'; 
global_edit_master.class.php:	$pos_vert=(!empty($options[$this->position_vert_index])&&in_array($options[$this->position_vert_index],$pos_vert_vals_arr))?$options[$this->position_vert_index]:'none';
global_edit_master.class.php:	$pos_zindex=(is_numeric($options[$this->position_zindex_index]))?$options[$this->position_zindex_index]:'none';
global_edit_master.class.php:	$val_max=$options[$this->position_max_index];
global_edit_master.class.php:	$val_min=$options[$this->position_min_index];
global_edit_master.class.php:	$pos_type=(!is_numeric($options[$this->position_index])&&in_array($options[$this->position_index],$pos_arr))?$options[$this->position_index]:'static';  
global_edit_master.class.php:	$this->css.=$mediacss;
global_edit_master.class.php:	$this->editoverridecss.='#'.$css_id.',.'.$css_id.'{position:static !important; transform: none;-ms-transform: none;-webkit-transform: none;z-index:0 !important;}';
global_edit_master.class.php:	//$this->editoverridecss.='.'.$css_id.'{opacity:1; }'; 
global_edit_master.class.php:	$this->show_more('Position & Opacity Option','','',$msg,'800');
global_edit_master.class.php:	$this->print_wrap('wrap advanced position',true);
global_edit_master.class.php:     $this->mod_spacing($opacity_name,$opacity_val,10,100,1,'%','none');
global_edit_master.class.php:	printer::alertx('<div class="'.$this->column_lev_color.' fsminfo  floatleft editbackground editfont">Choose Advanced Position Option');
global_edit_master.class.php:     printer::alertx('<div class="'.$this->column_lev_color.' fsminfo maxwidth500 floatleft editbackground editfont">Choose Right or Left, None (As is), or use Center Horizonally.'); 
global_edit_master.class.php:      $this->spacing($pos_horiz_val_name,$this->{$prefix.'_pos_horiz_val_index'},$horizpass,'Choose left or right positioning value','Adjust Horiz Position of absolute or relative positioned element/post/column','',$ifemptyhoriz,'','','.'.$css_id);  
global_edit_master.class.php:     printer::alertx('<div class="'.$this->column_lev_color.' fsminfo maxwidth500 floatleft editbackground editfont">Choose to position using Top or Bottom, None (As is), or use Center Vertically. <b>Note using both Center Vertically and an animation on this same post can change the animation path ie. on sliding animations</b>'); 
global_edit_master.class.php:     $this->spacing($pos_vert_val_name,$this->{$prefix.'_pos_vert_val_index'},$vertpass,'top or bottom positioning value','Adjust Vert Position of absolute or relative positioned element/post/column','',$ifemptyvert,'','','.'.$css_id); 
global_edit_master.class.php:     $this->mod_spacing($pos_zindex_name,$pos_zindex,-100,1000,.5,'','none');
global_edit_master.class.php:     printer::printx('<p class="smaller '.$this->column_lev_color.'">Chosen position Off max-width: <span class="navybackground white">'.$pos_maxpx.'</span><br></p>');   
global_edit_master.class.php:     $this->mod_spacing($max_name,$pos_maxpx,200,2000,1,'px','none');  
global_edit_master.class.php:     printer::printx('<p class="smaller '.$this->column_lev_color.'">Chosen min-width: <span class="navybackground white">'.$pos_minpx.'</span></p>');
global_edit_master.class.php:     $this->mod_spacing($min_name,$pos_minpx,200,2000,1,'px','none');
global_edit_master.class.php:     $this->submit_button(); 
global_edit_master.class.php:     $this->show_close('wrap advanced position'); 
global_edit_master.class.php:	$id_ref=($this->is_column)?$this->col_dataCss:$this->dataCss;
global_edit_master.class.php:	$col_level=($this->is_column)?$this->column_level:$this->column_level;
global_edit_master.class.php:	$options=($this->is_column)?$this->col_options[$this->col_animation_index]:$this->blog_options[$this->blog_animation_index];
global_edit_master.class.php:	$animate_type=(in_array($options[$this->animate_type_index],$animation_arr,true))?$options[$this->animate_type_index]:'none'; 
global_edit_master.class.php:	$animate_height=(is_numeric($options[$this->animate_height_index])&&$options[$this->animate_height_index]>0&&$options[$this->animate_height_index]<=$max_height)?$options[$this->animate_height_index]:
global_edit_master.class.php:	$animate_duration=(is_numeric($options[$this->animate_duration_index])&&$options[$this->animate_duration_index]>=.1&&$options[$this->animate_duration_index]<=$max_duration)?$options[$this->animate_duration_index]:1; 
global_edit_master.class.php:	$animate_width=(is_numeric($options[$this->animate_width_index])&&$options[$this->animate_width_index]>=$min_width&&$options[$this->animate_width_index]<=$max_width)?$options[$this->animate_width_index]:0;
global_edit_master.class.php:	$animate_repeats=($options[$this->animate_repeats_index]==='infinite'||(is_numeric($options[$this->animate_repeats_index])&&($options[$this->animate_repeats_index]>0&&$options[$this->animate_repeats_index]<=$max_repeat)))?$options[$this->animate_repeats_index]:'1'; 
global_edit_master.class.php:	$animate_after_type=(in_array($options[$this->animate_after_type_index],$animation_arr,true))?$options[$this->animate_after_type_index]:'none';
global_edit_master.class.php:	$animate_after_delay=(is_numeric($options[$this->animate_after_delay_index])&&$options[$this->animate_after_delay_index]<$max_delay)?$options[$this->animate_after_delay_index]:1; 
global_edit_master.class.php:	$animate_after_duration=(is_numeric($options[$this->animate_after_duration_index])&&$options[$this->animate_after_duration_index]>=.1&&$options[$this->animate_after_duration_index]<=$max_duration)?$options[$this->animate_after_duration_index]:1;
global_edit_master.class.php:	$animate_after_repeats=($options[$this->animate_after_repeats_index]==='infinite'||(is_numeric($options[$this->animate_after_repeats_index])&&($options[$this->animate_after_repeats_index]>0&&$options[$this->animate_after_repeats_index]<=$max_repeat)))?$options[$this->animate_after_repeats_index]:'1'; 
global_edit_master.class.php:	$animate_lock=(is_numeric($options[$this->animate_lock_index])&&$options[$this->animate_lock_index]<=$max_animate_lock)?$options[$this->animate_lock_index]:0;
global_edit_master.class.php:	$animate_final_display=($options[$this->animate_final_display_index]==='displaynone')?'displaynone':(($options[$this->animate_final_display_index]==='visibleoff')?'visibleoff':'visible');
global_edit_master.class.php:	$animate_complete_id=(check_data::check_id($options[$this->animate_complete_id_index]))?$options[$this->animate_complete_id_index]:'';
global_edit_master.class.php:	$animate_sibling=($options[$this->animate_sibling_index]==='prev'||$options[$this->animate_sibling_index]==='next'||$options[$this->animate_sibling_index]==='parent')?$options[$this->animate_sibling_index]:'inactive'; 	 
global_edit_master.class.php:	$active_element_follow=(array_key_exists($animate_complete_id,$this->sibling_id_arr[$col_level]))?$this->sibling_id_arr[$col_level][$animate_complete_id]:'';
global_edit_master.class.php:	$col_level=($this->is_column)?$this->column_level:$this->column_level;
global_edit_master.class.php:	$anim_data=($this->is_column)?$this->col_dataCss:$this->dataCss;
global_edit_master.class.php:	$anim_name=($this->is_column)?$this->col_name.'_col_options['.$this->col_animation_index.']':$this->data.'_blog_options['.$this->blog_animation_index.']';
global_edit_master.class.php:	$check_anim_name=($this->is_column)?$this->col_name.'_col_options':$this->data.'_blog_options';
global_edit_master.class.php:	$check_anim_index=($this->is_column)?$this->col_animation_index:$this->blog_animation_index;
global_edit_master.class.php:	$type=($this->is_column)?'Column':'Post';
global_edit_master.class.php:	$id_ref=($this->is_column)?$this->col_dataCss:$this->dataCss;
global_edit_master.class.php:	$this->show_more($type.' Animations','','','',300);
global_edit_master.class.php:	$this->print_wrap('wrap animations',true);
global_edit_master.class.php:	$options=($this->is_column)?$this->col_options[$this->col_animation_index]:$this->blog_options[$this->blog_animation_index];
global_edit_master.class.php:	$animate_type=(in_array($options[$this->animate_type_index],$animation_arr,true))?$options[$this->animate_type_index]:'none';
global_edit_master.class.php:	$animate_visibility=($options[$this->animate_visibility_index]==='hidden')?'hidden':(($options[$this->animate_visibility_index]==='nodisplay')?'nodisplay':'visible'); 
global_edit_master.class.php:	$animate_sibling=($options[$this->animate_sibling_index]==='prev'||$options[$this->animate_sibling_index]==='next'||$options[$this->animate_sibling_index]==='parent')?$options[$this->animate_sibling_index]:'inactive'; 
global_edit_master.class.php:	$animate_alternate=($options[$this->animate_alternate_index]==='alternate')?true:false;
global_edit_master.class.php:	$animate_repeats=($options[$this->animate_repeats_index]==='infinite'||(is_numeric($options[$this->animate_repeats_index])&&($options[$this->animate_repeats_index]>0&&$options[$this->animate_repeats_index]<=$max_repeat)))?$options[$this->animate_repeats_index]:'1'; 
global_edit_master.class.php:	$animate_duration=(is_numeric($options[$this->animate_duration_index])&&$options[$this->animate_duration_index]>=.1&&$options[$this->animate_duration_index]<=$max_duration)?$options[$this->animate_duration_index]:1; 
global_edit_master.class.php:	$animate_prior_delay=(is_numeric($options[$this->animate_prior_delay_index])&&$options[$this->animate_prior_delay_index]>=0&&$options[$this->animate_prior_delay_index]<=$max_prior_delay)?$options[$this->animate_prior_delay_index]:1; 
global_edit_master.class.php:	$animate_height=(is_numeric($options[$this->animate_height_index])&&$options[$this->animate_height_index]>0&&$options[$this->animate_height_index]<=$max_height)?$options[$this->animate_height_index]:$default_animate_height; 
global_edit_master.class.php:	$animate_width=(is_numeric($options[$this->animate_width_index])&&$options[$this->animate_width_index]>=$min_width&&$options[$this->animate_width_index]<=$max_width)?$options[$this->animate_width_index]:'none';
global_edit_master.class.php:	$animate_after_type=(in_array($options[$this->animate_after_type_index],$animation_arr,true))?$options[$this->animate_after_type_index]:'none';
global_edit_master.class.php:	$animate_after_delay=(is_numeric($options[$this->animate_after_delay_index])&&$options[$this->animate_after_delay_index]<$max_delay)?$options[$this->animate_after_delay_index]:1;
global_edit_master.class.php:	$animate_after_repeats=($options[$this->animate_after_repeats_index]==='infinite'||(is_numeric($options[$this->animate_after_repeats_index])&&($options[$this->animate_after_repeats_index]>0&&$options[$this->animate_after_repeats_index]<=$max_repeat)))?$options[$this->animate_after_repeats_index]:'1'; 
global_edit_master.class.php:	$animate_after_duration=(is_numeric($options[$this->animate_after_duration_index])&&$options[$this->animate_after_duration_index]>=.1&&$options[$this->animate_after_duration_index]<=$max_duration)?$options[$this->animate_after_duration_index]:1;
global_edit_master.class.php:	$animate_final_display=($options[$this->animate_final_display_index]==='displaynone')?'displaynone':(($options[$this->animate_final_display_index]==='visibleoff')?'visibleoff':'visible');
global_edit_master.class.php:	$animate_lock=(is_numeric($options[$this->animate_lock_index])&&$options[$this->animate_lock_index]<=$max_animate_lock)?$options[$this->animate_lock_index]:0;
global_edit_master.class.php:	$animate_complete_id=(check_data::check_id($options[$this->animate_complete_id_index]))?$options[$this->animate_complete_id_index]:'';
global_edit_master.class.php:	$active_element_follow=(array_key_exists($animate_complete_id,$this->sibling_id_arr[$col_level]))?$this->sibling_id_arr[$col_level][$animate_complete_id]:''; 
global_edit_master.class.php:			$this->css.='
global_edit_master.class.php:			$this->css.='
global_edit_master.class.php:			$this->editoverridecss.='
global_edit_master.class.php:			$this->css.='
global_edit_master.class.php:			.'.$id_ref.'.in-view{display:'.$this->display_edit_data.';}
global_edit_master.class.php:		$this->css.='
global_edit_master.class.php:               $this->css.='
global_edit_master.class.php:               $this->css.='
global_edit_master.class.php:			$this->css.='
global_edit_master.class.php:		$this->editoverridecss.='
global_edit_master.class.php:			html div#'.$id_ref.'{display: '.$this->display_edit_data.';}
global_edit_master.class.php:	$this->show_more('Control Initial visibility');	
global_edit_master.class.php:	$this->print_wrap('anim visibility'); 
global_edit_master.class.php:	printer::alert('<p class="editbackground editfont highlight" title="Set initial visibility to hidden to insure that the '.$type.' is hidden prior to scroll activation of animation;uses css (visibily:hidden) property"><input type="radio" '.$checked1.' name="'.$anim_name.'['.$this->animate_visibility_index.']" value="hidden">Insure Non visibility of Initial State<p>');
global_edit_master.class.php:	printer::alertx('<p class="editbackground editfont highlight" title="Set '.$type.' initial visibility to visibile"><input type="radio"  name="'.$anim_name.'['.$this->animate_visibility_index.']" value="nodisplay" '.$checked2.'>Use No Display No space State<p>');
global_edit_master.class.php:	printer::alertx('<p class="editbackground editfont highlight" title="Set '.$type.' initial visibility to visibile"><input type="radio"  name="'.$anim_name.'['.$this->animate_visibility_index.']" value="visible" '.$checked3.'>Use Normal Visible Display State<p>');	 
global_edit_master.class.php:	$this->show_close('Control Initial visibility');	
global_edit_master.class.php:	$this->show_more('Enable '.$type.' Initial Animation','','',' ','800');
global_edit_master.class.php:	$this->print_wrap('inital wrap animate ',true);
global_edit_master.class.php:	$this->print_wrap('animate type','editbackground editfont Os3salmon fsmaqua');
global_edit_master.class.php:	<select class="editcolor editbackground editfont" name="'.$anim_name.'['.$this->animate_type_index.']">
global_edit_master.class.php:	 name="'.$anim_name.'['.$this->animate_type_index.']
global_edit_master.class.php:	$this->print_wrap('anim alternate','editbackground editfont Os3salmon fsmaqua'); 
global_edit_master.class.php:	printer::alert('<p class="editbackground editfont editcolor"><input type="radio" '.$checked1.' name="'.$anim_name.'['.$this->animate_alternate_index.']" value="alternate">Reverse repeat this animation<p>');
global_edit_master.class.php:	printer::alertx('<p class="editbackground editfont editcolor" title="Set '.$type.' initial alternate to visibile"><input type="radio"  name="'.$anim_name.'['.$this->animate_alternate_index.']" value="0" '.$checked2.'>No Reversing<p>');	 	
global_edit_master.class.php:	$this->print_wrap('anim complete_id','editbackground editfont Os3salmon fsmaqua');
global_edit_master.class.php:	 if (isset($_POST[$check_anim_name][$check_anim_index][$this->animate_complete_id_index])){
global_edit_master.class.php:		$table=($type==='Column')?$this->master_col_table:$this->master_post_table;
global_edit_master.class.php:		$count=$this->mysqlinst->count_field($table,$idn,'',false,"where $idn=$bid");
global_edit_master.class.php:			$msg="Error as no id exists for $bid in $type record. Please Review you ID choice for ".$options[$this->animate_complete_id_index];
global_edit_master.class.php:			$this->message[]=$msg;
global_edit_master.class.php:	printer::alert('Enter the id of the animated post or column you wish to complete before this animation starts:<input type="text" value="'.$animate_complete_id.'" name="'.$anim_name.'['.$this->animate_complete_id_index.']">');
global_edit_master.class.php:     printer::alert('<p class="editbackground editfont info" ><input type="radio" '.$checked1.' name="'.$anim_name.'['.$this->animate_sibling_index.']" value="prev">Use Previous Sibling Activation of this Animation<p>');
global_edit_master.class.php:	printer::alert('<p class="editbackground editfont info" ><input type="radio" '.$checked2.' name="'.$anim_name.'['.$this->animate_sibling_index.']" value="next">Use Next Sibling Activation of this Animation<p>');
global_edit_master.class.php:	printer::alert('<p class="editbackground editfont info" ><input type="radio" '.$checked3.' name="'.$anim_name.'['.$this->animate_sibling_index.']" value="parent">Use Parent Column (animation completing) for Activation of this Animation<p>');
global_edit_master.class.php:	printer::alertx('<p class="editbackground editfont info"><input type="radio"  name="'.$anim_name.'['.$this->animate_sibling_index.']" value="inactive" '.$checked4.'>Turn Off Sibling/Parent Activation of this Animation<p>');	 	
global_edit_master.class.php:	$this->print_wrap('anim repeats','editbackground editfont Os3salmon fsmaqua'); 
global_edit_master.class.php:	<select class="editcolor editbackground editfont" name="'.$anim_name.'['.$this->animate_repeats_index.']">
global_edit_master.class.php:	$this->print_wrap('anim prior_delay','editbackground editfont Os3salmon fsmaqua'); 
global_edit_master.class.php:	$this->mod_spacing($anim_name.'['.$this->animate_prior_delay_index.']',$animate_prior_delay,.2,$max_prior_delay,.1,'sec');
global_edit_master.class.php:	$this->print_wrap('anim duration','editbackground editfont Os3salmon fsmaqua'); 
global_edit_master.class.php:	$this->mod_spacing($anim_name.'['.$this->animate_duration_index.']',$animate_duration,.1,$max_duration,.1,'sec');
global_edit_master.class.php:	$this->print_wrap('anim height','editbackground editfont Os3salmon fsmaqua'); 
global_edit_master.class.php:	$this->mod_spacing($anim_name.'['.$this->animate_height_index.']',$animate_height,0,$max_height,1,'%');
global_edit_master.class.php:	$this->print_wrap('anim width','editbackground editfont Os3salmon fsmaqua'); 
global_edit_master.class.php:	$this->mod_spacing($anim_name.'['.$this->animate_width_index.']',$animate_width,$min_width,$max_width,1,'px','none');
global_edit_master.class.php:	$this->print_wrap('anim lock','editbackground editfont Os3salmon fsmaqua'); 
global_edit_master.class.php:	$this->mod_spacing($anim_name.'['.$this->animate_lock_index.']',$animate_lock,0,$max_animate_lock,.2,'sec');
global_edit_master.class.php:	$this->submit_button();	
global_edit_master.class.php:	$this->show_close('Enable '.$type.' Initial Animation');
global_edit_master.class.php:	$this->show_more('Pause Delay to Follup Animation');
global_edit_master.class.php:	$this->print_wrap('animate_after_delay','editbackground editfont Os3salmon fsmaqua'); 
global_edit_master.class.php:	$this->mod_spacing($anim_name.'['.$this->animate_after_delay_index.']',$animate_after_delay,0,$max_delay,.2,'sec');
global_edit_master.class.php:	$this->show_close('Pause Delay to Follup Animation');	
global_edit_master.class.php:	$this->show_more('Enable '.$type.' Follup Animation','','','The followup animation runs following the final completion of the inital animation follow any delay selected below','800');
global_edit_master.class.php:	$this->print_wrap('anim after','editbackground editfont fsminfo 0s3darkgray');	
global_edit_master.class.php:	$this->print_wrap('animate after_type','editbackground editfont Os3salmon fsmaqua');
global_edit_master.class.php:	<select class="editcolor editbackground editfont" name="'.$anim_name.'['.$this->animate_after_type_index.']">
global_edit_master.class.php:	$this->print_wrap('anim after_repeats','editbackground editfont Os3salmon fsmaqua'); 
global_edit_master.class.php:	<select class="editcolor editbackground editfont" name="'.$anim_name.'['.$this->animate_after_repeats_index.']">
global_edit_master.class.php:	$this->print_wrap('anim after_duration','editbackground editfont Os3salmon fsmaqua');
global_edit_master.class.php:	$this->mod_spacing($anim_name.'['.$this->animate_after_duration_index.']',$animate_after_duration,.1,$max_duration,.1,'sec');
global_edit_master.class.php:	$this->submit_button();	
global_edit_master.class.php:	$this->show_close('Enable '.$type.' Follup Animation'); 
global_edit_master.class.php:	$this->show_more('Final Visibility');
global_edit_master.class.php:	$this->print_wrap('anim final display','editbackground editfont Os3salmon fsmaqua'); 
global_edit_master.class.php:	printer::alert('<p class="editbackground editfont info" ><input type="radio" '.$checked1.' name="'.$anim_name.'['.$this->animate_final_display_index.']" value="displaynone">Set Display None-No Space After animation(s) complete<p>');
global_edit_master.class.php:	printer::alert('<p class="editbackground editfont info" ><input type="radio" '.$checked2.' name="'.$anim_name.'['.$this->animate_final_display_index.']" value="visibleoff">Set Visibilty None-Space Occupied After animation(s) complete.<p>');
global_edit_master.class.php:	printer::alertx('<p class="editbackground editfont info" ><input type="radio"  name="'.$anim_name.'['.$this->animate_final_display_index.']" value="visible" '.$checked3.'>Display No Change<p>');	 	 
global_edit_master.class.php:	$this->show_close('Final Visibility');
global_edit_master.class.php:	$this->show_close('animations'); 
global_edit_master.class.php:          $this->left_border_info='';
global_edit_master.class.php:          $this->right_border_info='';
global_edit_master.class.php:     $border_sides=$this->border_sides;//aray of border types
global_edit_master.class.php:	$border_array=(array_key_exists($this->borders_index,$styles))?explode('@@',$styles[$this->borders_index]):array(); 
global_edit_master.class.php:               $scale=($this->rem_scale)?'on':'off';
global_edit_master.class.php:               $border_width=$this->terminal_font_em_px*$border_value2;
global_edit_master.class.php:               $scale=($this->terminal_em_scale)?'on':'off'; 
global_edit_master.class.php:                    $this->left_border_info=$this->left_border_info.' Left Border: '. $value;
global_edit_master.class.php:                    $this->right_border_info=$this->right_border_info.' Right Border: '.$value;
global_edit_master.class.php:                    $this->left_border_info=$this->left_border_info.' Left Border: '.$value; 
global_edit_master.class.php:                    $this->right_border_info=$this->right_border_info.' Right Border: '.$value;
global_edit_master.class.php:                    $this->left_border_info=$this->left_border_info.' Left Border: '.$value; 
global_edit_master.class.php:                    $this->right_border_info=$this->right_border_info.' Right Border: '.$value;
global_edit_master.class.php:                    $this->left_border_info=$this->left_border_info.' Left Border: '.$value; 
global_edit_master.class.php:                    $this->right_border_info=$this->right_border_info.' Right Border: '.$value;
global_edit_master.class.php:                    $this->left_border_info=$this->left_border_info.' Left Border: '.$value;
global_edit_master.class.php:                    $this->right_border_info=$this->right_border_info.' Right Border: '.$value;
global_edit_master.class.php:     $this->tracker=false;
global_edit_master.class.php:	$font_arr=(array_key_exists($this->font_size_index,$styles))?explode('@@',$styles[$this->font_size_index]):array();
global_edit_master.class.php:               if ($this->is_page){//values will be  inherited from rem setting
global_edit_master.class.php:                    $this->current_font_em_px=$this->terminal_font_em_px=$font_arr[2] *16;  
global_edit_master.class.php:                    $this->current_em_scale=$this->terminal_em_scale=$this->rem_scale;
global_edit_master.class.php:                    $this->terminal_font_em_px=$font_arr[2] * $this->current_font_em_px; 
global_edit_master.class.php:                    $this->terminal_em_scale=$this->current_em_scale;
global_edit_master.class.php:                    if (!$this->is_blog){
global_edit_master.class.php:                         $this->current_em_scale=$this->current_em_scale;//no change
global_edit_master.class.php:                         $this->current_font_em_px=$font_arr[2] * $this->current_font_em_px; //this will track 
global_edit_master.class.php:               //$this->terminal_rem_scale=$this->current_rem_scale;
global_edit_master.class.php:               $this->terminal_font_em_px=$font_arr[2] *16;  
global_edit_master.class.php:               $this->terminal_em_scale=$this->rem_scale;
global_edit_master.class.php:               if (!$this->is_blog){
global_edit_master.class.php:                    $this->current_font_em_px=$font_arr[2] *16; // 
global_edit_master.class.php:                    $this->current_em_scale=$this->rem_scale;
global_edit_master.class.php:               $this->terminal_font_em_px=$font_arr[2] * $this->max_width_limit/100; // percentage of primary column width 
global_edit_master.class.php:               $this->terminal_em_scale=true;
global_edit_master.class.php:               if (!$this->is_blog){
global_edit_master.class.php:                    $this->current_font_em_px=$font_arr[2] * $this->max_width_limit/100; // percentage of primary column width
global_edit_master.class.php:                    $this->current_em_scale=true;
global_edit_master.class.php:          $this->terminal_font_em_px=$font_arr[0];  
global_edit_master.class.php:          if (!$this->is_blog){
global_edit_master.class.php:               $this->current_font_em_px=$font_arr[0];
global_edit_master.class.php:               $this->terminal_em_scale=true;     
global_edit_master.class.php:               if (!$this->is_blog){
global_edit_master.class.php:                    $this->current_em_scale=true;
global_edit_master.class.php:               $this->terminal_em_scale=false; 
global_edit_master.class.php:               if (!$this->is_blog){
global_edit_master.class.php:                    $this->current_em_scale=false;
global_edit_master.class.php:          $this->terminal_font_em_px=$this->current_font_em_px;  
global_edit_master.class.php:          $this->terminal_px_scale=$this->current_em_scale; 
global_edit_master.class.php:     $this->width_info='';
global_edit_master.class.php:          $this->width_scale=($this->rem_scale)?'rem scaling on':'rem scaling off';
global_edit_master.class.php:          $this->width_info.="{$width}$this->width_scale<br>";
global_edit_master.class.php:          $width=$styles_arr[3]*$this->terminal_font_em_px;
global_edit_master.class.php:          $this->width_scale=($this->terminal_em_scale)?'em scaling on':'em scaling off';
global_edit_master.class.php:          $this->width_info.="{$width}$this->width_scale<br>";
global_edit_master.class.php:          $width=$styles_arr[2]* $this->current_total_width/100;
global_edit_master.class.php:          $this->width_scale='% scale';
global_edit_master.class.php:          $this->width_info.="{$width}$this->width_scale<br>";
global_edit_master.class.php:           $this->width_scale=($this->terminal_px_scale)?'px scaling on':'px scaling off';
global_edit_master.class.php:           $this->width_info.="{$width}$this->width_scale<br>";
global_edit_master.class.php:           $this->width_info.="Not set<br>";
global_edit_master.class.php:          $this->{$space.'_info'}='';//intialize
global_edit_master.class.php:		${$space.'_arr'}=(array_key_exists($this->{$space.'_index'},$styles))?explode('@@',$styles[$this->{$space.'_index'}]):array();
global_edit_master.class.php:               $this->{$space.'_info'}=($this->rem_scale)?$$space.'rem scaling on':$$space.'rem scaling off';
global_edit_master.class.php:               $$space=${$space.'_arr'}[3]*$this->terminal_font_em_px;
global_edit_master.class.php:               $this->{$space.'_info'}=($this->terminal_em_scale)?'$$spaceem scaling on':$$space.'em scaling off';
global_edit_master.class.php:               $$space=${$space.'_arr'}[2]* $this->current_total_width/100;
global_edit_master.class.php:               $this->{$space.'_info'}=$$space.'% scale';
global_edit_master.class.php:                    $this->{$space.'_info'}=$$space.'px scaling on';
global_edit_master.class.php:               else $this->{$space.'_info'}=$$space.'px scaling off';
global_edit_master.class.php:	if (!array_key_exists($this->box_shadow_index,$styles))return 0; 
global_edit_master.class.php:	$shadows=$styles[$this->box_shadow_index];
global_edit_master.class.php:	if (!array_key_exists($this->shadowbox_color_index,$shadow_arr))return 0;
global_edit_master.class.php:	if (!preg_match(Cfg::Preg_color,$shadow_arr[$this->shadowbox_color_index]))return 0;
global_edit_master.class.php:	if ($shadow_arr[$this->shadowbox_spread_radius_index]<0)return abs($shadow_arr[$this->shadowbox_horiz_offset_index])-$shadow_arr[$this->shadowbox_spread_radius_index];
global_edit_master.class.php:	$max=max($shadow_arr[$this->shadowbox_spread_radius_index],abs($shadow_arr[$this->shadowbox_horiz_offset_index])); 
global_edit_master.class.php:	$max= ($shadow_arr[$this->shadowbox_blur_radius_index]>$max&&$shadow_arr[$this->shadowbox_spread_radius_index]>0)?$max+ min(3*$max,$shadow_arr[$this->shadowbox_blur_radius_index]/$shadow_arr[$this->shadowbox_spread_radius_index]):$max+$shadow_arr[$this->shadowbox_blur_radius_index]*.67;
global_edit_master.class.php:	$this->column_level++;     
global_edit_master.class.php:	$this->column_lev_color=$this->color_arr_long[$this->column_level];
global_edit_master.class.php:	if($this->blog_data2==='column_choice'){
global_edit_master.class.php:		$this->choose_column($this->blog_id,true);   
global_edit_master.class.php:		$this->column_level--;   
global_edit_master.class.php:	$this->blog_render($this->blog_data1,false,$this->col_table_base);
global_edit_master.class.php:	$this->column_level--;   
global_edit_master.class.php:	$this->column_lev_color=$this->color_arr_long[$this->column_level];  
global_edit_master.class.php:	$q="select dir_menu_order, dir_sub_menu_order from $this->directory_table where dir_menu_id='$dir_menu_id'";
global_edit_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true); 
global_edit_master.class.php:	while($rows=$this->mysqlinst->fetch_assoc($r,__LINE__)){ 
global_edit_master.class.php:			$q="select dir_title,dir_ref from $this->directory_table where dir_menu_id='$dir_menu_id' and dir_menu_order='$dir_menu_order' and dir_sub_menu_order='$dir_sub_menu_order'"; 
global_edit_master.class.php:			$r2=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			list($dir_title,$dir_ref)=$this->mysqlinst->fetch_row($r2,__LINE__);
global_edit_master.class.php:				$q="update $this->directory_table set dir_update='".date("dMY-H-i-s")."',dir_title='$title' where dir_menu_id='$dir_menu_id' and dir_menu_order='$dir_menu_order' and dir_sub_menu_order='$dir_sub_menu_order'";  
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:				$q="update $this->master_page_table set token=".mt_rand(1,mt_getrandmax()).",page_title='$title' where page_ref='$dir_ref'"; 
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:				$this->success[]=$msg;
global_edit_master.class.php:				$q="select dir_ref,dir_filename from $this->directory_table where dir_menu_id='$dir_menu_id' and dir_menu_order='$dir_menu_order' and dir_sub_menu_order='$dir_sub_menu_order'";//remember all dir_ref and therefore dir_filename must make this change regardless 
global_edit_master.class.php:				$r2=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:				list($dir_ref,$dir_filename)=$this->mysqlinst->fetch_row($r2,__LINE__);
global_edit_master.class.php:					$q="UPdate $this->directory_table set dir_update='".date("dMY-H-i-s")."',dir_time='".time()."',token='".mt_rand(1,mt_getrandmax()). "',dir_filename='$filename' where dir_ref='$dir_ref'";
global_edit_master.class.php:					$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:					$q="UPdate $this->master_page_table set page_update='".date("dMY-H-i-s")."', page_time='".time()."',token='".mt_rand(1,mt_getrandmax()). "',page_filename='$filename' where page_ref='$dir_ref'";
global_edit_master.class.php:					$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:					$q="select dir_internal,dir_external,dir_menu_id,dir_title from $this->directory_table where dir_ref='$dir_ref'";  
global_edit_master.class.php:					$r2=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:					$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:					while($rows2=$this->mysqlinst->fetch_assoc($r2,__LINE__)){
global_edit_master.class.php:						$filename_msg=NL.'The Page having the title '.$dir_title." has had a filename change from $dir_filename.$this->ext to $filename$this->ext  in dir menu id$dir_menu_id2";
global_edit_master.class.php:						$ext=(!$dir_internal&&!$dir_external)?$this->ext:'';
global_edit_master.class.php:					$this->success[]=$filename_msg;	
global_edit_master.class.php:	$index_msg='Your Homepage has been switched. Homepages always have the filename index ('.$this->ext.')';
global_edit_master.class.php:		$q="select dir_ref,dir_filename from $this->directory_table where dir_menu_id=".$arr[0].' and dir_menu_order='.$arr[1].'  and dir_sub_menu_order=0';  
global_edit_master.class.php:		$r2=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		list($dir_ref,$dir_filename)=$this->mysqlinst->fetch_row($r2,__LINE__);
global_edit_master.class.php:			//$newindex=process_data::new_file($dir_ref,$this->ext);
global_edit_master.class.php:			$q="select dir_menu_id,dir_title,dir_ref from $this->directory_table where dir_filename='index'";
global_edit_master.class.php:			$r2=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__);
global_edit_master.class.php:			while($rows2=$this->mysqlinst->fetch_assoc($r2,__LINE__)){
global_edit_master.class.php:				$index_msg.=NL.'The Old Opening/Homepage having the title '.$dir_title.' and the data_ref: '.$dir_ref2.' has had a filename change from index ('.$this->ext.')  to '.$dir_ref2. '('.$this->ext.') in dir menu id '.$dir_menu_id2;
global_edit_master.class.php:				if (!copy('index'.$this->ext,$dir_ref2.$this->ext)){
global_edit_master.class.php:					mail::alert("failure to copy index  to $newname$this->ext  Having the title $dir_title in editpages");
global_edit_master.class.php:				if (!copy(Cfg_loc::Root_dir.'index'.$this->ext,Cfg_loc::Root_dir.$dir_ref2.$this->ext)){
global_edit_master.class.php:                         mail::alert("failure to copy index  to $newname$this->ext  Having the title $dir_title in Root dir");
global_edit_master.class.php:			$q="UPDate $this->directory_table  set dir_update='".date("dMY-H-i-s")."',dir_time='".time()."',token='".mt_rand(1,mt_getrandmax()). "',dir_filename=dir_ref where dir_filename='index'";
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__);
global_edit_master.class.php:			$q="UPDate $this->master_page_table  set page_time='".time()."',token='".mt_rand(1,mt_getrandmax()). "',page_filename=page_ref where page_filename='index'";
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__);
global_edit_master.class.php:			$q="select dir_menu_id,dir_title,dir_filename from $this->directory_table where dir_ref='$dir_ref'";
global_edit_master.class.php:			$r2=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			while($rows2=$this->mysqlinst->fetch_assoc($r2,__LINE__)){
global_edit_master.class.php:				$index_msg.=NL.'The New Opening/Homepage  having the title '.$dir_title.' and the data_ref of '.$dir_ref.' has had its filename changed from  '.$dir_filename. '('.$this->ext.') to index ('.$this->ext.') in dir menu id '.$dir_menu_id2;
global_edit_master.class.php:			$q="UPDate $this->directory_table  set dir_update='".date("dMY-H-i-s")."',dir_time='".time()."',token='".mt_rand(1,mt_getrandmax()). "',dir_filename='index' where dir_ref='$dir_ref'";
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			$q="UPDate $this->master_page_table  set page_time='".time()."',token='".mt_rand(1,mt_getrandmax()). "',page_filename='index' where page_filename='$dir_ref'";
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__);
global_edit_master.class.php:			if (is_file($dir_filename.$this->ext)){
global_edit_master.class.php:				if (!copy($dir_filename.$this->ext,'index'.$this->ext)){
global_edit_master.class.php:					mail::alert("failure to copy $dir_filename  to index$this->ext  Having the title $dir_title in editpages");
global_edit_master.class.php:			else printer::alert_neg('Check for existance of '.$dir_filename.$this->ext);
global_edit_master.class.php:			if (is_file(Cfg_loc::Root_dir.$dir_filename.$this->ext)){
global_edit_master.class.php:				if (!copy(Cfg_loc::Root_dir.$dir_filename.$this->ext,Cfg_loc::Root_dir.'index'.$this->ext)){
global_edit_master.class.php:				    mail::alert('failure to copy   '.Cfg_Loc::Root_dir.$newname.$this->ext ." to  index Having the title $dir_title in Root dir");
global_edit_master.class.php:			else printer::alert_neg('Check for existance of '.Cfg_loc::Root_dir.$dir_filename.$this->ext);
global_edit_master.class.php:			$this->success[]=$index_msg;
global_edit_master.class.php:			$q="select dir_title from $this->directory_table where dir_menu_id=".$arr[0].' and dir_menu_order='.$arr[1].' and dir_sub_menu_order='.$arr[2];
global_edit_master.class.php:			$x=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			list($dirtitle)=$this->mysqlinst->fetch_row($x,__LINE__);
global_edit_master.class.php:			$q="delete from $this->directory_table where dir_menu_id=".$arr[0].' and dir_menu_order='.$arr[1].' and dir_sub_menu_order='.$arr[2];
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			$this->message[]=$msg;
global_edit_master.class.php:				$q="select dir_filename, dir_title from $this->directory_table where dir_ref='$dir_ref' limit 1";
global_edit_master.class.php:				$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:				if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:					list($dir_filename,$dir_title)=$this->mysqlinst->fetch_row($r,__LINE__);
global_edit_master.class.php:					$q="select page_title,page_filename from $this->master_page_table where page_ref='$dir_ref'";
global_edit_master.class.php:					$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:					list($dir_title,$dir_filename)=$this->mysqlinst->fetch_row($r,__LINE__);
global_edit_master.class.php:				$count=$this->mysqlinst->count_field($this->directory_table,'dir_sub_menu_order','',false,$where);
global_edit_master.class.php:					$count=$this->mysqlinst->count_field($this->directory_table,'dir_menu_order','',false,$where);
global_edit_master.class.php:					$dir_menu_order=$this->mysqlinst->field_inc;
global_edit_master.class.php:				else $dir_sub_menu_order=$this->mysqlinst->field_inc;
global_edit_master.class.php:				$q="insert into  $this->directory_table  ($dir_fields,dir_update,dir_time,token) values ($value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')";    
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:				$this->success[]=$msg;
global_edit_master.class.php:					$q="insert into $this->directory_table (dir_menu_id,dir_menu_order,dir_sub_menu_order,dir_filename,dir_title,dir_ref,dir_menu_style,dir_gall_table,dir_blog_table,dir_menu_type,dir_gall_type,dir_menu_opts,dir_hide_sub_menu,dir_external,dir_internal,dir_is_gall,dir_temp,dir_temp2,dir_update,dir_time,token) values
global_edit_master.class.php:					$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true); 	 
global_edit_master.class.php:	$this->directory_tidy($dir_menu_id);
global_edit_master.class.php:	$this->success[]=$msg;
global_edit_master.class.php:	$q="select distinct dir_menu_order from  $this->directory_table  where dir_menu_id='$dir_menu_id' order by dir_menu_order";
global_edit_master.class.php:	$r2=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	while (list($dir_menu_order)= $this->mysqlinst->fetch_row($r2,__LINE__)){
global_edit_master.class.php:		$q="select dir_sub_menu_order from  $this->directory_table  where dir_menu_id='$dir_menu_id' and dir_menu_order='$dir_menu_order' order by dir_sub_menu_order";
global_edit_master.class.php:		$r3=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		while (list($dir_sub_menu_order)= $this->mysqlinst->fetch_row($r3,__LINE__)){
global_edit_master.class.php:			$q="update $this->directory_table set dir_update='".date("dMY-H-i-s")."',dir_time='".time()."',token='".mt_rand(1,mt_getrandmax()). "',dir_temp='$ii' where dir_menu_id='$dir_menu_id' and dir_menu_order='$dir_menu_order'  and dir_sub_menu_order='$dir_sub_menu_order'";  
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		$q="update $this->directory_table set dir_update='".date("dMY-H-i-s")."',dir_time='".time()."',token='".mt_rand(1,mt_getrandmax()). "',dir_sub_menu_order=dir_temp where dir_menu_id='$dir_menu_id' and dir_menu_order='$dir_menu_order'";
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false); 
global_edit_master.class.php:		$q="update $this->directory_table set dir_update='".date("dMY-H-i-s")."',dir_time='".time()."',token='".mt_rand(1,mt_getrandmax()). "',dir_temp2=$i  where dir_menu_id='$dir_menu_id' and dir_menu_order='$dir_menu_order'";   
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);      
global_edit_master.class.php:	$q="update $this->directory_table set dir_update='".date("dMY-H-i-s")."',dir_time='".time()."',token='".mt_rand(1,mt_getrandmax()). "',dir_menu_order=dir_temp2 where dir_menu_id='$dir_menu_id'"; 
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);	 
global_edit_master.class.php:	$q="select $col_fields from $db.$this->master_col_table where col_id=$parent_id";  
global_edit_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:	$row = $this->mysqlinst->fetch_assoc($r,__LINE__);
global_edit_master.class.php:	$q="insert into $this->master_col_table ($col_fields_all) values (";
global_edit_master.class.php:	$q="$q '".date("dMY-H-i-s")."','".time()."','".$this->token_gen()."')"; 
global_edit_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:	$this->copy_col($child_id,$parent_id,'copy',$preserve,$page_ref,$db.'.');
global_edit_master.class.php:	$this->submit_button(); 
global_edit_master.class.php:	$post_target_clone_column_id=(!empty($post_target_clone_column_id))?$post_target_clone_column_id:$this->post_target_clone_column_id;
global_edit_master.class.php:	$q="select blog_id,$post_fields from $this->master_post_table where blog_table_base='".$col_table_base."' and blog_data6='$post_target_clone_column_id' and  blog_unstatus='unclone'";  // echo NL.NL.$q; 
global_edit_master.class.php:	$r2=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	While ($rows2= $this->mysqlinst->fetch_assoc($r2,__LINE__)){
global_edit_master.class.php:			$tablen='uncle_'.$this->pagename.'_id'.$rows2['blog_unclone'];
global_edit_master.class.php:			if($field==='blog_table_base')$value.="'$this->pagename',";
global_edit_master.class.php:		$where="where blog_table='$tablen' and  blog_data1='{$rows2['blog_data1']}' and blog_data6='{$rows2['blog_data6']}' and blog_table_base='$this->pagename' "; // echo NL.NL.'where is: '.$where;
global_edit_master.class.php:		$count=$this->mysqlinst->count_field($this->master_post_table,'blog_id','',false,$where);
global_edit_master.class.php:			$q="insert into $this->master_post_table  ($post_fields,blog_update,blog_time,token) values ($value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')";  // echo NL.NL.$q;
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:	$q="select blog_id,$post_fields from $db$this->master_post_table where blog_col='$parent_id' and blog_type='nested_column' order by blog_order"; //echo NL. $q;     
global_edit_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);  
global_edit_master.class.php:	if(!$this->mysqlinst->affected_rows()){
global_edit_master.class.php:		$this->success[]="Your Column and All Post have been $msg";
global_edit_master.class.php:	While ($rows= $this->mysqlinst->fetch_assoc($r,__LINE__)){   
global_edit_master.class.php:               $this->clone_preserve_unclone($rows['blog_data1'],$col_table_base,$db='',$post_target_clone_column_id); 
global_edit_master.class.php:		$this->message[]='You Did Not select a Column Id to '.$_POST['column_copy_'.$child_id];  
global_edit_master.class.php:			$this->message[]='Select to either Copy/Clone/Move your intended Column in addition to Choosing a Valid Id: '.$_POST['column_copy_id_'.$child_id];  
global_edit_master.class.php:			$this->message[]='Select to either Copy/Clone/Move your intended Column. ';
global_edit_master.class.php:		$this->message[]='COLUMN IDs ARE FOUND AT THE TOP OF COLUMNS  HAVING AN Id: C#.. FORMAT AND INCLUDE THE C Prefix';
global_edit_master.class.php:		$count=$this->mysqlinst->count_field($this->master_col_table,'col_id','',false,$where);
global_edit_master.class.php:			$q="select $col_fields from $this->master_col_table where col_id=$parent_id";
global_edit_master.class.php:			$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			$row = $this->mysqlinst->fetch_assoc($r,__LINE__);
global_edit_master.class.php:			if ($nested&&in_array($parent_id,$this->column_id_array)&&$row['col_table_base']===$this->pagename){ 
global_edit_master.class.php:				if (array_search($parent_id,$this->column_id_array)<=$this->column_level){//	
global_edit_master.class.php:					$this->message[]="Please Choose a distinct Nested Column Tree.  You have choosen to $status Column Id C$parent_id  INTO ITSELF OR ONE OF ITS NESTED COLUMNS Which Appears To Be a Mstake. this column level is $this->column_level";
global_edit_master.class.php:					if  ($row['col_table_base']===$this->pagename){ //intra 
global_edit_master.class.php:								$q="update  $this->master_post_table set  blog_pub=1,blog_data1='$parent_id',blog_data2='',blog_update='".date("dMY-H-i-s")."',blog_time='".time()."' where blog_order='$this->blog_order' and blog_table='$this->blog_table' and blog_type='nested_column' and blog_data2='column_choice'";
global_edit_master.class.php:								$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:								$q="update $this->master_col_table set col_primary=0,col_width='',col_time='".time()."',col_num=0 where col_id='$parent_id'";    
global_edit_master.class.php:								$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:                                        #current correction blog_col=childid  or use = $this->blog_col
global_edit_master.class.php:								if ($this->blog_unstatus!=='unclone'){ 	 
global_edit_master.class.php:									$q="update $this->master_post_table SET blog_unstatus='',blog_col='$this->col_id',blog_data2='',blog_order='$this->blog_order',blog_table='$this->blog_table',token='".mt_rand(1,mt_getrandmax()). "',blog_update='".date("dMY-H-i-s")."',blog_time='".time()."' WHERE blog_data1='$parent_id' AND blog_table_base='$this->pagename' and blog_type='nested_column'";
global_edit_master.class.php:									$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:									if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:										 $q="delete from  $this->master_post_table where blog_order='$this->blog_order' and blog_table='$this->blog_table' and blog_type='nested_column' and blog_data2='column_choice'";exit($q);
global_edit_master.class.php:										$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true); 
global_edit_master.class.php:									$q="update $this->master_post_table SET blog_data1='$parent_id',blog_data2='',blog_pub=1,token='".mt_rand(1,mt_getrandmax()). "',blog_update='".date("dMY-H-i-s")."',blog_time='".time()."' WHERE blog_id=$child_id";   
global_edit_master.class.php:									$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:									if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:										$q="delete from $this->master_post_table   WHERE blog_data1='$parent_id' AND blog_table_base='$this->pagename' and blog_type='nested_column' and blog_id !=$child_id";   
global_edit_master.class.php:										$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);  
global_edit_master.class.php:							$this->nested_col_moved[$parent_id]=true;
global_edit_master.class.php:							$this->success[]="Your Column Id: C$parent_id has been moved";
global_edit_master.class.php:							$q="delete from $this->master_col_table where col_id='$child_id' and col_temp='column_choice'";
global_edit_master.class.php:							$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:                                        $q="update $this->master_col_table set col_num='$this->col_num',col_update='".date("dMY-H-i-s")."',col_time='".time()."',token='".mt_rand(1,mt_getrandmax()). "'  where col_id='$parent_id'";
global_edit_master.class.php:								$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:								$q="delete from $this->master_post_table where blog_data1='$parent_id' and blog_status!='clone' and blog_type='nested_column' and blog_table_base='$this->pagename'";
global_edit_master.class.php:								$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:								$q="update $this->master_col_table set col_num='$this->col_num',col_time='".time()."',col_primary=1,col_width='',col_update='".date("dMY-H-i-s")."',col_time='".time()."',token='".mt_rand(1,mt_getrandmax()). "' where col_id='$parent_id'";
global_edit_master.class.php:								$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:							$this->column_moved[$parent_id]=true;
global_edit_master.class.php:							$where="WHERE blog_table_base='$this->pagename' and blog_type='nested_column' and blog_status='clone' and blog_data1='$parent_id'";
global_edit_master.class.php:							$count=$this->mysqlinst->count_field($this->master_post_table,'blog_id','',false,$where);
global_edit_master.class.php:								$q="delete from  $this->master_post_table where blog_status!='clone' and blog_type='nested_column' and blog_data1='$parent_id' and blog_table_base='".$row['col_table_base']."'";   
global_edit_master.class.php:								$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:							$where="WHERE col_table_base='$this->pagename' and col_primary=1 and col_status='clone' and col_clone_target='$parent_id'";
global_edit_master.class.php:							$count=$this->mysqlinst->count_field($this->master_col_table,'col_id','',false,$where);
global_edit_master.class.php:							$this->message[]='There is  Already a Clone of Column Id'.$parent_id.' From Page Title: '.strtoupper(check_data::table_to_title($row['col_table_base'],__method__,__LINE__,__file__)).' on this Page.  To Be sure you wish to Move the Actual Parent Column and Not the Clone of it, Delete the Clone on this Page First then repeat what you did.  However, To Move the Clone on this page first Delete the clone on this page, then  Clone Column Id'.$parent_id.' Where you want on this page';
global_edit_master.class.php:								 $q="update $this->master_post_table SET blog_data1='$parent_id',blog_data2='',blog_time='".time()."',blog_data2='{$this->pagename}_post_id$parent_id' where blog_order='$this->blog_order' and blog_table='$this->blog_table' and blog_type='nested_column' and blog_data2='column_choice'";  //blog_data2 being/was being used as reference  
global_edit_master.class.php:								$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:								$q="delete from $this->master_col_table where col_id='$child_id' and col_temp='column_choice'";
global_edit_master.class.php:								$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:							$q="update $this->master_col_table set ";
global_edit_master.class.php:								if($field==='col_table_base')$q.="$field='$this->pagename',";
global_edit_master.class.php:								elseif($field==='col_table')$q.="$field='{$this->pagename}_post_id$parent_id',";
global_edit_master.class.php:									else $q.="$field='$this->col_num',";
global_edit_master.class.php:							$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:							$this->move_col($parent_id,'move',$row['col_table_base']);
global_edit_master.class.php:							$this->success[]="Your Column Id: C$parent_id has been moved";
global_edit_master.class.php:						$q="select blog_pub,blog_order,blog_table from $this->master_post_table where blog_data1='$parent_id' and blog_type='nested_column' and blog_status!='clone' ";//removed and blog_unstatus!='unclone'
global_edit_master.class.php:						$rr=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:						if ($this->mysqlinst->affected_rows()){ 
global_edit_master.class.php:							list($blog_pub,$blog_order,$blog_table )=$this->mysqlinst->fetch_row($rr);
global_edit_master.class.php:							$bo_update= ($this->blog_unstatus==='unclone')? ", blog_order='$blog_order',blog_clone_table='$blog_table'":'';//blog table remains unclone so not called up normally but reference to real table made in blog_clone_table instead...
global_edit_master.class.php:							 //$this->message[]=('Mirror Released Columns Should Not Be Directly Cloned.  Choose child or parent available options');
global_edit_master.class.php:							 $this->message[]="no affected rows with $q";
global_edit_master.class.php:						$q="update $this->master_post_table set blog_data1=$parent_id,blog_time='".time()."',blog_status='clone',blog_data2='',token='".mt_rand(1,mt_getrandmax()). "',blog_clone_target='$parent_id',blog_target_table_base='{$row['col_table_base']}' $bo_update  where blog_table='$this->blog_table' and blog_order='$this->blog_order'";  
global_edit_master.class.php:						$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:						$this->success[]="Your Column Id: C$parent_id has been Cloned Here";
global_edit_master.class.php:							elseif($field==='blog_table')$value.="'{$this->pagename}_post_id$child_id',";
global_edit_master.class.php:							elseif($field==='blog_table_base')$value.="'$this->pagename',";
global_edit_master.class.php:						$q="insert into $this->master_post_table  ($post_fields,blog_update,blog_time,token) values ($value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')";   
global_edit_master.class.php:						$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:						$q="update $this->master_col_table set col_temp='',col_time='".time()."',token='".mt_rand(1,mt_getrandmax()). "' where col_id=$child_id";
global_edit_master.class.php:						$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:						$this->success[]="Your Column Id: C$parent_id has been Cloned Here";
global_edit_master.class.php:						$q="update $this->master_col_table set col_temp='',col_status='clone',col_time='".time()."',col_clone_target='$parent_id',col_clone_target_base='{$row['col_table_base']}',token='".mt_rand(1,mt_getrandmax()). "' where col_id=$child_id";
global_edit_master.class.php:						$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:						$this->success[]="Your Column Id: C$parent_id has been Cloned Here";
global_edit_master.class.php:					if ($row['col_table_base']!==$this->pagename)
global_edit_master.class.php:						$this->clone_preserve_unclone($parent_id,$row['col_table_base']);
global_edit_master.class.php:							if($field==='col_table_base')$value.="'$this->pagename',";
global_edit_master.class.php:						$this->mysqlinst->count_field($this->master_col_table,'col_id','',false,'');  
global_edit_master.class.php:						$col_id=$this->mysqlinst->field_inc;
global_edit_master.class.php:						$q="insert into $this->master_col_table ($col_fields,col_id,col_update,col_time,token) values ($value $col_id,'".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')"; 
global_edit_master.class.php:						$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:					$q="update $this->master_col_table set ";
global_edit_master.class.php:						if($field==='col_table_base')$q.="$field='$this->pagename',";
global_edit_master.class.php:						elseif($field==='col_table')$q.="$field='{$this->pagename}_post_id$col_id',";
global_edit_master.class.php:						elseif($field==='col_style')$q.="$field='".$this->back_image_copy($row['col_style'])."',"; 
global_edit_master.class.php:						elseif($field==='col_grp_bor_style')$q.="$field='".$this->back_image_copy($row['col_grp_bor_style'])."',";
global_edit_master.class.php:					$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true); 
global_edit_master.class.php:					$this->copy_col($col_id,$parent_id,$status,$preserve);
global_edit_master.class.php:						$q="update $this->master_post_table set blog_data1='$col_id',blog_data2='',blog_time='".time()."',token='".mt_rand(1,mt_getrandmax()). "' where blog_table='$this->blog_table' and blog_order='$this->blog_order'";
global_edit_master.class.php:						$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:						$q="update $this->master_col_table set col_temp='',col_time='".time()."',token='".mt_rand(1,mt_getrandmax()). "' where col_id='$col_id'";
global_edit_master.class.php:						$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:					$this->submit_button(); 
global_edit_master.class.php:			$this->message[]=$msg;
global_edit_master.class.php:		printer::alertx('<p class="editbackground editfont redAlert floatleft"><input type="checkbox" name="delete_blog['.$this->blog_table.']['.$this->blog_order.']" value="delete" onchange="edit_Proc.oncheck(\'delete_blog['.$this->blog_table.']['.$this->blog_order.']\',\'THIS ENTRY WILL BE DELETED WHEN YOU HIT CHANGE, UNCHECK TO CANCEL\')" >'.$delete_msg.'</p>');
global_edit_master.class.php:		echo '<p class="left neg"><input type="checkbox" name="deletecolumn['.$this->col_table.']" value="delete" onchange="edit_Proc.oncheck(\'deletecolumn['.$this->col_table.']\',\'Deleting This Column Choice Option, UNCHECK TO CANCEL \');" >Delete This Column Choice Option</p>';
global_edit_master.class.php:	printer::printx('<p class="editcolor editbackground editfont" title="Be Sure to Enter the Column Id  Which Begin with a C ie C10.  Do Not Use the Column# which simply refers to the Column Display Order Within the Page. Both column Ids and #s are displayed at the top of each Column"><input style="background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text" name="column_copy_id_'.$child_id.'"  size="5" maxlength="8">Enter the <span class="info">Column Id </span><span class="red">(Not Column#)</span> that you wish to Copy/Move/Clone</p>');
global_edit_master.class.php:	$this->show_more('Import Column','','editbackround small highlight ','Import a column from template master tables or a database');
global_edit_master.class.php:	$this->show_close('Import Column');
global_edit_master.class.php:	$this->submit_button(); 
global_edit_master.class.php:	if (isset($_POST['post_copy_'.$this->blog_id])&&!isset($_POST['post_copy_id_'.$this->blog_id])){
global_edit_master.class.php:		$this->message[]='You Did Not select a Post Id to '.$_POST['post_copy_'.$this->blog_id];  
global_edit_master.class.php:	elseif (isset($_POST['post_copy_id_'.$this->blog_id])&&!isset($_POST['post_copy_'.$this->blog_id])){
global_edit_master.class.php:		if (is_numeric($_POST['post_copy_id_'.$this->blog_id])){
global_edit_master.class.php:			$this->message[]='Select to either Move Copy or Clone Your intended post in addition to Choosing a Valid Id '.$_POST['post_copy_id_'.$this->blog_id];  
global_edit_master.class.php:			$this->message[]='Select to either Move Copy or Clone your intended post. <br> ';
global_edit_master.class.php:	elseif (isset($_POST['post_copy_id_'.$this->blog_id])&&strtolower(substr(trim($_POST['post_copy_id_'.$this->blog_id]),0,1))!=='p'){
global_edit_master.class.php:		$this->message[]='Post IDs Are FOUND AT THE TOP OF Each Post ie. The Number having the ID: P#.. FORMAT. BE SURE TO INCLUDE THE P PREFIX ';
global_edit_master.class.php:	elseif (isset($_POST['post_copy_id_'.$this->blog_id])){  
global_edit_master.class.php:		$parent_id=substr_replace(trim($_POST['post_copy_id_'.$this->blog_id]),'',0,1);    
global_edit_master.class.php:		$status=$_POST['post_copy_'.$this->blog_id];   
global_edit_master.class.php:		$count=$this->mysqlinst->count_field($this->master_post_table,'blog_id','',false,$where);
global_edit_master.class.php:			$q="select $post_fields from $this->master_post_table where blog_id=$parent_id";
global_edit_master.class.php:			$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			$row = $this->mysqlinst->fetch_assoc($r,__LINE__);
global_edit_master.class.php:				$this->message[]=$msg;
global_edit_master.class.php:				$q="update $this->master_post_table as c, $this->master_post_table as p set ";
global_edit_master.class.php:                                   $q.="c.blog_data1='".$this->image_copy('image',$row['blog_data1'])."', ";//duplicate image
global_edit_master.class.php:                                   $q.="c.blog_data1='".$this->image_copy('auto_slide',$row['blog_data1'])."', ";//duplicate slide iamges
global_edit_master.class.php:                                   $q.="c.blog_data1='".$this->image_copy('gallery_copy',$row['blog_data1'],$row['blog_table_base'])."', ";//duplicate gallery
global_edit_master.class.php:                                   $q.="c.blog_data1='".$this->navigation_copy($row['blog_data1'])."',";//duplicate nav
global_edit_master.class.php:                         elseif ($field==='blog_style')$q.="c.blog_style='".$this->back_image_copy($row['blog_style'])."', "; 
global_edit_master.class.php:                         elseif ($field==='blog_data2')$q.="c.blog_data2='".$this->back_image_copy($row['blog_data2'])."', "; 
global_edit_master.class.php:                         elseif ($field==='blog_data3')$q.="c.blog_data3='".$this->back_image_copy($row['blog_data3'])."', "; 
global_edit_master.class.php:                         elseif ($field==='blog_data4')$q.="c.blog_data4='".$this->back_image_copy($row['blog_data4'])."', "; 
global_edit_master.class.php:                         elseif ($field==='blog_data5')$q.="c.blog_data5='".$this->back_image_copy($row['blog_data5'])."', ";
global_edit_master.class.php:                         elseif ($field==='blog_data6')$q.="c.blog_data6='".$this->back_image_copy($row['blog_data6'])."', ";
global_edit_master.class.php:                         elseif ($field==='blog_data7')$q.="c.blog_data7='".$this->back_image_copy($row['blog_data7'])."', ";
global_edit_master.class.php:				$q.="c.blog_status='copy' where c.blog_id='$this->blog_id' and p.blog_id='$parent_id'";    
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:				if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:					$this->copy_comment($parent_id,$this->blog_id);
global_edit_master.class.php:					$this->success[]="Your post Id: P$parent_id has been copied to P$this->blog_id!";
global_edit_master.class.php:				$q="update $this->master_post_table as c, $this->master_post_table as p set ";
global_edit_master.class.php:                              if ($row['blog_type']==='gallery'&&$row['blog_table_base']!==$this->pagename){
global_edit_master.class.php:                                   $q.="c.blog_data1='".$this->image_copy('gallery_move',$row['blog_data1'],$row['blog_table_base'])."', ";//duplicate gallery	 
global_edit_master.class.php:				$q.="c.blog_status='move' where c.blog_id='$this->blog_id' and p.blog_id='$parent_id'";   
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);  
global_edit_master.class.php:				$this->success[]="Your post Id: P$parent_id has been copied!";
global_edit_master.class.php:				$q="delete from $this->master_post_table where blog_id='$parent_id'";
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:				$q="update $this->master_post_table set blog_id='$parent_id' where blog_id='$this->blog_id'";//keep original
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);  //blog_id   updating can be changed aound the other way to update directly...  as time permits
global_edit_master.class.php:				$this->success[]="Your post Id: P$parent_id has been moved !";
global_edit_master.class.php:				$this->blog_moved[$parent_id]=true;	
global_edit_master.class.php:				$bo_update= ($this->blog_unstatus==='unclone')? ', blog_order='.$row['blog_order'].",blog_clone_table='".$row['blog_table']."'":'';
global_edit_master.class.php:				$q="update $this->master_post_table set blog_status='clone',blog_pub=1,blog_data2='',blog_type='',blog_clone_target='$parent_id',token='".mt_rand(1,mt_getrandmax()). "' $bo_update where blog_id='$this->blog_id'";
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:				$this->success[]="Your post Id: P$parent_id has been Cloned";
global_edit_master.class.php:		else $this->message[]="Post P$parent_id was not found";
global_edit_master.class.php:	$this->delete_option();
global_edit_master.class.php:	$this->show_more('About Copy/Clone/Move Choices','noback','','',400);
global_edit_master.class.php:	$this->show_close('coluimn choices');//coluimn choices
global_edit_master.class.php:	printer::printx('<p class="editcolor editbackground editfont"><input type="radio" name="post_copy_'.$this->blog_id.'" size="8" maxlength="8" value="copy">Copy Post</p>');
global_edit_master.class.php:	printer::printx('<p class="editcolor editbackground editfont"><input type="radio" name="post_copy_'.$this->blog_id.'"  size="8" maxlength="8" value="clone">Clone post Here</p>');
global_edit_master.class.php:	printer::printx('<p class="editcolor editbackground editfont"><input type="radio" name="post_copy_'.$this->blog_id.'"  size="8" maxlength="8" value="move">Move post Here</p>');
global_edit_master.class.php:	printer::printx('<p class="editcolor editbackground editfont" title="Be Sure to Use the Post Id Which Begins with a P ie P42.  Do Not Use the  Post# which simply refer to the Post Display Order Within the Column. Post Ids and #s are displayed at the top of each post"><input  style="background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text" name="post_copy_id_'.$this->blog_id.'"  size="8" maxlength="8">Enter the  <span class="info">Post Id</span> <span class="red">(Not Post#) </span>that you wish to Copy Move or Clone</p>');
global_edit_master.class.php:	$this->submit_button();  
global_edit_master.class.php:	$q="select blog_id,$post_fields from $this->master_post_table where blog_col=$parent_id";    
global_edit_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);  
global_edit_master.class.php:	if(!$this->mysqlinst->affected_rows())return;
global_edit_master.class.php:	While ($rows= $this->mysqlinst->fetch_assoc($r,__LINE__)){
global_edit_master.class.php:		$q="update $this->master_post_table set ";
global_edit_master.class.php:					$q.="$field='".$this->image_copy('gallery_move',$rows['blog_data1'],$rows['blog_table_base'])."',";//change gall table ref etc.
global_edit_master.class.php:			elseif($field==='blog_table_base')$q.="$field='$this->pagename',";
global_edit_master.class.php:			elseif($field==='blog_table')$q.="$field='{$this->pagename}_post_id$parent_id',";
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			$q="select blog_id,blog_unclone,blog_type,blog_data1  from $this->master_post_table where blog_table_base='$table_base' and blog_data6='$data6' and  blog_unstatus='unclone'";
global_edit_master.class.php:			$r2=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:			While ($rows2= $this->mysqlinst->fetch_assoc($r2,__LINE__)){
global_edit_master.class.php:				$tablen='uncle_'.$this->pagename.'_id'.$rows2['blog_unclone'];
global_edit_master.class.php:				$q="update $this->master_post_table set blog_table_base='$this->pagename',blog_table='$tablen', blog_update='".date("dMY-H-i-s")."',blog_time='".time()."' where blog_id='$blog_id'";   
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:					$q="select $col_fields from $this->master_col_table where col_id=".$rows2['blog_data1'];   
global_edit_master.class.php:					$r4=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:					$row3 = $this->mysqlinst->fetch_assoc($r4,__LINE__); 
global_edit_master.class.php:					$q="update $this->master_col_table set ";
global_edit_master.class.php:						if($field==='col_table_base')$q.="$field='$this->pagename',";
global_edit_master.class.php:						elseif($field==='col_table')$q.="$field='{$this->pagename}_post_id{$rows2['blog_data1']}',";
global_edit_master.class.php:					$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);	
global_edit_master.class.php:					$this->move_col($rows2['blog_data1'],'move',$table_base);
global_edit_master.class.php:			$q="select $col_fields from $this->master_col_table where col_id=".$rows['blog_data1'];   
global_edit_master.class.php:			$r3=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			$row = $this->mysqlinst->fetch_assoc($r3,__LINE__); 
global_edit_master.class.php:			$q="update $this->master_col_table set ";
global_edit_master.class.php:				if($field==='col_table_base')$q.="$field='$this->pagename',";
global_edit_master.class.php:				elseif($field==='col_table')$q.="$field='{$this->pagename}_post_id{$rows['blog_data1']}',";
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			$this->move_col($rows['blog_data1'],$status,$table_base);
global_edit_master.class.php:	(empty($n_table))&&$n_table=$this->pagename;
global_edit_master.class.php:		$this->mysqlinst->count_field($this->directory_table,'dir_menu_id','',false,'');
global_edit_master.class.php:		$new_dir_ref=$this->mysqlinst->field_inc;
global_edit_master.class.php:		$q="select $dir_fields from $db.$this->directory_table where dir_menu_id='$nav_id' ";   
global_edit_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		if(!$this->mysqlinst->affected_rows()){
global_edit_master.class.php:			$this->message[]='No Menu Id Copied: '.$q;
global_edit_master.class.php:		While ($rows= $this->mysqlinst->fetch_assoc($r,__LINE__)){
global_edit_master.class.php:			$q="insert into  $this->directory_table  ($dir_fields,dir_update,dir_time,token) values ($value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')";    
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:	$count=$this->mysqlinst->count_field($this->comment_table,'com_id','',false,"where com_blog_id='$parent_id'");   
global_edit_master.class.php:	$q="select $com_fields from $this->comment_table where com_blog_id='$parent_id' ";  
global_edit_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	if(!$this->mysqlinst->affected_rows()){  
global_edit_master.class.php:	While ($rows= $this->mysqlinst->fetch_assoc($r,__LINE__)){
global_edit_master.class.php:		$q="insert into  $this->comment_table  ($com_fields,com_update,com_time,token) values ($value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')";     
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		$this->instruct[]='<span style="color:red">Caution:</span> Comments were also  Copied';
global_edit_master.class.php:	$this->list[]=$style_implode;
global_edit_master.class.php:		if (!copy(Cfg_loc::Root_dir.Cfg::Background_image_dir.$oldfile,Cfg_loc::Root_dir.Cfg::Background_image_dir.$newfile))$this->message[]=printer::alert_neg("CopY Error ".Cfg_loc::Root_dir.Cfg::Background_image_dir.$oldfile .'=>'.Cfg_loc::Root_dir. Cfg::Background_image_dir.$newfile ,1.2,true);
global_edit_master.class.php:	(empty($n_table))&&$n_table=$this->pagename;
global_edit_master.class.php:		$q="select gall_ref from  $this->master_gall_table where gall_table='$n_table'";  
global_edit_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false); 
global_edit_master.class.php:		if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:			while(list($gall_ref)=$this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:		$q="update $this->master_gall_table set gall_update='".date("dMY-H-i-s")."', gall_ref='$gall_ref', gall_table='$n_table' where gall_ref='$field_val'"; 
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		$q="select gall_ref from $this->master_gall_table where gall_table='$n_table'"; 
global_edit_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false); 
global_edit_master.class.php:		if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:			while(list($gall_ref)=$this->mysqlinst->fetch_row($r,__LINE__)){
global_edit_master.class.php:			While (in_array($this->pagename.'_'.$n,$tbn_arr)){
global_edit_master.class.php:		$q="select pic_id,$gall_fields from $db.$this->master_gall_table where gall_ref='$field_val'";   
global_edit_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		if(!$this->mysqlinst->affected_rows())return;
global_edit_master.class.php:		While ($rows= $this->mysqlinst->fetch_assoc($r,__LINE__)){ 
global_edit_master.class.php:			$q="insert into $this->master_gall_table  ($gall_fields,gall_update,gall_time,token) values ($value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')";    
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:	$table_base=(empty($table_base))?$this->pagename:$table_base;
global_edit_master.class.php:	$q="select blog_id,$post_fields from $db$this->master_post_table where blog_col=$parent_id order by blog_order";     
global_edit_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);  
global_edit_master.class.php:	if(!$this->mysqlinst->affected_rows())return;
global_edit_master.class.php:	While ($rows= $this->mysqlinst->fetch_assoc($r,__LINE__)){   
global_edit_master.class.php:			$q="select blog_id,$post_fields from $db$this->master_post_table where blog_id=".$rows['blog_clone_target'];
global_edit_master.class.php:			$rget=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:			if(!$this->mysqlinst->affected_rows())continue;
global_edit_master.class.php:			$rows= $this->mysqlinst->fetch_assoc($rget,__LINE__);//here we substitute the holder record for the cloned record without disrupting the while statement!!
global_edit_master.class.php:					else $value.="'".$this->image_copy('image',$rows['blog_data1'])."',";//duplicate image
global_edit_master.class.php:					else $value.="'".$this->image_copy('auto_slide',$rows['blog_data1'],$db)."',";//duplicate image
global_edit_master.class.php:					else $value.="'".$this->image_copy('gallery_copy',$rows['blog_data1'],$rows['blog_table_base'],$table_base,$db)."',";//duplicate image
global_edit_master.class.php:					else $value.="'".$this->navigation_copy($rows['blog_data1'],$db)."',";//duplicate image
global_edit_master.class.php:			elseif ($field==='blog_style')$value.="'".$this->back_image_copy($rows['blog_style'])."',"; 
global_edit_master.class.php:			elseif ($field==='blog_data2')$value.="'".$this->back_image_copy($rows['blog_data2'])."',"; 
global_edit_master.class.php:			elseif ($field==='blog_data3')$value.="'".$this->back_image_copy($rows['blog_data3'])."',"; 
global_edit_master.class.php:			elseif ($field==='blog_data4')$value.="'".$this->back_image_copy($rows['blog_data4'])."',"; 
global_edit_master.class.php:			elseif ($field==='blog_data5')$value.="'".$this->back_image_copy($rows['blog_data5'])."',";
global_edit_master.class.php:			elseif ($field==='blog_data6')$value.="'".$this->back_image_copy($rows['blog_data6'])."',";
global_edit_master.class.php:			elseif ($field==='blog_data7')$value.="'".$this->back_image_copy($rows['blog_data7'])."',";
global_edit_master.class.php:		$q="insert into $this->master_post_table  ($post_fields,blog_update,blog_time,token) values ($value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')";  
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		$this->mysqlinst->count_field($this->master_post_table,'blog_id','',false,'');  
global_edit_master.class.php:		$blog_id=$this->mysqlinst->fieldmax;   
global_edit_master.class.php:		$this->copy_comment($rows['blog_id'],$blog_id,$db);
global_edit_master.class.php:			$q="select blog_id,$post_fields from $this->master_post_table where blog_table_base='".$rows['blog_table_base']."' and blog_data6='$post_target_clone_column_id' and  blog_unstatus='unclone'";    
global_edit_master.class.php:			$r2=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:			While ($rows2= $this->mysqlinst->fetch_assoc($r2,__LINE__)){
global_edit_master.class.php:				$q="insert into $this->master_post_table  ($post_fields,blog_update,blog_time,token) values ($value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')";   
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:				$this->mysqlinst->count_field($this->master_post_table,'blog_id','',false,'');  
global_edit_master.class.php:				$blog_id=$this->mysqlinst->fieldmax;
global_edit_master.class.php:					$q="select $col_fields from $this->master_col_table where col_id=".$rows2['blog_data1'];    
global_edit_master.class.php:					$r4=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:					$row3 = $this->mysqlinst->fetch_assoc($r4,__LINE__);
global_edit_master.class.php:						elseif($field==='col_style')$value.="'".$this->back_image_copy($row3['col_style'])."',"; 
global_edit_master.class.php:						elseif($field==='col_grp_bor_style')$value.="'".$this->back_image_copy($row3['col_grp_bor_style'])."',"; 
global_edit_master.class.php:					$q="insert into $this->master_col_table ($col_fields,col_update,col_time,token) values ($value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')"; 
global_edit_master.class.php:					$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:                         $this->mysqlinst->count_field($this->master_col_table,'col_id','',false,'');  
global_edit_master.class.php:					$col_id=$this->mysqlinst->fieldmax;
global_edit_master.class.php:					$q="update $this->master_col_table set col_table='{$table_base}_post_id$col_id' where col_id='$col_id'"; 
global_edit_master.class.php:					$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true); 
global_edit_master.class.php:					$q="update $this->master_post_table set token='".mt_rand(1,mt_getrandmax()). "',blog_data1='$col_id' where blog_id=$blog_id";   
global_edit_master.class.php:					$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:                         $this->copy_col($col_id,$rows2['blog_data1'],'copy',$preserve,$table_base);
global_edit_master.class.php:			$q="select $col_fields from $db$this->master_col_table where col_id=".$rows['blog_data1'];   
global_edit_master.class.php:			$r3=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			$row = $this->mysqlinst->fetch_assoc($r3,__LINE__);
global_edit_master.class.php:				elseif($field==='col_style')$value.="'".$this->back_image_copy($row['col_style'])."',"; 
global_edit_master.class.php:				elseif($field==='col_grp_bor_style')$value.="'".$this->back_image_copy($row['col_grp_bor_style'])."',"; 
global_edit_master.class.php:			$q="insert into $this->master_col_table ($col_fields,col_update,col_time,token) values ($value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')"; 
global_edit_master.class.php:               $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true); 
global_edit_master.class.php:			$this->mysqlinst->count_field($this->master_col_table,'col_id','',false,'');  
global_edit_master.class.php:			$col_id=$this->mysqlinst->fieldmax;
global_edit_master.class.php:			$q="update $this->master_col_table set col_table='{$table_base}_post_id$col_id' where col_id='$col_id'"; 
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true); 
global_edit_master.class.php:			$q="update $this->master_post_table set token='".mt_rand(1,mt_getrandmax()). "',blog_data1='$col_id' where blog_id=$blog_id";   
global_edit_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true); 
global_edit_master.class.php:			$this->copy_col($col_id,$rows['blog_data1'],$status,$preserve,$table_base,$db);
global_edit_master.class.php:		$this->success[]="Your Column and All Post have been $msg";
global_edit_master.class.php:	if (isset($_POST['menu_start_new'][$this->blog_id]))  {
global_edit_master.class.php:		$this->mysqlinst->count_field($this->directory_table,'dir_menu_id','',false,'');
global_edit_master.class.php:		$dir_menu_id=$this->mysqlinst->field_inc;
global_edit_master.class.php:		$dir_ref=$_POST['menu_start_new'][$this->blog_id];
global_edit_master.class.php:		$q="select dir_filename, dir_title from $this->directory_table where dir_ref='$dir_ref' limit 1";
global_edit_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:		if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:			list($dir_filename,$dir_title)=$this->mysqlinst->fetch_row($r,__LINE__);
global_edit_master.class.php:			$q="select page_filename,page_title from $this->master_page_table where page_ref='$dir_ref'";
global_edit_master.class.php:			$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:			list($dir_filename,$dir_title)=$this->mysqlinst->fetch_row($r,__LINE__);
global_edit_master.class.php:		$q="insert into $this->directory_table (dir_menu_id,dir_menu_order,dir_sub_menu_order,dir_filename,dir_title,dir_ref,dir_menu_style, dir_gall_table,dir_blog_table,dir_menu_type,dir_gall_type,dir_menu_opts,dir_hide_sub_menu,dir_external,dir_internal,dir_is_gall,dir_temp,dir_temp2,dir_update,dir_time,token) values
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		$q="update $this->master_post_table set blog_data1='$dir_menu_id' where blog_id=$this->blog_id";  
global_edit_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:		$this->success[]=$msg;
global_edit_master.class.php:	elseif  ((isset($_POST['create_external_link_name'][$this->blog_id])&&!empty($_POST['create_external_link_name'][$this->blog_id]))||(isset($_POST['create_external_link_ur'][$this->blog_id])&&!empty($_POST['create_external_link_ur'][$this->blog_id]))){
global_edit_master.class.php:		if  ((isset($_POST['create_external_link_name'][$this->blog_id])&&!empty($_POST['create_external_link_name'][$this->blog_id]))&&(isset($_POST['create_external_link_ur'][$this->blog_id])&&!empty($_POST['create_external_link_ur'][$this->blog_id]))){
global_edit_master.class.php:			$external_link='http://'.str_replace(array('http://','http:/','http:','http','http//:','http//'),'',$_POST['create_external_link_ur'][$this->blog_id]);
global_edit_master.class.php:			$this->mysqlinst->count_field($this->directory_table,'dir_menu_id','',false,'');
global_edit_master.class.php:			$dir_menu_id=$this->mysqlinst->field_inc;
global_edit_master.class.php:			$dir_title=process_data::clean_title($_POST['create_external_link_name'][$this->blog_id]);
global_edit_master.class.php:					$q="insert into $this->directory_table (dir_menu_id,dir_menu_order,dir_sub_menu_order,dir_filename,dir_title,dir_ref,dir_menu_style,dir_gall_table,dir_blog_table,dir_menu_type,dir_gall_type,dir_menu_opts,dir_hide_sub_menu,dir_external,dir_internal,dir_is_gall,dir_temp,dir_temp2,dir_update,dir_time,token) values
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:				$q="update $this->master_post_table set blog_data1='$dir_menu_id' where blog_id=$this->blog_id";  
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_edit_master.class.php:				$this->message[]=$msg;
global_edit_master.class.php:			$this->message[]=($msg);
global_edit_master.class.php:		list($width,$height)=$this->get_size($picname,$final_path);
global_edit_master.class.php:			$this->message[]='<img src="'.$final_path.$picname.'" class="floatleft" height="50" ><p class="pl10 maxwidth400 small floatleft">Not Finding the original uploaded image for resizing  photo '.$picname.' in:'.$msg.' </p>';  
global_edit_master.class.php:			$this->message[]='<img src="'.$final_path.$picname.'" class="floatleft" height="50" ><p class="pl10 maxwidth400 small floatleft">Tech Notice: Missing Orignal uploaded image replaced by resized page image :'.$picname.' in:'.$msg;
global_edit_master.class.php:	list($up_width,$up_height)=$this->get_size($picname,$storage_path);
global_edit_master.class.php:			$this->message[]='<img src="'.$storage_path.$picname.'" class="floatleft " height="50" ><p class="pl10 maxwidth400 small floatleft redAlertbackground white">This 
global_edit_master.class.php:		'.$this->image_resize_msg.' uploaded photo '.$picname.' in Post Id'.$this->blog_id.' has a limited width and isn&#39;t large enough for the space available. Replace with a larger image, decrease the available width setting, delete it, leave as is, etc.</p>'; 
global_edit_master.class.php:		list($width,$height)=$this->get_size($picname,$final_path);
global_edit_master.class.php:			$this->message[]='<img src="'.$final_path.$picname.'" class="floatleft" height="50" ><p class="pl10 maxwidth400 small floatleft redAlertbackground white">This 
global_edit_master.class.php:			'.$this->image_resize_msg.' uploaded photo '.$picname.' in Post Id'.$this->blog_id.' has a limited width and isn&#39;t large enough for the space available. Replace with a larger image, decrease the available width setting, delete it, leave as is, etc.</p>'; 
global_edit_master.class.php:			$this->message[]='<img src="'.$final_path.$picname.'" class="floatleft" height="50" ><p class="pl10 maxwidth400 small floatleft redAlertbackground white">This '.$this->image_resize_msg.' photo '.$picname.' in Post Id'.$this->blog_id.' is resized to the full orginal upload width although still not large enough for the full space available. Replace with a larger image, decrease the available width setting, delete it, leave as is, etc.</p>';
global_edit_master.class.php:			$this->instruct[]='<img src="'.$final_path.$picname.'" class="floatleft" height="40" ><p class="pl10 maxwidth400 small floatleft redAlertbackground white">This '.$this->image_resize_msg.' Original Uploaded Image '.$picname.' in Post Id'.$this->blog_id.' is not large enough for the full space available.</p>';
global_edit_master.class.php:	$this->instruct[]='Hit the Browser Refresh Button <img src="../refresh_button.png" alt="refresh button" width="20" height="20"> to Insure All New Image Widths are Updated!!'; 
global_edit_master.class.php:		$post_table=($import==='import_gallery')?$this->master_post_table:$this->master_post_data_table;
global_edit_master.class.php:				$q="select gall_ref from $this->master_gall_table where master_gall_status !='master_gall' and gall_ref='$value'";
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:				if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:					$q="update $post_table set blog_data1='$value' where blog_id='$prefix$blog_id' and blog_type='gallery' and blog_table_base='$this->pagename'";  
global_edit_master.class.php:					$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:					if ($this->mysqlinst->affected_rows()){
global_edit_master.class.php:						$q="update $this->master_gall_table set gall_table='$this->pagename' where master_gall_status !='master_gall' and gall_ref='$value'"; 
global_edit_master.class.php:						$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:				$q="update $post_table set blog_data1='' where blog_id='$prefix$blog_id' and blog_table_base='$this->pagename' and blog_type='gallery'";
global_edit_master.class.php:				$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_edit_master.class.php:	$css_id=($this->is_page)?$this->pagename:(($this->is_column)?$this->col_table:$this->dataCss);
global_edit_master.class.php:     (Sys::Deltatime)&&$this->deltatime->delta_log(__LINE__.' @ '.__method__.'  ');
global_edit_master.class.php:     foreach($this->hidden_array as $render){
global_edit_master.class.php:	echo '<input type="hidden" name="sess_token" value="'.$this->sess->sess_token.'">';
global_edit_master.class.php:     $this->show_more('Edit Mode Style','asis',$this->column_lev_color.' smallest  editbackground editfont button'.$this->column_lev_color);
global_edit_master.class.php:	$this->print_wrap('editor appearance');
global_edit_master.class.php:	$this->show_more('Configure Editor Colors','noback');
global_edit_master.class.php:	$this->print_wrap('Editor colorWrap',true);
global_edit_master.class.php:	if($this->page_options[$this->page_editor_choice_index]==='dark'){
global_edit_master.class.php:	printer::alertx('<p class="smaller  editcolor left editbackground editfont" style="padding: 4px 4px 4px 5px; border-width: 3px 0px 3px 0px;  border-style:solid; border-color: #'. $this->page_options[$this->page_darkeditor_color_index].';cursor:pointer;background:#'.$this->page_options[$this->page_darkeditor_background_index].';color:#'.$this->page_options[$this->page_darkeditor_color_index].';">  #<input onclick="jscolor.installByClassName(\'darkeditorbackcolor\');" style="cursor:pointer;background:#'.$this->page_options[$this->page_darkeditor_background_index].';color:#'.$this->page_options[$this->page_darkeditor_color_index].';" type="text"  name="page_options['.$this->page_darkeditor_background_index.']"   value="'.$this->page_options[$this->page_darkeditor_background_index].'" size="6" maxlength="6" class="darkeditorbackcolor {refine:false}">Change  Background Color of Dark Theme Editor</p>');
global_edit_master.class.php:	printer::alertx('<p class="fs1'.$this->page_options[$this->page_darkeditor_color_index].' smaller  editcolor left editbackground editfont" style="padding: 4px 4px 4px 5px; border-width: 3px 0px 3px 0px;  border-style:solid; border-color: #'. $this->page_options[$this->page_darkeditor_color_index].'; cursor:pointer;background:#'.$this->page_options[$this->page_darkeditor_background_index].';color:#'.$this->page_options[$this->page_darkeditor_color_index].';">  #<input onclick="jscolor.installByClassName(\'darkeditorcolor\');" style="cursor:pointer;background:#'.$this->page_options[$this->page_darkeditor_background_index].';color:#'.$this->page_options[$this->page_darkeditor_color_index].';" type="text"  name="page_options['.$this->page_darkeditor_color_index.']"   value="'.$this->page_options[$this->page_darkeditor_color_index].'" size="6" maxlength="6" class="darkeditorcolor {refine:false}">Change Editor Misc. Text Colors of Dark Theme </p>');
global_edit_master.class.php:	printer::alertx('<p class=" smaller  editcolor left editfont" style="padding: 4px 4px 4px 5px; border-width: 3px 0px 3px 0px;  border-style:solid; border-color: #'. $this->page_options[$this->page_lighteditor_color_index].';cursor:pointer;background:#'.$this->page_options[$this->page_lighteditor_background_index].';color:#'.$this->page_options[$this->page_lighteditor_color_index].';"> #<input onclick="jscolor.installByClassName(\'lighteditorbackcolor\');" style="cursor:pointer;background:#'.$this->page_options[$this->page_lighteditor_background_index].';color:#'.$this->page_options[$this->page_lighteditor_color_index].';" type="text"  name="page_options['.$this->page_lighteditor_background_index.']"   value="'.$this->page_options[$this->page_lighteditor_background_index].'" size="6" maxlength="6" class="lighteditorbackcolor {refine:false}">Change Background Color of Editor Light Theme </p>');
global_edit_master.class.php:	printer::alertx('<p class="smaller  left editfont" style="padding: 4px 4px 4px 5px; border-width: 3px 0px 3px 0px;  border-style:solid; border-color: #'. $this->page_options[$this->page_lighteditor_color_index].';cursor:pointer;background:#'.$this->page_options[$this->page_lighteditor_background_index].';color:#'.$this->page_options[$this->page_lighteditor_color_index].';">#<input onclick="jscolor.installByClassName(\'lighteditorcolor\');" style="cursor:pointer;background:#'.$this->page_options[$this->page_lighteditor_background_index].';color:#'.$this->page_options[$this->page_lighteditor_color_index].';" type="text"  name="page_options['.$this->page_lighteditor_color_index.'];"   value="'.$this->page_options[$this->page_lighteditor_color_index].'" size="6" maxlength="6" class="lighteditorcolor {refine:false}">Change Misc. Colors of Light Theme Editor</p>');
global_edit_master.class.php:	printer::alert('<input type="radio" name="page_options['.$this->page_editor_choice_index.']" '.$checked1.' value="light">Use Light Editor');
global_edit_master.class.php:	printer::alert('<input type="radio" name="page_options['.$this->page_editor_choice_index.']" '.$checked2.' value="dark">Use Dark Editor');
global_edit_master.class.php:	$this->show_more('Test View '.$editorref,'noback');
global_edit_master.class.php:	$this->print_wrap('test color view');
global_edit_master.class.php:	printer::printx('<p class="smaller floatleft editbackground editfont fs1info" style="margin:1px;width:110px; height:100px;color:#'.$this->info.'">Info color is the Information Text Color</p><p class="smaller floatleft editbackground editfont fs1redAlert" style="margin:1px;width:110px; height:100px;color:#'.$this->redAlert.'">redAlert is an Alert Text Message Color </p><p class="smallest floatleft editbackground editfont fs1pos" style="margin:1px;width:110px; height:100px;color:#'.$this->pos.'">Pos acts as a Positive Alert Color and Used to indicate Primary Column text and Borders</p>');
global_edit_master.class.php:	foreach ($this->color_order_arr as $color){
global_edit_master.class.php:		echo '<p class="smaller floatleft editbackground editfont fs1'.$color.'" style="margin:1px; width:100px; height:100px;color:#'.$this->$color.'">This Color is '.$color.' @ Col Level: #'.$x.'</p>';
global_edit_master.class.php:	$this->close_print_wrap('test color view');	
global_edit_master.class.php:	$this->show_close('Test View '.$editorref.' Editor Text Colors');
global_edit_master.class.php:	$this->show_more('Rearange '.$editorref.' Column Colors','noback');
global_edit_master.class.php:	$this->print_wrap('rearrange color view');
global_edit_master.class.php:	print'<p class="'.$this->column_lev_color.' large fsminfo floatleft left editbackground editfont">Drag color box to sort the color order. </p>';
global_edit_master.class.php:		echo '<div class="editbackground editfont editcolor"><ul id="sortPageEditor" class="nolist sortEdit" data-id="'.$this->pagename.'" data-inc="1">';
global_edit_master.class.php:		foreach ($this->color_order_arr as $key => $color){ 
global_edit_master.class.php:	$this->close_print_wrap('rearrange color view');
global_edit_master.class.php:	$this->show_close('Rearange '.$editorref.' Column Colors');
global_edit_master.class.php:	$this->show_more('Color adjust '.$editorref.' Column Colors','noback');
global_edit_master.class.php:	$this->print_wrap('adjust color view');
global_edit_master.class.php:	foreach ($this->color_order_arr as $color){
global_edit_master.class.php:		printer::alertx('<p class="smaller '.$color.' left editbackground editfont"> Color Adjust: #<input onclick="jscolor.installByClassName(\'color_array_'.$this->{$color.'_index'}.'\');" style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text" id="color_array_'.$this->{$color.'_index'}.'" name="'.$page_color_value_property.'['.$this->{$color.'_index'}.']"   value="'.$this->$color.'" size="6" maxlength="6" class="color_array_'.$this->{$color.'_index'}.' {refine:false}">'.$color.'</p>'); 
global_edit_master.class.php:	$this->close_print_wrap('adjust color view');
global_edit_master.class.php:   $this->show_close('Color adjust '.$editorref.' Column Colors');
global_edit_master.class.php:	$this->show_more('Reset Colors After Adding New');
global_edit_master.class.php:	$this->show_close('Reset Colors After Adding New');
global_edit_master.class.php:	$this->close_print_wrap('Editor colorWrap');
global_edit_master.class.php:     $this->show_close('Configure Editor Colors');
global_edit_master.class.php:     $this->show_more('Configure Editor Font Family','noback','','Choose the font style of the Editor Only');
global_edit_master.class.php:     $this->print_wrap('editor font family');
global_edit_master.class.php:	$this->font_family('page_options',$this->page_editor_fontfamily_index,'',true);
global_edit_master.class.php:	$this->edit_font_family=(!empty($this->page_options[$this->page_editor_fontfamily_index])&&strpos($this->page_options[$this->page_editor_fontfamily_index],'=>')!==false)? str_replace('=>',',',$this->page_options[$this->page_editor_fontfamily_index]):  str_replace('=>',',',$this->edit_font_family);
global_edit_master.class.php:	$this->edit_font_family=str_replace(';','!important;',$this->edit_font_family);  
global_edit_master.class.php:	$this->close_print_wrap('editor font family');
global_edit_master.class.php:     $this->show_close('Configure Editor Font Family');
global_edit_master.class.php:     $this->page_editborder=(is_numeric($this->page_options[$this->page_editor_bordersize_index])&&$this->page_options[$this->page_editor_bordersize_index]>=1&&$this->page_options[$this->page_editor_bordersize_index]>=4 )?$this->page_options[$this->page_editor_bordersize_index]:1;  
global_edit_master.class.php:     $this->show_more('Configure Editor Border Size','noback','','Choose the border size style of the Editor Only');
global_edit_master.class.php:	$this->print_wrap('editor border size');
global_edit_master.class.php:	$this->mod_spacing('page_options['.$this->page_editor_bordersize_index.']',$this->page_editborder,1,4,1,'px');
global_edit_master.class.php:	if (!empty($this->page_options[$this->page_editor_bordersize_index])&&is_numeric($this->page_options[$this->page_editor_bordersize_index]))  $this->edit_border_size=$this->page_options[$this->page_editor_bordersize_index];
global_edit_master.class.php:	$this->close_print_wrap('editor border size');
global_edit_master.class.php:	$this->show_close('Configure Editor Font');$this->show_more('Configure Editor Font Size','noback','','Choose the font size style of the Editor Only');
global_edit_master.class.php:	$this->print_wrap('editor font size');
global_edit_master.class.php:     $this->pelement=' .editfont';
global_edit_master.class.php:	$this->font_size('page_options',$this->page_editor_fontsize_index,'',$this->pelement);
global_edit_master.class.php:	if (!empty($this->page_options[$this->page_editor_fontsize_index])&&is_numeric($this->page_options[$this->page_editor_fontsize_index]))  $this->edit_font_size=$this->page_options[$this->page_editor_fontsize_index];
global_edit_master.class.php:	$this->close_print_wrap('editor font size');
global_edit_master.class.php:     $this->show_close('Configure Editor Font');
global_edit_master.class.php:     $this->close_print_wrap('editor appearance');
global_edit_master.class.php:	$this->show_close('Edit Mode Style'); 
global_edit_master.class.php:	$this->show_more('Enable viewport Responsive rem units');
global_edit_master.class.php:	$page_mod_percent=(is_numeric($this->page_options[$this->page_mod_percent_index])&&$this->page_options[$this->page_mod_percent_index]<=300&&$this->page_options[$this->page_mod_percent_index]>=50)? $this->page_options[$this->page_mod_percent_index]: 100; 
global_edit_master.class.php:	$page_width_scale_upper=(!empty($this->page_options[$this->page_width_scale_upper_index])&&is_numeric($this->page_options[$this->page_width_scale_upper_index])&&$this->page_options[$this->page_width_scale_upper_index]<=Cfg::Col_maxwidth&&$this->page_options[$this->page_width_scale_upper_index]>=500)?$this->page_options[$this->page_width_scale_upper_index]:'none';
global_edit_master.class.php:	$page_width_scale_lower=(!empty($this->page_options[$this->page_width_scale_lower_index])&&is_numeric($this->page_options[$this->page_width_scale_lower_index])&&$this->page_options[$this->page_width_scale_lower_index]<Cfg::Col_maxwidth*.75)?$this->page_options[$this->page_width_scale_lower_index]:'none';
global_edit_master.class.php:	$this->mod_spacing('page_options['.$this->page_width_scale_upper_index.']',$page_width_scale_upper,500,Cfg::Col_maxwidth,1,'px','none');
global_edit_master.class.php:	$this->mod_spacing('page_options['.$this->page_width_scale_lower_index.']',$page_width_scale_lower,100,Cfg::Col_maxwidth*.75,1,'px','none');
global_edit_master.class.php:	$this->show_more('REM Mod Percent','','smaller editfont editcolor editbackground floatleft');
global_edit_master.class.php:	$this->print_wrap('mod page percent');
global_edit_master.class.php:	$this->mod_spacing($this->page_mod_percent_index.']',$page_mod_percent,50,300,1,'%','none',$msgjava);
global_edit_master.class.php:	$this->close_print_wrap('mod page percent');
global_edit_master.class.php:	$this->show_close('Page Mod Percent'); 
global_edit_master.class.php:          $this->scale_render(0,100,$page_mod_percent,40,'html','font-size',$page_width_scale_upper,$page_width_scale_lower,'%');
global_edit_master.class.php:          $this->rem_scale=$this->tracker;  
global_edit_master.class.php:     $this->submit_button();
global_edit_master.class.php:	$this->show_close('Enable viewport Responsive rem units');
global_edit_master.class.php:	$this->show_more('Configure Setting Defaults','noback');
global_edit_master.class.php:	$this->print_wrap('settings defaults wrap',true); 
global_edit_master.class.php:	$this->page_width=($this->page_width >99 && $this->page_width < Cfg::Col_maxwidth)?$this->page_width:1280;
global_edit_master.class.php:	$this->mod_spacing('page_width',$this->page_width,100,Cfg::Col_maxwidth,1,'px');
global_edit_master.class.php:	$checked2=($this->page_options[$this->page_advanced_index]==='disabled')?'checked="checked"':''; 
global_edit_master.class.php:	$checked1=($this->page_options[$this->page_advanced_index]!=='disabled')?'checked="checked"':''; 
global_edit_master.class.php:	printer::alert('<input type="radio" value="enabled" '.$checked1.' name="page_options['.$this->page_advanced_index.']">Default Adv Css On<br>');
global_edit_master.class.php:	printer::alert('<input type="radio" value="disabled" '.$checked2.' name="page_options['.$this->page_advanced_index.']">Default Adv Css Off');
global_edit_master.class.php:     $maxplus=(!empty($this->page_options[$this->page_max_expand_image_index])&&$this->page_options[$this->page_max_expand_image_index]>299)?$this->page_options[$this->page_max_expand_image_index]:Cfg::Page_pic_expand_plus;
global_edit_master.class.php:	$this->mod_spacing('page_options['.$this->page_max_expand_image_index.']',$maxplus,300,2800,1,'px');
global_edit_master.class.php:     $quality=(!empty($this->page_options[$this->page_image_quality_index])&&$this->page_options[$this->page_image_quality_index]>10&&$this->page_options[$this->page_image_quality_index]<101)?$this->page_options[$this->page_image_quality_index]:Cfg::Pic_quality;
global_edit_master.class.php:	$this->mod_spacing('page_options['.$this->page_image_quality_index.']',$quality,10,100,1,'%','','page_quality_show');
global_edit_master.class.php:     $this->backupinst->backup_copies=$this->storeinst->backup_copies=$this->backup_copies;
global_edit_master.class.php:	$this->mod_spacing('page_options['.$this->page_backup_copies_index.']',$this->backup_copies,20,1000,1,' copies');
global_edit_master.class.php:	$this->close_print_wrap('settings defaults wrap');
global_edit_master.class.php:	$this->show_close('Configure Setting Defaults');
global_master.class.php:	$this->viewport_current_width=process_data::get_viewport(); 
global_master.class.php:	$this->color_arr_long=explode(',',Cfg::Light_editor_color_order);//default value
global_master.class.php:	$this->deltatime=time::instance(); $this->deltatime->delta_log('global construct delta'); 
global_master.class.php:	$this->column_width_array[0]='body'; 
global_master.class.php:	$this->edit=($edit=='edit')?true:$edit;// this is set in editpages for each web page individually....
global_master.class.php:     $this->ext=request::check_request_ext();  
global_master.class.php:	$this->page_initiate(); 
global_master.class.php:	if ((!Sys::Bypass||(Sys::Loc&&Cfg::Force_local_login))&&(($this->edit&&!Sys::Pass_class)||Sys::Check_restricted)){//this is always on for security for editpages and other restricted utilities such as file_gen.php and display user pages see (Sys.php)
global_master.class.php:	$this->css_suffix=$this->passclass_ext=(Sys::Pass_class)?Cfg::Temp_ext:'';		 
global_master.class.php:	if ($this->edit && (isset($_POST['page_restore_view'])&&!empty($_POST['page_restore_view']))||(isset($_SESSION[Cfg::Owner.'db_to_restore'])&&isset($_GET['page_restore_dbopt'])))$this->db_backup_restore();
global_master.class.php:	$this->ajax_check();
global_master.class.php:     if ($this->edit){//clear last round editpage outputbuffer generation
global_master.class.php:               foreach (glob(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Buffer_dir.'*'.$this->pagename.'.dat') as $filename) { 
global_master.class.php:	(Sys::Onsubmitoff)&&$this->onsubmit='';
global_master.class.php:	if ($this->edit)$_SESSION[Cfg::Owner.'editmode']=1;//prevents pages from cacheing if cacheing were on also this session created when logged in or by request
global_master.class.php:		$this->edit='return';
global_master.class.php:		$this->browser_info();
global_master.class.php:			$this->{$index.'_index'}=$key;  
global_master.class.php:			$this->{$index.'_index'}=$key;  
global_master.class.php:		$this->{$index.'_index'}=$key;
global_master.class.php:			$this->{$index.'_index'}=$key;
global_master.class.php:			$this->{$index.'_index'}=$key;
global_master.class.php:			$this->{$index.'_index'}=$key;
global_master.class.php:			$this->{$index.'_index'}=$key;  
global_master.class.php:			$this->{$index.'_index'}=$key;
global_master.class.php:			$this->{$index.'_index'}=$key;
global_master.class.php:			$this->{$index.'_index'}=$key;
global_master.class.php:			$this->{$index.'_index'}=$key;
global_master.class.php:			$this->{$index.'_index'}=$key; 
global_master.class.php:			$this->{$index.'_index'}=$key;
global_master.class.php:	$this->col_field_arr_all=explode(',',Cfg::Col_fields_all);
global_master.class.php:	$this->col_field_arr=explode(',',Cfg::Col_fields); 
global_master.class.php:	#buffer    ||($this->edit&&Sys::Pass_class)
global_master.class.php:	$this->set_cookie(); 
global_master.class.php:	$this->deltatime->delta_log('page initiate');
global_master.class.php:	$this->temp();  
global_master.class.php:	if ($this->edit){  
global_master.class.php:	$this->edit_script();
global_master.class.php:	   	$this->page_script();   
global_master.class.php:     if ($this->is_clone&&!$this->clone_local_style)return;
global_master.class.php:     if(!$this->flex_box_mode){
global_master.class.php:         // printer::print_info('Flex box flex-item positioning of this '.$this->blog_typed.' is <b>Not Active</b> as not enabled in parent column.'); 
global_master.class.php:     $flexitems=explode(',',$this->blog_flex_box);
global_master.class.php:     $css_id=($type==='col')?$this->col_dataCss:$this->dataCss;
global_master.class.php:     $this->show_more('Choose flex-item options');
global_master.class.php:               $this->show_more('Add additional @media query controlled option tweaks for flex-items');
global_master.class.php:          $max_flex=(is_numeric($flexitems[$this->blog_max_flex_index+$k])&&$flexitems[$this->blog_max_flex_index+$k]>0&&$flexitems[$this->blog_max_flex_index+$k]<=3000)?$flexitems[$this->blog_max_flex_index+$k]:'none';
global_master.class.php:          $min_flex=(is_numeric($flexitems[$this->blog_min_flex_index+$k])&&$flexitems[$this->blog_min_flex_index+$k]>0&&$flexitems[$this->blog_min_flex_index+$k]<=3000)?$flexitems[$this->blog_min_flex_index+$k]:'none';
global_master.class.php:          $order=(is_numeric($flexitems[$this->flex_order_index+$k])&&$flexitems[$this->flex_order_index+$k]>0&&$flexitems[$this->flex_order_index+$k]<=10)?$flexitems[$this->flex_order_index+$k]:0;
global_master.class.php:          $grow=(is_numeric($flexitems[$this->flex_grow_index+$k])&&$flexitems[$this->flex_grow_index+$k]>0&&$flexitems[$this->flex_grow_index+$k]<=10)?$flexitems[$this->flex_grow_index+$k]:0;
global_master.class.php:          $shrink=(is_numeric($flexitems[$this->flex_shrink_index+$k])&&$flexitems[$this->flex_shrink_index+$k]>0&&$flexitems[$this->flex_shrink_index+$k]<=10)?$flexitems[$this->flex_shrink_index+$k]:0;
global_master.class.php:          $basis=($flexitems[$this->flex_basis_index+$k]==='zero')?'zero':'auto';
global_master.class.php:          $align_self=(in_array($flexitems[$this->flex_align_self_index+$k],$align_self_arr))?$flexitems[$this->flex_align_self_index+$k]:'def';
global_master.class.php:                    $this->css.='
global_master.class.php:			 $this->css.='
global_master.class.php:			 $this->css.='
global_master.class.php:			 $this->css.='
global_master.class.php:          printer::print_wrap1('max flex',$this->column_lev_color);
global_master.class.php:          $this->mod_spacing($this->data.'_blog_flex_box['.$this->blog_max_flex_index+$k.']',$max_flex,100,3000,1,'px','none');
global_master.class.php:          printer::print_wrap1('min flex',$this->column_lev_color);
global_master.class.php:          $this->mod_spacing($this->data.'_blog_flex_box['.$this->blog_min_flex_index+$k.']',$min_flex,100,3000,1,'px','none');
global_master.class.php:          printer::print_wrap1('flex order',$this->column_lev_color);
global_master.class.php:          $this->mod_spacing($this->data.'_blog_flex_box['.$this->flex_order_index+$k.']',$order,1,10,1,'');
global_master.class.php:           printer::print_wrap1('flex grow',$this->column_lev_color);
global_master.class.php:           $this->mod_spacing($this->data.'_blog_flex_box['.$this->flex_grow_index+$k.']',$order,1,10,.1,'');
global_master.class.php:          printer::print_wrap1('flex shrink',$this->column_lev_color);
global_master.class.php:          $this->mod_spacing($this->data.'_blog_flex_box['.$this->flex_shrink_index+$k.']',$order,1,10,.1,''); 
global_master.class.php:          printer::print_wrap1('flex basis',$this->column_lev_color);
global_master.class.php:          printer::alert('<input name="blog_flex_box['.($this->flex_basis_index+$k).']" value="auto" type="radio" '.$checked1.'>Use auto'); 
global_master.class.php:          printer::alertx('<input name="'.$this->data.'_blog_flex_box['.($this->flex_basis_index+$k).']" value="0" type="radio" '.$checked2.'>Use 0'); 
global_master.class.php:          printer::print_wrap1('align self',$this->column_lev_color);
global_master.class.php:               echo '<p><input type="radio" name="'.$this->data.'_blog_flex_box['.($this->flex_align_self_index+$k).']" value="'.$asa.'" '.$checked.'> '.$align_self_assoc[$asa].'</p>';
global_master.class.php:               $this->submit_button( );
global_master.class.php:               $this->show_close('Add any additional @media query controlled option tweak(s) for flex-items'); 
global_master.class.php:     $this->submit_button();
global_master.class.php:     $this->show_close('Choose flex-item options'); 
global_master.class.php:     if ($this->is_clone&&!$this->clone_local_style)return;
global_master.class.php:     if($this->column_level>0&&$this->column_use_grid_array[$this->column_level-1]==='use_grid'){
global_master.class.php:     $flexcontainer=explode(',',$this->col_flex_box);
global_master.class.php:     $css_id=$this->col_dataCss;
global_master.class.php:     $this->show_more('Choose flex-box flex-container options');
global_master.class.php:               $this->show_more('Add additional @media query controlled option tweaks for flex-container');
global_master.class.php:          $max_flex=(is_numeric($flexcontainer[$this->col_max_flex_index+$k])&&$flexcontainer[$this->col_max_flex_index+$k]>0&&$flexcontainer[$this->col_max_flex_index+$k]<=3000)?$flexcontainer[$this->col_max_flex_index+$k]:'none';
global_master.class.php:          $min_flex=(is_numeric($flexcontainer[$this->col_min_flex_index+$k])&&$flexcontainer[$this->col_min_flex_index+$k]>0&&$flexcontainer[$this->col_min_flex_index+$k]<=3000)?$flexcontainer[$this->col_min_flex_index+$k]:'none';
global_master.class.php:          $display=(in_array($flexcontainer[$this->flex_display_index+$k],${'display'.$dis_suffix.'_arr'}))?$flexcontainer[$this->flex_display_index+$k]:'off';
global_master.class.php:          $display_css=($display==='off')?'':'display:'.${'display'.$dis_suffix.'_assoc'}[$display].';';          //$display=($flexcontainer[$this->flex_display_index+$k]==='fle'||$flexcontainer[$this->flex_display_index+$k]==='inf')?$flexcontainer[$this->flex_display_index+$k]:'off';
global_master.class.php:           $direction=(in_array($flexcontainer[$this->flex_direction_index+$k],$flex_direction_arr))?$flexcontainer[$this->flex_direction_index+$k]:'row';
global_master.class.php:           $wrap=(in_array($flexcontainer[$this->flex_wrap_index+$k],$flex_wrap_arr))?$flexcontainer[$this->flex_wrap_index+$k]:'now';
global_master.class.php:          $justify_content=(in_array($flexcontainer[$this->flex_justify_content_index+$k],$justify_content_arr))?$flexcontainer[$this->flex_justify_content_index+$k]:'sta';
global_master.class.php:          $align_items=(in_array($flexcontainer[$this->flex_align_items_index+$k],$align_items_arr))?$flexcontainer[$this->flex_align_items_index+$k]:'sta';
global_master.class.php:          $align_content=(in_array($flexcontainer[$this->flex_align_content_index+$k],$align_content_arr))?$flexcontainer[$this->flex_align_content_index+$k]:'str';
global_master.class.php:          printer::print_wrap1('max flex',$this->column_lev_color);
global_master.class.php:          $this->mod_spacing($this->col_table.'_col_flex_box['.$this->col_max_flex_index+$k.']',$max_flex,100,3000,1,'px','none');
global_master.class.php:          printer::print_wrap1('min flex',$this->column_lev_color);
global_master.class.php:          $this->mod_spacing($this->col_table.'_col_flex_box['.$this->col_min_flex_index+$k.']',$min_flex,100,3000,1,'px','none');
global_master.class.php:                    $this->css.='
global_master.class.php:			 $this->css.='
global_master.class.php:			 $this->css.='
global_master.class.php:			 $this->css.='
global_master.class.php:               printer::print_wrap1('display mode',$this->column_lev_color);
global_master.class.php:               echo '<p><input type="radio" name="'.$this->col_table.'_col_flex_box['.($this->flex_display_index+$k).']" value="'.$asa.'" '.$checked.'> '.${'display'.$dis_suffix.'_assoc'}[$asa].'</p>';
global_master.class.php:          printer::print_wrap1('flex wrap',$this->column_lev_color);
global_master.class.php:               echo '<p><input type="radio" name="'.$this->col_table.'_col_flex_box['.($this->flex_wrap_index+$k).']" value="'.$asa.'" '.$checked.'> '.$flex_wrap_assoc[$asa].'</p>';
global_master.class.php:                printer::print_wrap1('flex direction',$this->column_lev_color);
global_master.class.php:               echo '<p><input type="radio" name="'.$this->col_table.'_col_flex_box['.($this->flex_direction_index+$k).']" value="'.$asa.'" '.$checked.'> '.$flex_direction_assoc[$asa].'</p>';
global_master.class.php:          printer::print_wrap1('justify content',$this->column_lev_color);
global_master.class.php:               echo '<p><input type="radio" name="'.$this->col_table.'_col_flex_box['.($this->flex_justify_content_index+$k).']" value="'.$asa.'" '.$checked.'> '.$justify_content_assoc[$asa].'</p>';
global_master.class.php:          printer::print_wrap1('align items',$this->column_lev_color);
global_master.class.php:               echo '<p><input type="radio" name="'.$this->col_table.'_col_flex_box['.($this->flex_align_items_index+$k).']" value="'.$asa.'" '.$checked.'> '.$align_items_assoc[$asa].'</p>';
global_master.class.php:                printer::print_wrap1('align content',$this->column_lev_color);
global_master.class.php:               echo '<p><input type="radio" name="'.$this->col_table.'_col_flex_box['.($this->flex_align_content_index+$k).']" value="'.$asa.'" '.$checked.'> '.$align_content_assoc[$asa].'</p>';
global_master.class.php:               $this->submit_button();
global_master.class.php:               $this->show_close('Add any additional @media query controlled option tweak(s) for flex-container');
global_master.class.php:     $this->submit_button();
global_master.class.php:     $this->show_close('Choose flex-containers options');
global_master.class.php:	printer::alertx('<div class="floatleft editbackground underline editfont underline rad5 tiny cursor button'.$this->column_lev_color.'mini highlight" title="this may happen when a post in editmode with background image opacity set overlaps show_more style fields with another background image opacity post above it." onclick="this.parentNode.style.cssText +=\';position:static !important;\'">EditMode: Turn Off opacity background Image if overlapping Post above from Proper Editing</div>');
global_master.class.php:     $this->show_more('info','off','info smaller');
global_master.class.php:	$this->print_wrap('primal info');
global_master.class.php:	printer::alert('Column Css: '.$this->col_dataCss);
global_master.class.php:     if ($this->scale_width_enabled){
global_master.class.php:	if ($this->column_use_grid_array[$this->column_level]==='use_grid'){	
global_master.class.php:	elseif ($this->column_use_flex_array[$this->column_level]){	
global_master.class.php:	if ($this->use_col_main_width) 
global_master.class.php:     $emscale=($this->terminal_em_scale)?'on':'off';
global_master.class.php:     printer::print_info("1 em unit currently equivalent to {$this->terminal_font_em_px}px with scaling $emscale");
global_master.class.php:     $remscale=($this->rem_scale)?'on':'off';
global_master.class.php:          if (!empty($this->{$space.'_info'})){
global_master.class.php:               $col_pad_info.=$type.' set: '.$this->{$space.'_info'}.'<br>';
global_master.class.php:     (!empty($this->left_border_info))&&printer::print_info('Left Border info: '.$this->left_border_info);
global_master.class.php:     (!empty($this->right_border_info))&&printer::print_info('Right Border info: '.$this->right_border_info);
global_master.class.php:	$this->close_print_wrap('primal info',false);	
global_master.class.php:	$this->show_close('info','','info fs1info');
global_master.class.php:     $this->show_more('info','','info smaller');
global_master.class.php:	$this->print_wrap('non primal col info');
global_master.class.php:	printer::alert('Post Parent Blog id'.$this->blog_id);
global_master.class.php:	printer::alert('Column Css: '.$this->col_dataCss);
global_master.class.php:	if ($this->column_use_grid_array[$this->column_level-1]==='use_grid'){
global_master.class.php:	elseif ($this->column_use_flex_array[$this->column_level-1]){  
global_master.class.php:          $scaleWidth=($this->scale_width_enabled)?'&#x2713;':'&#x2715;';
global_master.class.php:     if ($this->column_use_grid_array[$this->column_level-1]!=='use_grid'){
global_master.class.php:          if(!$this->use_col_main_width){
global_master.class.php:               printer::print_info($this->col_width_info);
global_master.class.php:               $float=($this->blog_float==='center_row')?'&#x2715;':'<span class="tiny">'.str_replace('_','',ucwords($this->blog_float ,'_')).'</span>'; 
global_master.class.php:               $masonryParent=($this->column_masonry_status_arr[$this->column_level-1])?'&#x2713;':'&#x2715;';
global_master.class.php:          elseif(!$this->column_use_flex_array[$this->column_level-1]){ 
global_master.class.php:               $maxwidthSetting=($this->blog_alt_rwd[$this->blog_width_mode_index]!=='compress_full_width'&&$this->blog_alt_rwd[$this->blog_width_mode_index]!=='compress_to_percentage')?'&#x2713;':'&#x2715;';  
global_master.class.php:               $float=($this->blog_float==='center_row')?'&#x2715;':'<span class="tiny">'.str_replace('_','',ucwords($this->blog_float ,'_')).'</span>'; 
global_master.class.php:               $altGridFull=($this->blog_alt_rwd[$this->blog_width_mode_index]==='compress_full_width')?'&#x2713;':'&#x2715;';
global_master.class.php:               $altGridPercent=($this->blog_alt_rwd[$this->blog_width_mode_index]==='compress_to_percentage')?'&#x2713;':'&#x2715;'; 
global_master.class.php:               $masonryParent=($this->column_masonry_status_arr[$this->column_level-1])?'&#x2713;':'&#x2715;';
global_master.class.php:	if ($this->column_use_grid_array[$this->column_level]==='use_grid'){	
global_master.class.php:     if ($this->column_use_flex_array[$this->column_level]){ 
global_master.class.php:	elseif ($this->is_masonry){	
global_master.class.php:	$emscale=($this->terminal_em_scale)?'on':'off';
global_master.class.php:     printer::print_info("1 em unit currently equivalent to {$this->terminal_font_em_px}px with scaling $emscale");
global_master.class.php:     $remscale=($this->rem_scale)?'on':'off';
global_master.class.php:          if (!empty($this->{$space.'_info'})){
global_master.class.php:               $col_pad_info.=$type.' set: '.$this->{$space.'_info'}.'<br>';
global_master.class.php:     (!empty($this->left_border_info))&&printer::print_info('Left Border info: '.$this->left_border_info);
global_master.class.php:     (!empty($this->right_border_info))&&printer::print_info('Right Border info: '.$this->right_border_info);
global_master.class.php:	$this->close_print_wrap('non primal col info',false);
global_master.class.php:	$this->show_close('info','','info fs1info');
global_master.class.php:     $this->prime=$prime;
global_master.class.php:	$this->col_width=(empty($this->col_width)||!is_numeric($this->col_width))?0:$this->col_width;
global_master.class.php:	if (isset($_POST[$this->col_table.'_express_pub']))$this->publish($this->col_id);
global_master.class.php:		$this->scale_width_enabled=false;//initialize
global_master.class.php:		$this->grid_width_available=array();
global_master.class.php:		$this->bp_total_arr=array();
global_master.class.php:		$this->column_net_width_percent=array();
global_master.class.php:		$this->current_net_width_percent=100;
global_master.class.php:		$this->column_use_grid_array=array();
global_master.class.php:		$this->column_use_flex_array=array();
global_master.class.php:		$this->column_bp_width_arr=array();
global_master.class.php:		$this->grid_width_available=array();
global_master.class.php:		if($this->edit){
global_master.class.php:               $this->max_width_limit=$this->column_total_width[0];
global_master.class.php:               $this->rem_width_percent=100;
global_master.class.php:		$this->column_id_array=array();
global_master.class.php:     $this->overlapbutton=false;//works for editmode to change stacking order of columns with opacity background images when a post needs to overlap it when  show_more is clicked.. 
global_master.class.php:	$pagename=($this->is_clone&&$this->clone_local_style)?'clone_'.$this->col_table:$this->col_table;
global_master.class.php:	$this->{$pagename.'_col_options'}=$this->col_options;//for passing name array directly to style functions 
global_master.class.php:	$this->background_video('col_style');	
global_master.class.php:	$this->col_name=$pagename;  //col name for form name fields parent blog data names
global_master.class.php:	$col_id=$this->col_id;
global_master.class.php:	$this->col_order=self::$col_count++;     
global_master.class.php:	$blog_id=($this->column_level==0)?0:$this->blog_id;
global_master.class.php:	$this->blog_id_arr[$this->column_level]=$blog_id;
global_master.class.php:	$this->column_id_array[$this->column_level]=$col_id; 
global_master.class.php:	$this->is_masonry=($this->col_options[$this->col_enable_masonry_index]==='masonry')?true:false;
global_master.class.php:	$this->column_masonry_status_arr[$this->column_level]=$this->is_masonry;
global_master.class.php:     $pass=$this->column_use_grid_array[$this->column_level]=$this->col_options[$this->col_use_grid_index];  
global_master.class.php:     $this->column_use_flex_array[$this->column_level]=($pass!=='use_grid'&&(substr($this->col_flex_box,0,3)==='fle'||substr($this->col_flex_box,0,3)==='inf'))?true:false; 
global_master.class.php:     $this->column_level_base[$this->column_level]=$this->col_table_base;
global_master.class.php:	$this->current_overall_floated_total[$this->column_level]=0;//initiate 
global_master.class.php:	$styles=explode(',',$this->col_style);
global_master.class.php:	$this->current_background_color=$this->column_background_color_arr[$this->column_level]=(preg_match(Cfg::Preg_color,explode('@@',$styles[$this->background_index])[0]))?explode('@@',$styles[$this->background_index])[0]:((array_key_exists($this->column_level-1,$this->column_background_color_arr))?$this->column_background_color_arr[$this->column_level-1]:'ffffff');
global_master.class.php:	$this->current_color=$this->column_color_arr[$this->column_level]=(preg_match(Cfg::Preg_color,$styles[$this->font_color_index]))?$styles[$this->font_color_index]:((array_key_exists($this->column_level-1,$this->column_color_arr))?$this->column_color_arr[$this->column_level-1]:'000000'); 
global_master.class.php:	$this->current_font_px=$this->column_font_px_arr[$this->column_level]=(!empty($styles[$this->font_size_index])&&$styles[$this->font_size_index]>=.3&&$styles[$this->font_size_index]<=4.5)?$styles[$this->font_size_index]*16:((array_key_exists($this->column_level-1,$this->column_font_px_arr))?$this->column_font_px_arr[$this->column_level-1]:16);
global_master.class.php:	$this->column_total_width_percent[$this->column_level]=($this->column_level>0)?($this->column_total_width_percent[$this->column_level-1]*$this->col_width/100):100; 
global_master.class.php:	$this->column_total_width[$this->column_level]=$this->current_total_width;//set in total_float  max float only
global_master.class.php:	$this->column_net_width[$this->column_level]=$this->current_net_width;
global_master.class.php:	$this->column_net_width_percent[$this->column_level]=($this->column_level>0)?$this->current_net_width_percent:100;
global_master.class.php:	$this->column_total_net_width_percent[$this->column_level]=($this->column_level>0)?$this->column_total_net_width_percent[$this->column_level-1]*$this->current_net_width_percent/100:100;
global_master.class.php:	$this->column_order_array[$this->column_level]=$this->col_order;
global_master.class.php:	//$this->column_num_array[$this->column_level]=$this->col_num;_
global_master.class.php:	$this->column_id_array[$this->column_level]=$this->col_id;
global_master.class.php:	$this->blog_order_array[$this->column_level]=$this->blog_order_mod; 
global_master.class.php:	if (!$this->edit)return; 
global_master.class.php:	$clone_msg=($this->is_clone)?'<span class="red">Cloned </span>':(($this->blog_unstatus==='unclone')?'<span class="orange">Mirror release Column</span><br>':''); 
global_master.class.php:	$title=(!$this->is_clone)?'title="The Unique Column Id: C'.$this->col_id.' would be Used to Copy/Mirror/Move This Entire Column"':'title="This entire column is cloned"';
global_master.class.php:	if ($this->column_level > 0){
global_master.class.php:		if ($this->blog_unstatus==='unclone'){
global_master.class.php:               $this->show_more('Mirror Release Info','','info underline italic small editbackground editfont');
global_master.class.php:               if ($this->orig_val['blog_type'] ==='nested_column')
global_master.class.php:                    printer::print_info('The Original Column post which was indirectly cloned then unmirrored here is from page_ref: '.$this->orig_val['blog_table_base'].'  and is Col Id:'.$this->orig_val['blog_data1'].'. If doing a template tranfer include this column in your template and you will automatically include this content from this current column here!');
global_master.class.php:               else printer::print_info('The Original '.$this->orig_val['blog_type'].' Post which was indirectly cloned then unmirrored here  is from page_ref: '.$this->orig_val['blog_table_base'].'  and is Post Id:'.$this->orig_val['blog_id'].'. If doing a template tranfer include this Post in your new template and you will automatically include this content from this current column here!');
global_master.class.php:               $this->show_close('From Info');
global_master.class.php:               }//$this->blog_unstatus==='unclone'
global_master.class.php:          printer::print_wrap('column info', $this->column_lev_color.' fs1'.$this->column_lev_color.' floatleft editbackground editfont left'); 
global_master.class.php:          printer::alertx('<p '.$title.'>'.$clone_msg.'Column#'.$this->col_order.'<br><span class="info">'.$clone_msg.'Column Id: C'.$this->col_id.'</span><br><span class="highlight smaller">From: <br>Column#'.$this->column_order_array[$this->column_level-1].' Post#'.$this->blog_order_array[$this->column_level].'</span>'); 
global_master.class.php:          $this->col_info();
global_master.class.php:		}//$this->column_level > 0
global_master.class.php:		$clone=($this->is_clone)?'<span class="red">Cloned </span>':'';
global_master.class.php:		$title=(!$this->is_clone)?'title="The Unique Column Id: C'.$this->col_id.' would be Used to Copy/Mirror/Move This Entire Column"':'title="This entire column is cloned"';
global_master.class.php:          printer::print_wrap('primal',$this->column_lev_color.' fs1'.$this->column_lev_color.' floatleft');
global_master.class.php:		printer::alertx('<p '.$title.'>'.$clone.'Column#'.$this->col_order.'<br><span class="highlight ">Column Id: C'.$this->col_id.'</span><br><span class="info smaller">From: <br>The Body'.'</span> </p>');
global_master.class.php:          $this->col_info_prime();  
global_master.class.php:     if ($this->is_clone){ //if cloning local style for nested columns styles & config already populated such that pagename does equal pp table base!! 
global_master.class.php:          if (!$prime&&$this->blog_status !=='clone'){
global_master.class.php:               $clone_msg='<span class="info" title="The Parent Column C'.$this->parent_col_clone.' was directly Cloned and this Column is Nested  Within"> Info </span>';
global_master.class.php:               $this->parent_col_clone=$col_id;
global_master.class.php:		printer::alertx('<p class="editbackground editfont editcolor fs2npred small left shadowoff floatleft">Cloned Column '.$clone_msg.' and Changes to the Parent Column Id C'.$col_id.' on Page <a class="whiteshadow2" style="color:#0075a0;" target="_blank"  href="'.check_data::dir_to_file(__METHOD__,__LINE__,__FILE__,$this->col_table_base).$this->ext.'#col_'.$col_id.'"><u>'.check_data::table_to_title($this->col_table_base,__method__,__LINE__,__file__).'</u></a> Will Also Appear Here ');
global_master.class.php:		if (in_array('c'.$col_id,$this->clone_check_arr)){
global_master.class.php:		if (!$prime&&$this->blog_unstatus!=='unclone'){
global_master.class.php:			$this->unclone_options('c'.$col_id,$this->post_target_clone_column_id);
global_master.class.php:		if ($this->edit&&!Sys::Quietmode){
global_master.class.php:			if (empty($this->clone_local_style)){
global_master.class.php:				$this->show_more('Enable Local Col Settings','noback','small highlight editbackground editfont rad3 fs2npinfo click','Enable Local Column Styling and Other Column Settings Without Affecting the Parent.  This only affects the Column Styles and not those Set in the Posts or Nested Column content within!',600); 
global_master.class.php:				echo '<div class="fsminfo editbackground editfont  floatleft '.$this->column_lev_color.'"><!--Local clone style-->';
global_master.class.php:				$this->show_close('Local clone style');
global_master.class.php:				$this->show_more('Disable Local Settings','noback','small highlight editbackground editfont rad3 fs2npinfo click','Disable Local Styling of this Column Clone and Return to Updating When the Parent of this Clone Updates',600); 
global_master.class.php:				echo '<div class="fsminfo editbackground editfont  floatleft '.$this->column_lev_color.'"><!--Local clone style-->';
global_master.class.php:				$this->show_close('Disable Local Settings');
global_master.class.php:			if (($prime && $this->col_status==='clone')||(!$prime && $this->blog_status==='clone')){ 
global_master.class.php:				$this->switch_clone_options($col_id,$prime,'column');  
global_master.class.php:	if($this->col_status==='clone'){ 
global_master.class.php:			printer::alertx('<p class="editbackground editfont left neg fs2npred floatleft">&nbsp;&nbsp;&nbsp;<input type="checkbox" name="deletecolumn['.$this->col_child_table.']" value="delete" onchange="edit_Proc.oncheck(\'deletecolumn['.$this->col_child_table.']\',\''.$delete_msg.' ie.  THIS ClONED COLUMN AND ALL THE POSTS AND NESTED COLUMNS WITHIN IT WILL BE DELETED WHEN YOU HIT CHANGE, UNCHECK TO CANCEL\')" >REMOVE This Cloned Column &nbsp;&nbsp;</p>');
global_master.class.php:	if (!$this->is_clone||$this->clone_local_style){
global_master.class.php:		$this->show_more('Settings for Column Id'.$this->col_id, 'buffer_column_settings_'.$this->col_id,'','',500,'','float:left');
global_master.class.php:		//$this->column_tree();//column tree info not used currently
global_master.class.php:		$this->print_wrap('Settings for Column',true);
global_master.class.php:		$this->primestat=($prime)?'prime':'notprime';
global_master.class.php:          $this->column_options();//cloned columns without local styling have no access to column_options as it shares cloned parent options
global_master.class.php:     else $this->column_bp_width_track();//update column_bp_width array regardless of clone status...
global_master.class.php:	$this->edit_styles_close($pagename,'col_style','.'.$this->col_dataCss,'background,padding_top,padding_bottom,padding_left,padding_right,margin_top,margin_bottom,margin_left,margin_right,borders,box_shadow,outlines,radius_corner,font_color,text_shadow,font_size,font_family','Edit Column Styles','noback',$msg);
global_master.class.php:     if(!$this->is_clone||$this->clone_local_style){
global_master.class.php:          $this->show_more('Style Group, Tags,Date, and Comment for Column','noback');
global_master.class.php:     $this->print_wrap('Style Group,Date',true);
global_master.class.php:    $this->edit_styles_close($pagename,'col_grp_bor_style','.'.$this->col_dataCss.'>.style_groupstyle','','Set &#34;Group Styles&#34;','noback',$msg);
global_master.class.php:     $this->edit_styles_close($pagename,'col_hr','.'.$this->col_dataCss.' hr','width_special,width_max_special,width_min_special,background,padding_top,padding_bottom,padding_left,padding_right,margin_top,margin_bottom,margin_left,borders,box_shadow,outlines,radius_corner','Set Col Specific HR Tags if needed','noback',$msg);
global_master.class.php:     $this->edit_styles_close($pagename,'col_comment_style', '.'.$this->col_dataCss.' .posted_comment','','Style Comment Entries','noback','Comment Styles will affect all comment post feedback styles for posts made directly in this column');	
global_master.class.php:     $this->edit_styles_close($pagename,'col_date_style','.'.$this->col_dataCss.' .style_date','','Style Post Date Entries','noback','Date Styling Affects Posts within this Column (And within any nested columns unless set there) with Show Post Date Enabled');
global_master.class.php:     $this->edit_styles_close($pagename,'col_comment_date_style','.'.$this->col_dataCss.' .style_comment_date','','Style Comment Date Entries','noback','Comment Date Styling Affects Comments within this Column (And within any nested columns unless set there)');
global_master.class.php:     $this->edit_styles_close($pagename,'page_comment_view_style','.'.$this->col_dataCss.' .style_comment_view','','Style #/view/Leave Comments','noback','Style the #of Comments  and View/Leave Comments Link');
global_master.class.php:     if (!$this->is_clone||$this->clone_local_style){
global_master.class.php:          $this->submit_button();
global_master.class.php:          $this->show_close('Style Group,Date, and Comment for Column');
global_master.class.php:          $this->submit_button(); 
global_master.class.php:          $this->show_close('Settings for Column#','buffer_column_settings_'.$this->col_id);//<!--Show More Master col Settings-->';
global_master.class.php:	($this->edit&&$this->overlapbutton)&&$this->overlapbutton();#when mulitple posts with background image opacity  set the element is set to position relative and may prevent overlapping 
global_master.class.php:     $prime=$this->prime;
global_master.class.php:     if (!$prime&&$this->column_use_flex_array[$this->column_level-1]){
global_master.class.php:     $maxwid=($this->column_level==0)?Cfg::Col_maxwidth:$this->column_net_width[$this->column_level-1];
global_master.class.php:     $column_percent=($this->column_level==0)?($this->col_width/$this->page_width*100):$this->col_width;
global_master.class.php:     $this->show_more($opt);//Main Width Options
global_master.class.php:     if ($this->column_level==0){
global_master.class.php:          $cw=(is_numeric($this->column_total_width[$this->column_level])&&$this->column_total_width[$this->column_level]>1)?$this->column_total_width[$this->column_level]:$this->page_width;
global_master.class.php:          if (!$this->use_col_main_width){
global_master.class.php:          echo '<div class="highlight editbackground editfont" title="The Column width setting will include the value of margins and will take up 100% of the available column width if no limiting width value is chosen! Limit the width if required.  Both the percentage available of the parent column width and the pixel value will be shown"><!--width float wrap-->Current Column Width: <span class="editcolor editbackground editfont">: '.intval(ceil($this->column_total_width[$this->column_level]*10)/10).'px   ('.(ceil($column_percent*10)/10).'%)</span>';
global_master.class.php:          if (!$this->use_col_main_width){
global_master.class.php:     $currwidth=(!empty($this->col_width)&&$this->use_col_main_width)?round($this->col_width,2):0; 
global_master.class.php:     $mode=($this->column_level>0)?'':'simple'; 
global_master.class.php:          $this->mod_spacing($this->col_name.'_col_width',$currwidth,0,100,.05,'%','',$msgjava,$factor,'px');
global_master.class.php:          $this->mod_spacing($this->col_name.'_col_width',$currwidth,0,$maxwid,1,'px','',$msgjava); 
global_master.class.php:     (!$prime)&&$this->alt_respond('blog');
global_master.class.php:     $this->submit_button();
global_master.class.php:     $this->show_close('Main Width Options');
global_master.class.php:	$this->grid_units=(is_numeric($this->col_options[$this->col_grid_units_index])&&$this->col_options[$this->col_grid_units_index]>11&&$this->col_options[$this->col_grid_units_index]<101)?intval($this->col_options[$this->col_grid_units_index]):Cfg::Column_grid_units;
global_master.class.php:     if($this->column_use_grid_array[$this->column_level]==='use_grid'){#setup conditions for all posts within column  note that this->rwd build called before enabling correct parent column vals
global_master.class.php:          $this->column_grid_css_arr[]=$this->grid_units.'@@'.$this->page_br_points;//for rendering css
global_master.class.php:          $this->current_grid_units=$this->grid_units;//for choosing post width class 
global_master.class.php:     if ($this->column_level<1){   
global_master.class.php:		$this->column_bp_width_arr[0]=array();
global_master.class.php:		$this->column_bp_width_arr[0]['max'.$this->page_break_arr[0]]=array(100,$this->col_width);
global_master.class.php:		foreach ($this->page_break_arr as $bp){
global_master.class.php:			$this->column_bp_width_arr[0][$bp]=array(100,min($bp,$this->col_width));
global_master.class.php:	else if ($this->column_use_grid_array[$this->column_level-1]!=='use_grid'){
global_master.class.php:		foreach ($this->column_bp_width_arr[$this->column_level-1]  as $bp => $value){
global_master.class.php:			$curpercent=($value[0] * $this->current_net_width_percent/100);
global_master.class.php:			$curwidth=$curpercent*$this->column_total_width[0]/100;
global_master.class.php:			$this->column_bp_width_arr[$this->column_level][$bp]=array($curpercent,$curwidth);
global_master.class.php:     elseif ($this->is_clone)
global_master.class.php:          $this->rwd_build('col',$this->col_name);//this is necessary as it will generate the subsequent levels of column_bp_width_array
global_master.class.php:     $prime=$this->prime;
global_master.class.php:     $col_id=$this->col_id;
global_master.class.php:     $this->show_more('Column Options','noback','','',350); 
global_master.class.php:     $this->print_wrap('Col Opts',true);
global_master.class.php:     echo '<p class="highlight floatleft" title="Info: From parent nested column with Post Id#'.$this->blog_id.' Post Order#'.$this->blog_order_mod .' in Column '. $this->blog_table.'">Info</p>';
global_master.class.php:     $delete_msg=($this->blog_unstatus!=='unclone')?'Delete This Entire Column':'Remove this Mirror release Column';
global_master.class.php:     $delete_alert= ($this->col_status==='unclone')?"THIS MIRROR RELEASE COLUMN WILL BE DELETED AND THE PARENT CLONE WILL NOW BE EXPRESSED":'';
global_master.class.php:    (!$this->is_clone)&&printer::printx( '<p class="left warn1 floatleft neg"><input type="checkbox" name="deletecolumn['.$this->col_table.']" value="delete" onchange="edit_Proc.oncheck(\'deletecolumn['.$this->col_table.']\',\''.$delete_alert.' CAUTION THIS ENTIRE COLUMN AND ALL THE POSTS AND NESTED COLUMNS WITHIN IT WILL BE DELETED WHEN YOU HIT CHANGE, UNCHECK TO CANCEL\');gen_Proc.use_ajax(\''.Sys::Self.'?unclone_list_column='.$col_id.'@@del_col_unc_'.$col_id.'@@'.$this->primestat.'\',\'handle_replace\',\'get\');" >'.$delete_msg.'</p>');
global_master.class.php:     if (!$this->col_primary&&$this->blog_pub){
global_master.class.php:          printer::alertx('<p class="highlight floatleft" title="Turn Off Publication of this Column and all Posts and Nested Columns Within to Web Page"><input type="checkbox" value="0" name="'.$this->data.'_blog_pub">Un-Publish Entire Column</p>');
global_master.class.php:     (!$this->clone_local_style)&&printer::alertx('<p class="highlight floatleft" title="Turn On Publication for all Posts and Nested Columns Within this Column"><input type="checkbox" value="1" name="'.$this->col_name.'_express_pub">Express Publish Entire Column all Posts Within</p>'); 
global_master.class.php:     $this->show_more('Width &amp; float Options / RWD systems');
global_master.class.php:     $this->print_wrap('wrap width float rwd');
global_master.class.php:     printer::print_wrap1('width status',$this->column_lev_color);   
global_master.class.php:     if ($this->rwd_post) 
global_master.class.php:     if (!$this->rwd_post){
global_master.class.php:          if ($this->flex_box_mode)
global_master.class.php:          if ($this->use_col_main_width){
global_master.class.php:          $info=$this->check_spacing($this->col_options[$this->col_max_width_opt_index],'max-width');
global_master.class.php:          $info.=$this->check_spacing($this->col_options[$this->col_width_opt_index],'width');
global_master.class.php:          $info.=$this->check_spacing($this->col_options[$this->col_min_width_opt_index],'min-width');
global_master.class.php:     if ($this->column_level>0&&!$this->flex_box_mode){
global_master.class.php:          $this->show_more('Column Float Choices');
global_master.class.php:          printer::print_wrap1('wrap width float',$this->column_lev_color);
global_master.class.php:           $this->show_more('More Info..','noback','highlight editbackground editfont floatleft','Click Here For info on Post Horizontal Post Sharing (Floating)  Choices',400);
global_master.class.php:          printer::alertx('<p class="$this->column_lev_color fsminfo maxwidth500 floatleft editbackground editfont">By default in RWD grid mode columns will float left to share grid space allowed and non-Grid columns will occupy entire row. Change this default behavior to Manually choose whether this nest-column floats next to another nested column or posted content! <br>Note:
global_master.class.php:          $this->close_print_wrap('more info');
global_master.class.php:          $this->show_close('Float type Info..');
global_master.class.php:          $chosen=(in_array($this->blog_float,$this->position_arr))?$this->blog_float:'center_row';
global_master.class.php:          forms::form_dropdown($this->position_arr,$this->position_val_arr,'','',$this->data.'_blog_float',$chosen,false,'editcolor editbackground editfont left');
global_master.class.php:          $this->show_close('Column Float Choices');
global_master.class.php:     elseif($this->column_level<1)printer::printx('<p class="fsminfo editbackground editfont left '.$this->column_lev_color.'">Note: Primary Columns Are Always Aligned Centrally and do not share space with other columns or posts. Create columns and other post types within this column and share row space as needed using  RWD grids, flex-box, alternative widths, and masonry.js for desktop to mobile responsive layout. <p>'); 
global_master.class.php:     if ($this->column_level>0&&$this->column_use_grid_array[$this->column_level-1]==='use_grid'){#&&&&&&&&&&&&&&&&&&&&&&&&&&  BEGIN CLASS QUERY FOR  ACTIVE RWD POSTS  &&&&&&&&&&&&&&&&&&
global_master.class.php:          $this->rwd_build('col',$this->col_name); 
global_master.class.php:     if ($this->column_level>0&&!$this->rwd_post){
global_master.class.php:          $this->flex_items('col');
global_master.class.php:	 when not using rwd width is determined by directly choosing a width stored in col_width for columns or blog_width for normal posts..   col_width is a max px value for primary columns then a percentage for all nested columns.   RWD posts do not directly use these values but a tally of rwd grid percent values are stored  in $this->column_bp_width_arr once a rwd column is chosen and updated with grid percent for each successive column level.  
global_master.class.php:	 The selected RWD Grid values are then used to directly update col_width or blog_width and here we approximate that width corresponding to maxbp gives the maximum  width. Non RWD widths can then continue to be had and current net width percentages are used to update the $this->column_bp_width_arr. Percentages will always be true to value. If RWD is returned on after being on and off Widths should be calculated exactly accurate again for each bp. Haven yet tried this.  Similary, a running tally for max_width_limit is used to inform what is the max width limit for Rwd Grid breakpoints or when RWD is not used updated with the current_net_width_percent determined from col_width..
global_master.class.php:	$this->column_bp_width_track();
global_master.class.php:     if($this->column_use_grid_array[$this->column_level]!=='use_grid'){
global_master.class.php:          printer::print_wrap1('rwd mode',$this->column_lev_color);
global_master.class.php:          printer::printx('<p class="editbackground editfont highlight floatleft" title="Enable Responsive Web Sizing/Positioning for Posts Within This Column"><input type="checkbox" name="'.$this->col_name.'_col_options['.$this->col_use_grid_index.']" onclick="edit_Proc.displaythis(\''.$this->col_name.'_grid_show\',this,\'\')" value="use_grid">Enable RWD Positioning for Posts Within This Column</p>');
global_master.class.php:          if($this->column_use_flex_array[$this->column_level])
global_master.class.php:          printer::printx('<p class="editbackground editfont highlight left" '.$gridstyle.' title="Disable Responsive Web Sizing for Posts Within This Column"><input type="checkbox" name="'.$this->col_name.'_col_options['.$this->col_use_grid_index.']"  value="0">Disable RWD Grid Positioning for Posts Within This Column</p>');
global_master.class.php:     echo '<div id="'.$this->col_name.'_grid_show" '.$gridstyle.'><!--show Grid opts-->';
global_master.class.php:     $this->show_more('Grid info choice','noback','smaller editbackground editfont italic editcolor');
global_master.class.php:     $this->show_close('Grid info choice');
global_master.class.php:     $this->show_more('Change default Grid Units','noback');
global_master.class.php:     $this->mod_spacing($this->col_name.'_col_options['.$this->col_grid_units_index.']',$this->grid_units,12,200,1,'grid-units');
global_master.class.php:     $this->show_close('Change default Grid Units');
global_master.class.php:	if ($this->column_level==0||($this->column_level>0&&$this->column_use_grid_array[$this->column_level-1]!=='use_grid')){
global_master.class.php:		$msg=($this->column_level==0)?'Choose Maximum Display Width For this Top Level Column. Used for limiting Image Size and Content Displays on Larger Size Screens. Default is specified by the current page_width setting.' : ' RWD Grid Sizing for posts (incuding this nested column) is not enabled within the <b>Parent Column</b>. Manually narrow the maximum width of this Column Here'; 
global_master.class.php:		$this->column_main_width();
global_master.class.php:		$this->width_options('col',$this->col_name);
global_master.class.php:          $this->flex_container();
global_master.class.php:		$checked1=(!$this->is_masonry)?'checked="checked"':'';
global_master.class.php:		$checked2=($this->is_masonry)?'checked="checked"':'';
global_master.class.php:          $this->show_more('Masonry Option');
global_master.class.php:		$this->print_wrap('wrap masonry','maroon');
global_master.class.php:		if($this->column_use_grid_array[$this->column_level]==='use_grid')printer::print_warn('Note: RWD grid currently enabled which overrides masonry assist');
global_master.class.php:		printer::printx('<p><input type="radio" '.$checked1.' value="nomasonry" name="'.$this->col_name.'_col_options['.$this->col_enable_masonry_index.']">No Masonry</p>');
global_master.class.php:		printer::printx('<p><input type="radio" '.$checked2.' value="masonry" name="'.$this->col_name.'_col_options['.$this->col_enable_masonry_index.']">Enable Post Masonry Assist</p>'); 
global_master.class.php:		$this->close_print_wrap('wrap masonry' );
global_master.class.php:          $this->show_close('Masonry Option');
global_master.class.php:		$this->show_more('Primary Column Masonry Info');
global_master.class.php:		$this->show_close('Primary Column Masonry Info'); 
global_master.class.php:	$this->submit_button();
global_master.class.php:	$this->show_close('Width and float Options / RWD Grid System');
global_master.class.php:	$this->show_more('Import/Export Column Config Option');
global_master.class.php:	$this->print_wrap('import/export',true);
global_master.class.php:	echo '<div class="'.$this->column_lev_color.' fsminfo floatleft editbackground editfont left "><!--import-->Import Column Configurations and Column styles from another Column from any page. Will Not change the basic Data such Images, captions, text within your column';
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" title="Be Sure to Use the Column Id Which Begins with a C ie C11.  Do Not Use the  Col# which simply refer to the Column Display Order Within the Page. Col Ids and #s are displayed at the top of each column"><input class="editcolor editbackground editfont" name="col_configcopy['.$this->col_id.']" size="8" maxlength="8" type="text">Enter the  <span class="info">Col Id</span> <span class="red">(Not Col#) </span>that you wish to Copy Configurations and Styles</p>');
global_master.class.php:	if ($this->column_level>0){  
global_master.class.php:		echo '<div class="'.$this->column_lev_color.' fsminfo  editbackground editfont left "><!--export-->Export styles and configuration from this Nested Column post to any other Nested Column post that is directly within the same parent Column';
global_master.class.php:		printer::printx( '<p class="editcolor editbackground editfont" 	><input class="editcolor editbackground editfont" name="col_configexport['.$this->col_id.']"   type="checkbox" value="'.$this->col_id.'">Export these Styles and Configs to other nested column posts within this column</p>');
global_master.class.php:		echo '<div class="'.$this->column_lev_color.' fsminfo  editbackground editfont left "><!--import-->Import RWD Grid percentage selections  from another nested column post from any page that has the same Grid Break Points set in the page options.  ';
global_master.class.php:		printer::printx( '<p class="editcolor editbackground editfont" title="Be Sure to Use the Column Id Which Begins with a C ie C42.  Do Not Use the  Column# which simply refer to the Column Display Order Within the Primary Column. Column Ids and #s are displayed at the top of each post"><input class="editcolor editbackground editfont" name="col_rwdcopy['.$this->col_id.']" size="8" maxlength="8" type="text">Enter the  <span class="info">Column Id</span> <span class="red">(Not Column#) </span>that you wish to copy Column RWD grid break point percentages</p>');
global_master.class.php:		echo '<div class="'.$this->column_lev_color.' fsminfo  editbackground editfont left "><!--export-->Export RWD settings from this Nested Column to any other nested column post that is directly within the parent Column';
global_master.class.php:		printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="col_rwdexport['.$this->col_id.']"  type="checkbox" value="'.$this->col_id.'">Export this Columns RWD Grid settings to other nested columns directly within the parent column</p>');
global_master.class.php:		printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="col_post_rwdexport['.$this->col_id.']"  type="checkbox" value="'.$this->col_id.'">Also inlude exporting these nested column RWD GRID settings to non-nested post types also directly within the same parent column (will not affect posts within this nested column)</p>'); 
global_master.class.php:		echo '<div class="'.$this->column_lev_color.' fsminfo  editbackground editfont left "><!--export-->Export the Alternative RWD Width settings (affects posts in non-RWD grid mode) from this post to  posts that are directly within this Column';
global_master.class.php:		printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="col_altrwdexport['.$this->blog_id.']"  type="checkbox" value="'.$this->blog_id.'">Export the Alternative Width settings setting of this post to all posts directly in this column</p>');
global_master.class.php:     $this->show_close('Import Column Configurations Option');
global_master.class.php:	$this->show_more('Adjust default Vertical Positioning');
global_master.class.php:	$this->print_wrap('Adjust default Vertical');
global_master.class.php:	$current_vert_val=($this->col_options[$this->col_vert_pos_index]!=='middle'&&$this->col_options[$this->col_vert_pos_index]!=='bottom')?'top':$this->col_options[$this->col_vert_pos_index];
global_master.class.php:	forms::form_dropdown(array('top','middle','bottom'),'','','',$this->col_name.'_col_options['.$this->col_vert_pos_index.']',$current_vert_val,false,'editcolor editbackground editfont left');
global_master.class.php:	$this->css.="\n.". $this->col_dataCss.'{vertical-align:'.$current_vert_val.'}';
global_master.class.php:	$this->show_close('Adjust default Vertical Positioning');	
global_master.class.php:		$tag=(!empty($this->col_options[$this->col_tag_display_index]))?$this->col_options[$this->col_tag_display_index]:'';
global_master.class.php:	$this->show_more('Tagged Post Display');
global_master.class.php:		$this->print_wrap('tagged area');
global_master.class.php:		printer::printx('<div><p class="editcolor editbackground editfont info floatleft"><input type="text" value="'.$tag.'" name="'.$this->col_name.'_col_options['.$this->col_tag_display_index.']" size="20" maxlength="20">Enter Tags to Display Here (space separate):&nbsp;</p></div>');
global_master.class.php:	$this->show_close('Enter Tagged posts to dispaly only');
global_master.class.php:		$this->animation();
global_master.class.php:		$this->position();
global_master.class.php:          $this->overflow('col',$this->col_table);
global_master.class.php:          $this->height_style('col',$this->col_table);
global_master.class.php:		(!$prime)&&$this->display_state();//RWD control display_state
global_master.class.php:		$this->show_more('Transfer Clone Column');
global_master.class.php:	$this->print_wrap('clone transfer');
global_master.class.php:	echo '<p class="highlight Os3darkslategray fsmyellow editbackground editfont click floatleft" title="View Pages with clones of this column" onclick="gen_Proc.use_ajax(\''.Sys::Self.'?check_clones='.$this->col_id.'&amp;check_id=check_clones_'.self::$xyz.'\',\'handle_replace\',\'get\');" >Click to display Pages with Clones of this Column</p>';
global_master.class.php:	printer::print_tip('If this Column is directly cloned ie. used as a template you can change the template to another Column by entering its Column Id and submitting.  All the former Column Clones of id C'.$this->col_id.' will then be changed to the new template and unmirrored content if any is retrieved by importing the unmirorred post/col.');
global_master.class.php:	($this->col_primary)&&printer::print_caution('Clone Transfer of a Primary Column to a Nested Column will reset the nested column to the default Page Width configuration on the cloned page rendering',.8);
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" title="Be Sure to Use the Column Id Which Begins with a C ie C11.  Do Not Use the  Col# which simply refer to the Column Display Order Within the Page. Col Ids and #s are displayed at the top of each column"><input class="editcolor editbackground editfont" name="col_transfer_clone['.$this->col_id.']" size="8" maxlength="8" type="text">Enter the new <span class="info">Col Id</span> <span class="red">(Not Col#) </span>that you wish to Clone Transfer to</p>');
global_master.class.php:	$this->show_close('Transfer Clone Column');
global_master.class.php:     $this->submit_button();
global_master.class.php:     $this->show_close('Column Options');echo '<!--column options-->';
global_master.class.php:	if(!$this->edit)return;
global_master.class.php:     $this->{$data.'_blog_options'}=$this->blog_options;//for passing name array directly to style functions  
global_master.class.php:	if ($this->is_clone&&!$this->clone_local_style){
global_master.class.php:          $this->alt_respond('blog',$data); 
global_master.class.php:	elseif ($this->is_clone&&!$this->clone_local_style)return; 
global_master.class.php:	$this->show_more('Post Settings','buffer_post_settings_'.$this->blog_id,'','',500,'','float:left;',true);
global_master.class.php:	$this->print_wrap('blog opts',true);
global_master.class.php:	$this->delete_option();
global_master.class.php:	if ($this->blog_pub){
global_master.class.php:		printer::alertx('<p class="highlight floatleft" title="Turn Off Publication of this Post to Web Page"><input type="checkbox" value="0" name="'.$this->data.'_blog_pub"> Un-Publish Post to WebPages</p>');
global_master.class.php:	if (!empty($this->blog_border_start)){
global_master.class.php:	 if (!empty($this->blog_border_stop)){
global_master.class.php:	if ($this->blog_type==='float_image_left'||$this->blog_type==='float_image_right'||$this->blog_type==='text'){
global_master.class.php:		$msg=($this->blog_options[$this->blog_editor_use_index]==='use_editor')?'Toggle TinyMCE Editor':'Keep On TinyMCE Editor';
global_master.class.php:		if ($this->blog_options[$this->blog_editor_use_index]==='use_editor')	
global_master.class.php:			echo '<p class="highlight floatleft" title="Check to Utilize TinyMCE only when needed and submit with other changes"><input type="checkbox" name="'.$data.'_blog_options['.$this->blog_editor_use_index.']" value="0">'.$msg.'</p>';
global_master.class.php:		else echo '<p class="highlight floatleft" title="Check to keep TinyMCE Editor On in addition to the normal editing options below this post then submit to commit along with other changes on the page"><input type="checkbox" name="'.$data.'_blog_options['.$this->blog_editor_use_index.']" value="use_editor">&nbsp;'.$msg.'</p>';
global_master.class.php:		if ($this->blog_options[$this->blog_comment_index]==='comment_on') 
global_master.class.php:			printer::printx ('<p class="highlight floatleft" title="Check to Turn off the display of Viewing Comments for this Post"><input type="checkbox" name="'.$data.'_blog_options['.$this->blog_comment_index.']" value="0">Turn off Commenting </p>');
global_master.class.php:		else printer::printx ('<p onclick="edit_Proc.displaythis(\''.$data.'_comments_show\',this,\'\')"  class="highlight floatleft" title="Check to enable Viewers to Submit for Display Comments to this Post"><input type="checkbox" name="'.$data.'_blog_options['.$this->blog_comment_index.']" value="comment_on">Allow Commenting</p>');
global_master.class.php:		$genstyle=($this->blog_options[$this->blog_comment_index]==='comment_on')?'style="display:block;"':'style="display:none;"';
global_master.class.php:		$checked1=($this->blog_options[$this->blog_comment_display_index]!=='display_comment')?'checked="checked"':'';
global_master.class.php:		$checked2=($this->blog_options[$this->blog_comment_display_index]==='display_comment')?'checked="checked"':'';
global_master.class.php:		printer::printx('<p id="'.$data.'_comments_show" class="editcolor editbackground editfont" '.$genstyle.'><input type="radio" '.$checked1.' name="'.$data.'_blog_options['.$this->blog_comment_display_index.']" value="0">Hide-n-Click to Open Comments<br><input type="radio" '.$checked2.' name="'.$data.'_blog_options['.$this->blog_comment_display_index.']" value="display_comment" >Display Comments Directly</p>');
global_master.class.php:	if ($this->blog_options[$this->blog_date_on_index]==='date_on') 
global_master.class.php:		printer::printx('<p class="'.$this->column_lev_color.'"><input type="checkbox" name="'.$data.'_blog_options['.$this->blog_date_on_index.']" value="0">Turn Off Date Display</p>');
global_master.class.php:	else	printer::printx('<p class="highlight editbackground editfont" title="Display the Posted Date" ><input type="checkbox" name="'.$data.'_blog_options['.$this->blog_date_on_index.']" value="date_on">Turn On Current Post Date Display</p>');
global_master.class.php:	$this->show_more('Width and float Options / RWD Grid System');
global_master.class.php:	$this->print_wrap('width and float post options');
global_master.class.php:     if (!$this->flex_box_mode){
global_master.class.php:          $this->show_more('Share Row Space Float Mode');
global_master.class.php:		printer::alertx('<div class="'.$this->column_lev_color.' maxwidth400  floatleft left fsminfo editbackground editfont">Share Horizontal Space');
global_master.class.php:		$this->show_more('Float Info..','noback','highlight editbackground editfont floatleft','Click Here For More info on Post Horizontal Share (Floating)  Choices',400);
global_master.class.php:		$this->show_close('Post Position Choices');//<!--Show More Post Position Choices-->';
global_master.class.php:		$chosen=(in_array($this->blog_float,$this->position_arr))?$this->blog_float:'center_row';
global_master.class.php:		forms::form_dropdown($this->position_arr,$this->position_val_arr,'','',$data.'_blog_float',str_replace('_',' ',$chosen),false,'ramana');
global_master.class.php:          $this->show_close('Share Row Space float Mode');
global_master.class.php:     printer::print_wrap1('width status',$this->column_lev_color);   
global_master.class.php:     if ($this->rwd_post) 
global_master.class.php:     if (!$this->rwd_post){ 
global_master.class.php:          if ($this->flex_box_mode)
global_master.class.php:         if ($this->use_blog_main_width) 
global_master.class.php:               if($this->flex_box_mode)
global_master.class.php:          }//!$this->rwd_post
global_master.class.php:	$info=$this->check_spacing($this->blog_options[$this->blog_max_width_opt_index],'max-width');
global_master.class.php:	$info.=$this->check_spacing($this->blog_options[$this->blog_width_opt_index],'width');
global_master.class.php:	$info.=$this->check_spacing($this->blog_options[$this->blog_min_width_opt_index],'min-width');
global_master.class.php:     if (empty($info))printer::print_info('No Active alt width units em, rem,  %, px  sizing this '.$this->blog_typed);
global_master.class.php:     if ($this->flex_box_mode)$this->flex_items('blog');
global_master.class.php:     if (!$this->flex_box_mode&&!$this->rwd_post){
global_master.class.php:          $this->show_more('Choose Main Width Options');
global_master.class.php:          if ($this->rwd_post){//regular mode...
global_master.class.php:          else if ($this->scale_width_enabled){
global_master.class.php:          else if ($this->flex_box_mode){
global_master.class.php:               $this->blog_width=(is_numeric($this->blog_width))?$this->blog_width:0;
global_master.class.php:               $this->{$data.'_blog_width_arrayed'}=explode(',',$this->blog_width);
global_master.class.php:               $this->width($data.'_blog_width_arrayed',0);
global_master.class.php:               $this->alt_respond('blog');   
global_master.class.php:          $this->show_close('Choose Max-width &amp width% with min-width options');
global_master.class.php:     $this->width_options('blog',$this->data);
global_master.class.php:	if ($this->rwd_post){//using RWD select classes
global_master.class.php:		$this->rwd_build('blog',$data);
global_master.class.php:     else if ($this->flex_box_mode){
global_master.class.php:	$this->submit_button();
global_master.class.php:	$this->close_print_wrap('width and float post options'); 
global_master.class.php:	$this->show_close('Width and float Options / RWD Grid System');
global_master.class.php:	$this->animation();
global_master.class.php:	$this->show_more('Import/Export Styles &amp; Configurations Option');
global_master.class.php:	$this->print_wrap('import/export',true);
global_master.class.php:	echo '<div class="'.$this->column_lev_color.' fsminfo  editbackground editfont left "><!--import-->Import to this post only all styles and certain configuration from another '.$this->blog_type.' post from any page. <b>Will Not change configurations for width, Rwd Grid settings, height, and alternative RWD settings,check the additional box directly to import these also,  or these can be changed separately below. Will not change basic data such as Image Names and caption data, feedback, text, etc.</b> Post types must match.';
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" title="Be Sure to Use the Post Id Which Begins with a P ie P42.  Do Not Use the  Post# which simply refer to the Post Display Order Within the Column. Post Ids and #s are displayed at the top of each post"><input class="editcolor editbackground editfont" name="post_configcopy['.$this->blog_id.']" size="8" maxlength="8" type="text">Enter the  <span class="info">Post Id</span> <span class="red">(Not Post#) </span>that you wish to Copy Configurations and Styles to this post</p>');
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" 	><input class="editcolor editbackground editfont" name="post_allconfigcopy['.$this->blog_id.']"   type="checkbox" value="'.$this->blog_id.'">Copy Include <b> All Width and RWD Configs</b> to this post also.</p>');
global_master.class.php:	echo '<div class="'.$this->column_lev_color.' fsminfo  editbackground editfont left "><!--export-->Export styles and configuration (<b>Will Not change configurations for width, Rwd Grid settings, height, and alternative RWD settings, or click the additional option just below to includes thes also. Alternatively, these can be changed separately below.  Will not change basic data such as Image Names and caption data, feedback, text, etc.</b>) from this '.$this->blog_type.' post to any other '.$this->blog_type.' post that is directly within this Column Post types must match.';
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" 	><input class="editcolor editbackground editfont" name="post_configexport['.$this->blog_id.']"   type="checkbox" value="'.$this->blog_id.'">Export these Styles and Configs to '.$this->blog_type.' posts within this column</p>');
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" 	><input class="editcolor editbackground editfont" name="post_allconfigexport['.$this->blog_id.']"   type="checkbox" value="'.$this->blog_id.'">Also Include Exporting <b> All  Width and RWD Configs</b> to '.$this->blog_type.' posts within this parent column</p>');
global_master.class.php:	echo '<div class="'.$this->column_lev_color.' fsminfo  editbackground editfont left "><!--import-->Import RWD Grid percentage selections  from another non nested column post from any page that has the same   Grid Break Points set in the page options.  ';
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" title="Be Sure to Use the Post Id Which Begins with a P ie P42.  Do Not Use the  Post# which simply refer to the Post Display Order Within the Column. Post Ids and #s are displayed at the top of each post"><input class="editcolor editbackground editfont" name="post_rwdcopy['.$this->blog_id.']" size="8" maxlength="8" type="text">Enter the  <span class="info">Post Id</span> <span class="red">(Not Post#) </span>that you wish to copy Post RWD grid break point percentages</p>');
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" 	><input class="editcolor editbackground editfont" name="post_allconfigcopy['.$this->blog_id.']"   type="checkbox" value="'.$this->blog_id.'">Also Include Importing <b> All  Width and RWD Configs</b> to this post</p>'); 
global_master.class.php:	echo '<div class="'.$this->column_lev_color.' fsminfo  editbackground editfont left "><!--export-->Export RWD settings from this  post to any other non nested column post that is directly within this Column';
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="post_rwdexport['.$this->blog_id.']"  type="checkbox" value="'.$this->blog_id.'">Export this Posts RWD Grid settings to other posts within this column</p>');
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="post_col_rwdexport['.$this->blog_id.']"  type="checkbox" value="'.$this->blog_id.'">Also include RWD Grid export to Nested Columns directly in same parent </p>');
global_master.class.php:	echo '<div class="'.$this->column_lev_color.' fsminfo  editbackground editfont left "><!--export-->Export the Alternative RWD Width settings (affects posts in non-RWD grid mode) from this post to  posts that are directly within this Column';
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="post_altrwdexport['.$this->blog_id.']"  type="checkbox" value="'.$this->blog_id.'">Export the Alternative Width settings setting of this post to all posts directly in this column</p>');
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="post_col_altrwdexport['.$this->blog_id.']"  type="checkbox" value="'.$this->blog_id.'">Also include Alt RWD export to Nested Columns directly in same parent </p>');
global_master.class.php:	echo '<div class="'.$this->column_lev_color.' fsminfo  editbackground editfont left "><!--export-->Export the Width setting (affects posts in non-rwd grid mode) from this post to posts that are directly within this Column';
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="post_widthexport['.$this->blog_id.']"  type="checkbox" value="'.$this->blog_id.'">Export the width setting of this post to all posts directly in this column</p>'); 
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="post_col_widthexport['.$this->blog_id.']"  type="checkbox" value="'.$this->blog_id.'">Also include Width setting export to Nested Columns directly in same parent </p>');
global_master.class.php:	echo '<div class="'.$this->column_lev_color.' fsminfo  editbackground editfont left "><!--export-->Export the Height setting from this post to all posts including nested column that are directly within this Column';
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="post_heightexport['.$this->blog_id.']"  type="checkbox" value="'.$this->blog_id.'">Export the height setting of this post to all posts directly in this column</p>');
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="post_col_heightexport['.$this->blog_id.']"  type="checkbox" value="'.$this->blog_id.'">Also include Height setting export to Nested Columns directly in same parent column</p>');
global_master.class.php:	echo '<div class="'.$this->column_lev_color.' fsminfo  editbackground editfont left "><!--export-->Export the  Float row share setting (affects posts in non-rwd grid mode) from this post to all posts including nested column that are directly within this Column';
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="post_floatexport['.$this->blog_id.']"  type="checkbox" value="'.$this->blog_id.'">Export the Float setting of this post to all posts directly in this column</p>');
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" ><input class="editcolor editbackground editfont" name="post_col_floatexport['.$this->blog_id.']"  type="checkbox" value="'.$this->blog_id.'">Also include Float setting export to Nested Columns directly in same parent </p>');
global_master.class.php:	$this->show_more('Inter-Database Export/Import Configs/Settings');
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" 	><input class="editcolor editbackground editfont" name="post_configexportdump['.$this->blog_id.']"   type="checkbox" value="'.$this->blog_id.'">Export Dump these Styles and Config Settings to file.</p>');
global_master.class.php:	printer::printx( '<p class="editcolor editbackground editfont" 	><input class="editcolor editbackground editfont" name="post_configimportdump['.$this->blog_id.']"   type="checkbox" value="'.$this->blog_id.'">Import Grab Style and Cofigure Settings from file '.$dir.'lastpostdump.dat</p>');
global_master.class.php:	$this->show_close('Inter-Database Export/Import Configs/Settings');
global_master.class.php:	$this->submit_button();
global_master.class.php:	$this->show_close('Import All Styles &amp; Configurations Option');
global_master.class.php:	$this->display_state();//RWD control display_state 
global_master.class.php:	$this->blog_height_arr[$this->blog_height_index]=($this->blog_height_arr[$this->blog_height_index]>=10||$this->blog_height_arr[$this->blog_height_index]<=$maxheight)?$this->blog_height_arr[$this->blog_height_index]:'none';
global_master.class.php:	$this->position();
global_master.class.php:	$this->show_more('Vertical Align Posts');
global_master.class.php:     printer::alertx('<div class="'.$this->column_lev_color.' fsminfo maxwidth500 floatleft editbackground editfont">By Default Posts will Vertically Top Align with Other Posts within the Parent Column. Change that Default Here '); 
global_master.class.php:     $current_vert_val=($this->blog_options[$this->blog_vert_pos_index]!=='middle'&&$this->blog_options[$this->blog_vert_pos_index]!=='bottom')?'top':$this->blog_options[$this->blog_vert_pos_index];
global_master.class.php:     forms::form_dropdown(array('top','middle','bottom'),'','','',$data.'_blog_options['.$this->blog_vert_pos_index.']',$current_vert_val,false,'editcolor editbackground editfont left');
global_master.class.php:     $this->css.="\n.".$this->dataCss.'{vertical-align:'.$current_vert_val.'}';
global_master.class.php:     $this->show_close('Vertical Align Posts');
global_master.class.php:     $this->overflow('blog',$this->data);
global_master.class.php:	$this->height_style('blog',$this->data);
global_master.class.php:	printer::printx('<p title="Enter an optional tag for this post. All posts with the tag will be displayed if you set a  column with matching tag to display. Enter more than one tag as required.">Tag this Post:&nbsp;<input type="text" value="'.$this->blog_tag.'" name="'.$data.'_blog_tag" size="20" maxlength="40"></p>');
global_master.class.php:	$this->submit_button();
global_master.class.php:	$this->show_close('Post Settings','buffer_post_settings_'.$this->blog_id);echo '<!--Post Options-->';
global_master.class.php:	if (in_array($col_id,$this->column_moved))return; 
global_master.class.php:	$this->col_id=$col_id;
global_master.class.php:	$this->col_table_base=$col_table_base;
global_master.class.php:          $this->fieldmax=0;
global_master.class.php:		$this->col_options=(!is_array($this->col_options))?explode(',',$this->col_options):$this->col_options;
global_master.class.php:			if (!array_key_exists($i,$this->col_options))$this->col_options[$i]=0;
global_master.class.php:          $this->total_float(true);//initiates some prime column values concerning the total width including borders margins padding etc.
global_master.class.php:	$this->is_masonry=false;
global_master.class.php:	$this->blog_border_stop=false;
global_master.class.php:	$this->clone_ext=($this->is_clone&&$this->clone_local_style)?'clone_':'';
global_master.class.php:          $this->col_dataCss=$this->clone_ext.$this->col_table_base.'_col_'.$col_id;//this will be updated with new values just before # nested_column div is rendered to file with the new values for the next round...
global_master.class.php:          $this->pelement=".$this->col_dataCss.primary";//set for nested column types
global_master.class.php:          if ($this->edit&&$this->use_col_main_width){
global_master.class.php:               $this->css.="$this->pelement {max-width: {$this->current_total_width}px;}";
global_master.class.php:          ($this->edit)&&$this->id_array[]=array('col',$this->col_dataCss,$this->column_level,'column id: c'.$this->col_id);
global_master.class.php:	$this->sibling_id_arr[$this->column_level]['c'.$col_id]=$this->col_dataCss;
global_master.class.php:	if ($col_table_base!==$this->pagename&&!$this->clone_local_style)
global_master.class.php:	$this->page_stylesheet_inc[]=$col_table_base; 
global_master.class.php:	$this->is_column=true;
global_master.class.php:	$this->is_clone=(array_key_exists($this->column_level,$this->column_clone_status_arr))?(($this->column_clone_status_arr[$this->column_level])?true:false):false;
global_master.class.php:	($this->edit)&&$this->column_lev_color=$this->color_arr_long[$this->column_level];
global_master.class.php:	//$class=($this->edit)?"border4 borderridge  $this->column_lev_color":'';// change this and style store.........................
global_master.class.php:	if ($this->edit){
global_master.class.php:		if(isset($_POST['submitted'])&&!$this->is_clone){
global_master.class.php:			$this->process_blog($tablename,$col_id);
global_master.class.php:		if(isset($_POST['submitted'])&&in_array($col_id,$this->delete_col_arr))return;//column has been deleted
global_master.class.php:	if($prime&&!$this->edit){
global_master.class.php:		print '<div id="'.$this->col_dataCss.'"  class="'.$this->col_dataCss. ' primary" '.$style.'><!--Begin Primary Column id'.($this->col_id).'-->';
global_master.class.php:		list($bw,$bh)=$this->border_calc($this->col_style);
global_master.class.php:			$bs=$this->calc_border_shadow($this->col_style);
global_master.class.php:		$addclass=(empty($bw))?' bdot'.$this->page_editborder.$this->column_lev_color.' ':((empty($bs))?' bshad'.$this->page_editborder.$this->column_lev_color.' ':'editcol');
global_master.class.php:		print '<div  id="'.$this->col_dataCss.'" class="'.$addclass.' '.$this->col_dataCss.' primary column edit editdefaultcol" '.$style.'><p class="lineh90 shadowoff editcolor editfont editbackground ">Primary Column</p><!--Begin edit  Primary Column id'.($this->col_id).'-->';
global_master.class.php:		list($padding_total,$margin_total)=$this->pad_mar_calc($this->col_style,$this->column_total_width[$this->column_level]);
global_master.class.php:		$this->css.='
global_master.class.php:		@media screen and (min-width:'.($margin_total+$this->current_total_width).'px){
global_master.class.php:			 .'.$this->col_dataCss.'.primary{margin-left:auto;margin-right:auto;}
global_master.class.php:		if (!$this->is_clone){
global_master.class.php:			$collect['blog_data1']=$this->col_id;
global_master.class.php:			(!Sys::Pass_class&&!$this->is_clone)&&file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'post_subbed_row_data_col_'.$this->col_id,serialize($collect));//this fits with post_subbed_row  .$subbed_row_id for columns
global_master.class.php:			$collect_col_data_arr=array();//all clones will use/access the parent column id as well for accessing the parent column data ie. (column_data_'.$this->col_id). Note for cloned columns:  cloned and local enabled styling and configs for clones will generate a further set of data within this method which will sub-out any style/config fields of the parent.
global_master.class.php:			foreach ($this->col_field_arr as $field) {
global_master.class.php:				$collect_col_data_arr[$field]=$this->$field;//for flat file webpage use.. 
global_master.class.php:			$collect_col_data_arr['col_id']=$this->col_id;//add in the col_id as well..
global_master.class.php:			file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'column_data_'.$this->col_id,serialize($collect_col_data_arr));
global_master.class.php:		$this->fieldmax=0;
global_master.class.php:		$col_field_arr2=$this->col_field_arr;
global_master.class.php:			$append_arr['obj'][$ov]=$this->$ov;
global_master.class.php:		$appfile=Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'post_append_data_'.$this->pagename.'_'.$this->col_id; 
global_master.class.php:	foreach ($this->col_field_arr as $field) {
global_master.class.php:		${'restore_'.$field}=$this->$field; 
global_master.class.php:	${'restore_col_id'}=$this->col_id;
global_master.class.php:	$this->background_image_px=0;
global_master.class.php:	$this->is_blog=false;
global_master.class.php:	$this->col_data($prime);# this is primary call to col_data#################
global_master.class.php:	 $this->is_column=false;
global_master.class.php:	$this->previous_post='';
global_master.class.php:	$this->blog_status=false;
global_master.class.php:	if (!empty(trim($this->col_options[$this->col_tag_display_index]))){
global_master.class.php:		$this->tagged=true;
global_master.class.php:		$this->is_clone=$this->column_clone_status_arr[$this->column_level]=true;//set tagged posts to clone status ie no editing
global_master.class.php:		$tag=trim($this->col_options[$this->col_tag_display_index]);
global_master.class.php:			$like='%'.trim($this->col_options[$this->col_tag_display_index]).'%';
global_master.class.php:		$q="select $start_fields from $this->master_post_table $where";  
global_master.class.php:		$this->tagged=false;
global_master.class.php:		$q="select $start_fields from $this->master_post_table  $where  order by blog_order";
global_master.class.php:	$col_identify='col_'.$this->col_id; 
global_master.class.php:	if ($this->edit||$prime){
global_master.class.php:		$count=$this->mysqlinst->count_field($this->master_post_table,'blog_order','',false, $where);
global_master.class.php:		$this->fieldmax=$this->mysqlinst->get('fieldmax');
global_master.class.php:				if ($this->edit){//edit re check is redundant for flat file system  
global_master.class.php:					$count=$this->mysqlinst->count_field($this->master_post_table,'blog_order','',false, $where);
global_master.class.php:						echo '<p class="red addheight rad10 whitebackground small floatleft">Caution: Because posts tagged with "'.$this->col_options[$this->col_tag_display_index].'" were chosen in the Column Options to display here '.$count.' number of posts already made in this column but without this tag are not being displayed here.</p>';   
global_master.class.php:				if ($this->edit)echo '<p class="red addheight rad10 whitebackground small floatleft">Currently, there are no posts tagged with any of the  words: "'.$this->col_options[$this->col_tag_display_index].'" to display here!</p>'; 
global_master.class.php:			elseif($this->edit) {//not tags
global_master.class.php:				printer::printx('<p class="editbackground editfont editcolor floatleft fs2info">'.$colmsg. ' Choose Below your First Post Type or Nested Column for your New Column from the dropdown Menu',false,'left large '.$this->column_lev_color.'</p>');
global_master.class.php:				$this->blog_new($tablename.'_0',$tablename,0,'','Insert Post Top of',true);
global_master.class.php:			if ($this->edit&&is_file($columnArrayFile))unlink($columnArrayFile); 
global_master.class.php:			$this->col_return=true; //table lacks posts...
global_master.class.php:			($this->edit)&&printer::pclear(1);echo '<!--clear choose first 2-->';
global_master.class.php:			if($this->edit&&$prime)
global_master.class.php:				print'</div><!--End Empty Primary Column id'.$this->col_id.'  -->';
global_master.class.php:				print'</div><!--End Empty Div Primary Column id'.$this->col_id.'-->';
global_master.class.php:			$this->col_table==='none';
global_master.class.php:	if($this->edit||Sys::Pass_class){  
global_master.class.php:          $this->blog_new($tablename.'_0',$tablename,0,'','Insert Post Top of',true); 
global_master.class.php:		$rpost=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_master.class.php:		while($mainrow=$this->mysqlinst->fetch_assoc($rpost,__LINE__)){#while
global_master.class.php:			$this->blog_tidy($tablename);  
global_master.class.php:			$rpost2=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_master.class.php:			while($mainrow=$this->mysqlinst->fetch_assoc($rpost2,__LINE__)){#while 
global_master.class.php:		$this->orig_val['blog_id']=$orig_val['blog_id']; 
global_master.class.php:		if ($this->edit||Sys::Pass_class){#begin big#big begin/begin big edit
global_master.class.php:			$this->orig_val=$orig_val; 
global_master.class.php:			$this->is_clone=(array_key_exists($this->column_level,$this->column_clone_status_arr)&&$this->column_clone_status_arr[$this->column_level])?true:false;
global_master.class.php:			$this->clone_local_style=false; //set default 
global_master.class.php:			$this->clone_local_data=false; //set default 
global_master.class.php:			if (isset($this->blog_moved[$orig_val['blog_id']]))continue;
global_master.class.php:			if ($orig_val['blog_type']==='nested_column'&&isset($this->nested_col_moved[$orig_val['blog_data1']]))continue;//allow for moving of column... 
global_master.class.php:			$this->background_image_px=0;//set default width for background images
global_master.class.php:				$this->blog_id=$orig_val['blog_id'];
global_master.class.php:				$this->blog_table=$orig_val['blog_table'];
global_master.class.php:				$this->blog_order=$orig_val['blog_order'];
global_master.class.php:				$this->blog_col=$orig_val['blog_col'];
global_master.class.php:				$this->blog_order_mod=$orig_val['blog_order']/10;
global_master.class.php:				$this->blog_table_base=$orig_val['blog_table_base'];
global_master.class.php:				$this->blog_unstatus=false;
global_master.class.php:				$this->choose_post();
global_master.class.php:			$this->overlapbutton=false;//when mulitple posts with background image opacity  set the element is set to position relative and may prevent overlapping
global_master.class.php:			$this->is_blog=true;//true for all will be reset for nested columns...
global_master.class.php:			$this->column_clone_status_arr[$this->column_level+1]=(array_key_exists($this->column_level,$this->column_clone_status_arr)&&$this->column_clone_status_arr[$this->column_level])?true:false;// set initial then check clone status 
global_master.class.php:                    $this->is_clone=true;
global_master.class.php:					$q="select blog_type,blog_id,blog_order, blog_table from $this->master_post_table  where blog_id='".$orig_val['blog_clone_target']."'";
global_master.class.php:					$this->post_target_clone_column_id=$orig_val['blog_clone_target'];// used for uncloning options
global_master.class.php:					$q="select blog_type,blog_id,blog_order, blog_table from $this->master_post_table  where blog_type='nested_column' and blog_status!='clone' and blog_data1='{$orig_val['blog_data1']}'"; // blog_data1 subbed in and refers to parent clone column col_id && parent  clone post blog_data1 values.
global_master.class.php:					$this->is_clone=$this->column_clone_status_arr[$this->column_level+1]=true;//child column level is now to be marked as is_clone.. remember column_level will not change till method nested_column calls the blog_render function for that upcoming col_id...
global_master.class.php:				$cl=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_master.class.php:				if ($this->mysqlinst->affected_rows()) {
global_master.class.php:					list ($blog_type,$blog_id,$blog_order, $blog_table)=$this->mysqlinst->fetch_row($cl,__LINE__,__method__);
global_master.class.php:					//$clone_val=$this->mysqlinst->fetch_assoc($unc,__LINE__,__method__);
global_master.class.php:						$this->delete($this->master_post_table,"where blog_id=$blog_id",'message',$msg);
global_master.class.php:						$count=$this->mysqlinst->count_field($this->master_col_table,'col_id','',false, $where);
global_master.class.php:							$this->delete($this->master_post_table,"where blog_id=$blog_id",'message',$msg);
global_master.class.php:				if ($this->col_status!=='clone'){   
global_master.class.php:			if ($this->is_clone &&$orig_val['blog_status']!=='unclone'){#check for unclone in cloned nested column
global_master.class.php:				$q="select blog_type,blog_order,blog_table,blog_data1,blog_status,blog_clone_target,blog_id,blog_data2 from $this->master_post_table  where blog_unstatus='unclone' and blog_table_base='$this->pagename' and blog_unclone='$blog_id' limit 1";  
global_master.class.php:				$unc=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_master.class.php:				if ($this->mysqlinst->affected_rows()) {
global_master.class.php:                         $this->is_clone=false;//uncloned posts not consider cloned anymore and open for full editing unless recloned immediately which will change status
global_master.class.php:					list ($blog_type,$blog_order,$blog_table,$blog_data1,$blog_status,$blog_clone_target,$blog_id,$blog_data2)=$this->mysqlinst->fetch_row($unc,__LINE__,__method__); // the unclone data itself will be sent as it contains the relevant info!
global_master.class.php:							$this->delete_blog($blog_table);  
global_master.class.php:							$this->blog_id=$blog_id;
global_master.class.php:							$this->blog_table=$blog_table;
global_master.class.php:							$this->blog_order=$blog_order;
global_master.class.php:							$this->blog_col=$orig_val['blog_col'];
global_master.class.php:							$this->blog_order_mod=$orig_val['blog_order']/10;
global_master.class.php:							$this->blog_table_base=$this->pagename;
global_master.class.php:							$this->choose_post();
global_master.class.php:							$q="select blog_id,blog_table, blog_order from $this->master_post_table where blog_data1='$blog_data1' and blog_status !='clone'";//make sure not to reselect unclone record  and here we getting important clone values for editpage_obj
global_master.class.php:							$q="select blog_id,blog_table, blog_order from $this->master_post_table where blog_id='$blog_clone_target'";
global_master.class.php:						$ucc=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_master.class.php:						if ($this->mysqlinst->affected_rows()){
global_master.class.php:							list($blog_id,$blog_table,$blog_order)=$this->mysqlinst->fetch_row($ucc);//getting critical values for calling editpages_obj
global_master.class.php:						$this->is_clone=true;
global_master.class.php:						$this->current_unclone_table[]=$unc_record;
global_master.class.php:						$this->current_unclone_table[]=$blog_id;
global_master.class.php:						($blog_status!=='clone')&&$this->process_blog($blog_table,$col_id);//clone_local_style and clone_local_data will do own processing checks..
global_master.class.php:					$this->current_unclone_table[]=$blog_id; //for checking orphans if parent of unclone post is ever deleted
global_master.class.php:			$this->blog_order_mod=$blog_order/$this->insert_full; #for data presentation 
global_master.class.php:			$this->editpages_obj($this->master_post_table,'blog_id,'.Cfg::Post_fields,'','blog_order',$blog_order,'blog_table',$blog_table,'populate_data');
global_master.class.php:			if ($this->blog_type==='nested_column'){
global_master.class.php:					$this->is_clone=true;//so clone is uncloned then recloned!!!    
global_master.class.php:					$this->column_clone_status_arr[$this->column_level+1]=true;
global_master.class.php:					$this->is_clone=false; //switch off clone status
global_master.class.php:					$this->column_clone_status_arr[$this->column_level+1]=false;//child column level is now to be marked as !is_clone...
global_master.class.php:				if($this->blog_data2==='column_choice'){
global_master.class.php:					$this->choose_column($this->blog_id,true); 
global_master.class.php:				$this->col_id=$this->blog_data1; 
global_master.class.php:				$col_field_arr2=$this->col_field_arr;
global_master.class.php:				$q='select '.Cfg::Col_fields." from $this->master_col_table where col_id='$this->blog_data1'";  
global_master.class.php:				$pp=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_master.class.php:				if (!$this->mysqlinst->affected_rows()){  
global_master.class.php:					printer::alert_neg('The Parent Column Id c'.$this->blog_data1.' Has Been Deleted and This Cloned Column Will No Longer Display.');
global_master.class.php:					$q="delete from $this->master_post_table where blog_data1='$this->blog_data1'";   
global_master.class.php:					$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_master.class.php:					$row=$this->mysqlinst->fetch_assoc($pp,__LINE__,__METHOD__); 
global_master.class.php:					foreach ($this->col_field_arr as $field) { 
global_master.class.php:						$this->$field=$row[$field];// create upcoming nested column values; these values will be further substituted for css cloning options below if initiatited...
global_master.class.php:					$collect_col_data_arr['col_id']=$this->blog_data1;
global_master.class.php:					if (!$this->is_clone) file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'column_data_'.$this->blog_data1,serialize($collect_col_data_arr));//stores info for primary columns used as nested columns in clones of the primary col also
global_master.class.php:				$this->col_primary=false;//primary has done its work. Any cloned primary now nested
global_master.class.php:			#So we select for matching record tied to this page ie this->pagename which probably be this->page not this->pagename as system setup has changed..
global_master.class.php:			if ($this->is_clone){ //#clonestyle 
global_master.class.php:				$this->blog_clone_target=$orig_val['blog_clone_target'];   
global_master.class.php:				$this->blog_target_table_base=$orig_val['blog_target_table_base'];
global_master.class.php:				$this->blog_status=$blog_status;  
global_master.class.php:				if 	($this->blog_type!=='nested_column'){  
global_master.class.php:						$q="delete from $this->master_post_css_table Where blog_id='p$blog_id' and blog_table_base='$this->pagename'";
global_master.class.php:						$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_master.class.php:						$this->clone_local_style=false;
global_master.class.php:                              if (is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'blog_clone_local_style_'.$this->pagename.'_'.$this->blog_id))
global_master.class.php:                                   unlink(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'blog_clone_local_style_'.$this->pagename.'_'.$this->blog_id);
global_master.class.php:						$count=$this->mysqlinst->count_field($this->master_post_css_table,'css_id','',false,"where blog_id='p$this->blog_id' and blog_table_base='$this->pagename'");  
global_master.class.php:								$this->mysqlinst->count_field($this->master_post_css_table,'css_id','',false);
global_master.class.php:								$css_id=$this->mysqlinst->field_inc;//reuse deleted values
global_master.class.php:									if($field==='blog_table_base')$value.="'$this->pagename',";
global_master.class.php:									elseif($field==='blog_table')$value.="'$this->blog_table',";
global_master.class.php:									else $value.="'".$this->{$field}."',";
global_master.class.php:								$q="insert into $this->master_post_css_table (css_id,blog_id,$post_fields,blog_update,blog_time,token) values ($css_id,'p$blog_id',$value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')";   
global_master.class.php:								$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);			 
global_master.class.php:								$this->clone_local_style=true;
global_master.class.php:                                        $this->clone_local_style=false;
global_master.class.php:                                        if (is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'blog_clone_local_style_'.$this->pagename.'_'.$this->blog_id))
global_master.class.php:                                             unlink(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'blog_clone_local_style_'.$this->pagename.'_'.$this->blog_id);//file presence and is_clone status will be determination of whether to sub in these local_clone_style values after post_subbed_row_data is read in from flatfile in webpage mode
global_master.class.php:								$this->editpages_obj($this->master_post_css_table,Cfg::Post_fields,'clone_'.$this->blog_table.'_'.$blog_order.'_','blog_order',$blog_order,'blog_table',$this->blog_table,'update',"AND blog_table_base='$this->pagename'",",blog_time=".time().",token='". mt_rand(1,mt_getrandmax())."',blog_update= '".date("dMY-H-i-s")."'");
global_master.class.php:							switch ($this->blog_type){
global_master.class.php:							$q="select $css_value from $this->master_post_css_table where blog_table_base='$this->pagename' and blog_id='p$blog_id' limit 1";  
global_master.class.php:							//$true_order=$this->blog_order;
global_master.class.php:							$lc=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_master.class.php:							$css_row=$this->mysqlinst->fetch_assoc($lc,__LINE__);
global_master.class.php:								$this->{$cfield}=$css_row[$cfield];#direct edit mode substition
global_master.class.php:								$css_local_arr[$cfield]=$css_row[$cfield];#Note values will NOT be directly switched in for flatfiling to the main flat file of post_subbed_row_data for webpage mode but instead  blog_clone_local_style_'.$this->pagename.'_'.$this->blog_id flat file will be created and subbed in after reading in post_subbed_row_data. This will allow for the parent of cloned posts to update the post_subbed_row_data  which creates necessary data for both the parent clone and for the part of the cloned post which is not switch in. 
global_master.class.php:							(!Sys::Pass_class)&&file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'blog_clone_local_style_'.$this->pagename.'_'.$this->blog_id,serialize($css_local_arr));#these will be resubstitued in editmode for clone local styles
global_master.class.php:							$this->clone_local_style=true;//enable clone styling and configuration options
global_master.class.php:						$q="delete from $this->master_post_data_table Where blog_id='p$blog_id' and blog_table_base='$this->pagename'";
global_master.class.php:						$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_master.class.php:						$this->clone_local_data=false;
global_master.class.php:                              if (is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'blog_clone_local_data_'.$this->pagename.'_'.$this->blog_id))
global_master.class.php:                                   unlink(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'blog_clone_local_data_'.$this->pagename.'_'.$this->blog_id);
global_master.class.php:						$count=$this->mysqlinst->count_field($this->master_post_data_table,'data_id','',false,"where blog_id='p$this->blog_id' and blog_table_base='$this->pagename'");  
global_master.class.php:								$this->mysqlinst->count_field($this->master_post_data_table,'data_id','',false);
global_master.class.php:								$data_id=$this->mysqlinst->field_inc;//reuse deleted values
global_master.class.php:									if($field==='blog_table_base')$value.="'$this->pagename',";
global_master.class.php:									elseif($field==='blog_table')$value.="'$this->blog_table',";//not necessary as no change actually being made compared to default substitution
global_master.class.php:										if ($this->blog_type==='gallery')$value.="'',";//appears not necessary as this field will not be used anyway
global_master.class.php:										else $value.="'".$this->{$field}."',";
global_master.class.php:									else $value.="'".$this->{$field}."',";
global_master.class.php:								$q="insert into $this->master_post_data_table   (data_id,blog_id,$post_fields,blog_update,blog_time,token) values ($data_id,'p$blog_id',$value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')";   
global_master.class.php:								$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);			 
global_master.class.php:								$this->clone_local_data=true;
global_master.class.php:                                        $this->clone_local_data=false;
global_master.class.php:                                        if (is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'blog_clone_local_data_'.$this->pagename.'_'.$this->blog_id))
global_master.class.php:                                            unlink(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'blog_clone_local_data_'.$this->pagename.'_'.$this->blog_id);//file presence and is_clone status will be determination of whether to sub in these local_clone_data values after post_subbed_row_data is read in from flatfile in webpage mode
global_master.class.php:								$this->editpages_obj($this->master_post_data_table,Cfg::Post_fields,$this->blog_table.'_'.$blog_order.'_','blog_order',$blog_order,'blog_table',$this->blog_table,'update',"AND blog_table_base='$this->pagename'",",blog_time=".time().",token='". mt_rand(1,mt_getrandmax())."',blog_update= '".date("dMY-H-i-s")."'");
global_master.class.php:							switch ($this->blog_type){
global_master.class.php:							if ($this->blog_type==='text'||$this->blog_type==='gallery'){//only these are presently configured
global_master.class.php:								$q="select $data_val from $this->master_post_data_table where blog_table_base='$this->pagename' and blog_id='p$blog_id' limit 1";  //sub out if present
global_master.class.php:								$true_order=$this->blog_order;
global_master.class.php:								$lc=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_master.class.php:								$data_row=$this->mysqlinst->fetch_assoc($lc,__LINE__);
global_master.class.php:									$this->{$dfield}=$data_row[$dfield];//for editmode substitution
global_master.class.php:								(!Sys::Pass_class)&&file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'blog_clone_local_data_'.$this->pagename.'_'.$this->blog_id,serialize($local_data_arr)); 
global_master.class.php:								$this->clone_local_data=true;
global_master.class.php:					if (isset($_POST['delete_collocalstyle'][$this->blog_data1])){
global_master.class.php:						$q="delete from $this->master_col_css_table Where col_id='c$this->blog_data1' and col_table_base='$this->pagename'";
global_master.class.php:						$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_master.class.php:						$this->clone_local_style=false;
global_master.class.php:                              if (is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'column_css_clone_'.$this->pagename.'_'.$this->blog_data1))
global_master.class.php:                                   unlink(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'column_css_clone_'.$this->pagename.'_'.$this->blog_data1);
global_master.class.php:						($blog_status==='clone')&&$this->parent_col_clone=$this->blog_data1;//for providing information
global_master.class.php:						$count=$this->mysqlinst->count_field($this->master_col_css_table,'css_id','',false,"where col_id='c$this->blog_data1' and col_table_base='$this->pagename'"); 
global_master.class.php:							if (isset($_POST['submitted'])&&isset($_POST['add_collocalstyle'][$this->blog_data1])){//create new column css local style record
global_master.class.php:								$q="select $col_fields from $this->master_col_table where col_id='$this->blog_data1'"; //get parent values 
global_master.class.php:								$ins=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_master.class.php:								$col_rows=$this->mysqlinst->fetch_assoc($ins,__LINE__);
global_master.class.php:								$this->mysqlinst->count_field($this->master_col_css_table,'css_id','',false);
global_master.class.php:								$css_id=$this->mysqlinst->field_inc;
global_master.class.php:								foreach ($this->col_field_arr as $field) {
global_master.class.php:									if($field==='col_table_base')$value.="'$this->pagename',";
global_master.class.php:									elseif($field==='col_table')$value.="'$this->col_table',";
global_master.class.php:								$q="insert into $this->master_col_css_table   (css_id,col_id,$col_fields,col_update,col_time,token) values ($css_id,'c$this->blog_data1',$value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')";   
global_master.class.php:								$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true); 
global_master.class.php:								$this->clone_local_style=true;
global_master.class.php:								if (is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'column_css_clone_'.$this->pagename.'_'.$this->blog_data1))unlink(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'column_css_clone_'.$this->pagename.'_'.$this->blog_data1);
global_master.class.php:                                        $this->clone_local_style=false;
global_master.class.php:                                        if (is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'column_css_clone_'.$this->pagename.'_'.$this->blog_data1))
global_master.class.php:                                             unlink(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'column_css_clone_'.$this->pagename.'_'.$this->blog_data1);//remove file
global_master.class.php:							$q="select $col_fields from $this->master_col_css_table where col_table_base='$this->pagename' and col_id='c$this->blog_data1'"; 
global_master.class.php:							$lc=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_master.class.php:							$col_css_row=$this->mysqlinst->fetch_assoc($lc,__LINE__);
global_master.class.php:							foreach($this->col_field_arr as $cfield){//here we select and replace all replacable values in local column enabled cloned columns
global_master.class.php:								$this->$cfield=$col_css_row[$cfield];
global_master.class.php:							$this->col_table_base=$col_table_base;//correct value for next nested column go round
global_master.class.php:							$this->clone_local_style=true;
global_master.class.php:							$cssfile=Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'column_css_clone_'.$this->pagename.'_'.$this->blog_data1;
global_master.class.php:			$styles=explode(',',$this->blog_style);
global_master.class.php:			$this->current_background_color= (preg_match(Cfg::Preg_color,explode('@@',$styles[$this->background_index])[0]))?explode('@@',$styles[$this->background_index])[0]:((array_key_exists($this->column_level,$this->column_background_color_arr))?$this->column_background_color_arr[$this->column_level]:'ffffff');
global_master.class.php:			$this->current_color= (preg_match(Cfg::Preg_color,$styles[$this->font_color_index]))?$styles[$this->font_color_index]:((array_key_exists($this->column_level,$this->column_color_arr))?$this->column_color_arr[$this->column_level]:'000000');
global_master.class.php:			$this->current_font_px=(!empty($styles[$this->font_size_index])&&$styles[$this->font_size_index]>=.5&&$styles[$this->font_size_index]<=4.5)?$styles[$this->font_size_index]*16:((array_key_exists($this->column_level,$this->column_font_px_arr))?$this->column_font_px_arr[$this->column_level]:16);
global_master.class.php:               $subbed_row_id=($this->blog_type==='nested_column')?'col_'.$this->blog_data1:$this->blog_id;
global_master.class.php:				$collect[$field]=$this->$field; //for post subbed row...
global_master.class.php:			$collect['blog_id']=$this->blog_id;
global_master.class.php:				$append_arr['obj'][$ov]=$this->$ov;
global_master.class.php:			if ($this->blog_table_base!==$this->pagename&&!$this->clone_local_style){ 
global_master.class.php:				$this->page_stylesheet_inc[]=$this->blog_table_base; 
global_master.class.php:               if(!Sys::Pass_class&&!$this->is_clone) 
global_master.class.php:			if($this->blog_unstatus!=='unclone'&&!$this->is_clone){
global_master.class.php:				$appfile=$this->blog_id;
global_master.class.php:				$appfile=$this->pagename.'_'.$orig_val['blog_id'];
global_master.class.php:			#un_clone_master_arr  the post append data provides a flat file of values after final substitutions for cloned or uncloned data but to reference it to obtain it we will use a consitent value for the flat file which is the $orig_val['blog_id']!  Note $this->blog_id=$orig_val['blog_id'] for posts which are not cloned or uncloned..
global_master.class.php:				$unc_file_arr[$this->pagename.'_'.$orig_val['blog_id']]=$orig_val['blog_id']; 
global_master.class.php:			else if (array_key_exists($this->pagename.'_'.$orig_val['blog_id'],$unc_file_arr)){
global_master.class.php:				unset($unc_file_arr[$this->pagename.'_'.$orig_val['blog_id']]);
global_master.class.php:			$this->is_blog=true;//will be reset if nested column in col_data
global_master.class.php:                    if (array_key_exists($this->pagename.'_'.$orig_val['blog_id'],$unc_file_arr)){  
global_master.class.php:                         $unc_id=$unc_file_arr[$this->pagename.'_'.$orig_val['blog_id']];
global_master.class.php:                         $appfile=Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'post_append_data_'.$this->pagename.'_'.$unc_id; 
global_master.class.php:                              //$appfile=$this->pagename.'_'.$unc_id;
global_master.class.php:				$this->$key=$append_arr['obj'][$key];    ;
global_master.class.php:				$this->is_clone=true;  
global_master.class.php:				$this->clone_local_data=$this->clone_local_style=false;
global_master.class.php:			$blog_id_ext=($this->is_clone)?'cloned_'.$this->pagename.'_'.$this->blog_id:$this->pagename.'_'.$this->blog_id;//bypassing this for general approach
global_master.class.php:					$this->$field=$collect[$field];  //populate blog row fields retrieved from flat file
global_master.class.php:				$this->blog_id=$collect['blog_id'];
global_master.class.php:         if (!$this->edit&&!Sys::Pass_class&&$this->is_clone&&$this->clone_local_data){//now for local clone data if true we must flatfile the relevant localclonedata fields...
global_master.class.php:               $bcld=Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'blog_clone_local_data_'.$this->pagename.'_'.$this->blog_id;
global_master.class.php:					$this->$index=$data_value[$index];
global_master.class.php:          if ($this->blog_type==='nested_column'){//here we reset for sake of !edit
global_master.class.php:			$this->is_column=true;
global_master.class.php:			$this->is_blog=false;
global_master.class.php:			$this->is_column=false;
global_master.class.php:			$this->is_blog=true;
global_master.class.php:               echo "$this->is_clone && $this->clone_local_style  is clone and st";
global_master.class.php:		if (!$this->edit&&!Sys::Pass_class&&$this->is_clone&&$this->clone_local_style&&$this->blog_type!=='nested_column'){//now for local clone style if true we must flatfile the relevant localclonestyle fields... 
global_master.class.php:			if (is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'blog_clone_local_style_'.$this->pagename.'_'.$this->blog_id)){
global_master.class.php:				$style_value=unserialize(file_get_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'blog_clone_local_style_'.$this->pagename.'_'.$this->blog_id));
global_master.class.php:					$this->$index=$style_value[$index];
global_master.class.php:				mail::alert('flat file '.Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'blog_clone_local_style_'.$this->pagename.'_'.$this->blog_id.' not found line '.__LINE__);
global_master.class.php:          if(!$this->edit&&!$this->blog_pub&&!isset($_GET['showallunpub'])&&!Sys::Pass_class){
global_master.class.php:		if(!$this->edit&&!Sys::Pass_class&&$this->blog_type==='nested_column'){ //!edit  for sake of flat filing and avoiding queries.. 
global_master.class.php:			$col_par_masonry=$this->is_masonry;//value of col_masonry whether prev col was enabled
global_master.class.php:			$file2=Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'column_data_'.$this->blog_data1;
global_master.class.php:               $col_field_arr2=$this->col_field_arr;
global_master.class.php:				$this->$field=$collect[$field];//store parent column values for return replacement of parent values following each nested column iteration...
global_master.class.php:			if ($this->is_clone&&is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'column_css_clone_'.$this->pagename.'_'.$this->blog_data1)){ 
global_master.class.php:				$col_local_clone_collect_arr=unserialize(file_get_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'column_css_clone_'.$this->pagename.'_'.$this->blog_data1));
global_master.class.php:				foreach ($this->col_field_arr as $field){  
global_master.class.php:					$this->$field=$col_local_clone_collect_arr[$field];//store parent column values for return replacement of parent values following each nested column iteration...
global_master.class.php:		if ($this->blog_type==='nested_column'){
global_master.class.php:			$this->col_options=(!is_array($this->col_options))?explode(',',$this->col_options):$this->col_options;//populate column options from locally cloned value
global_master.class.php:				if (!array_key_exists($i,$this->col_options))$this->col_options[$i]=0; 
global_master.class.php:			$this->blog_height_arr=explode(',',$this->blog_height);
global_master.class.php:				if (!array_key_exists($i,$this->blog_height_arr))$this->blog_height_arr[$i]=0;	 
global_master.class.php:          $this->fieldmax=$this->mysqlinst->get('fieldmax');   
global_master.class.php:		$this->clone_ext=($this->is_clone&&$this->clone_local_style)?'clone_':'';
global_master.class.php:          #setup default $this->pelement which will be overridden in edit_styles_close but useful for other css being styled using spacing function width functions etc....
global_master.class.php:		$this->data=$data=$this->clone_ext.$this->blog_table.'_'.$blog_order;//form  name fields for both nested column and blog
global_master.class.php:          if($this->blog_type==='nested_column'){  
global_master.class.php:               $this->col_dataCss=$this->clone_ext.$this->col_table_base.'_col_'.$this->col_id;
global_master.class.php:               $this->pelement=".$this->col_dataCss.'nested_column";//set for nested column types
global_master.class.php:               $this->id_array[]=array('col',$this->col_dataCss,$this->column_level+1,'column id: c'.$this->col_id);
global_master.class.php:               $this->dataCss=$this->clone_ext.$this->blog_table_base.'_postId_'.$this->blog_id;//this id is to form immutable css for
global_master.class.php:               $this->pelement=".$this->dataCss.$this->blog_type"; 
global_master.class.php:               $this->sibling_id_arr[$this->column_level]['p'.$this->blog_id]=$this->dataCss;//keeps track for animation 
global_master.class.php:               $this->id_array[]=array('blog',$this->dataCss,$this->column_level,'blog id: p'.$this->blog_id);
global_master.class.php:		if(($this->blog_type==='nested_column'&&$this->column_use_grid_array[$this->column_level]==='use_grid')||($this->blog_type!=='nested_column'&&$this->col_options[$this->col_use_grid_index]==='use_grid')){ //please not column_level has not rounded the corner hence not column_level-1
global_master.class.php:			$this->rwd_post=true;
global_master.class.php:               $this->flex_box_mode=false;
global_master.class.php:		elseif (($this->blog_type==='nested_column'&&$this->column_use_flex_array[$this->column_level])|| $this->blog_type!=='nested_column'&&(substr($this->col_flex_box,0,3)==='fle'||substr($this->col_flex_box,0,3)==='inf')){
global_master.class.php:			$this->rwd_post=false;
global_master.class.php:               $this->flex_box_mode=true;
global_master.class.php:			$this->rwd_post=false;
global_master.class.php:               $this->flex_box_mode=false;
global_master.class.php:			$this->display_edit_data='block'; 
global_master.class.php:			if(!$this->is_column&&$this->is_masonry||$this->column_masonry_status_arr[$this->column_level]
global_master.class.php:				$this->display_edit_data='inline-block'; 
global_master.class.php:				($this->fieldmax===$blog_order)&&$clearfloat=true;
global_master.class.php:				($this->fieldmax===$blog_order)&&$clearfloat=true;
global_master.class.php:			(!$this->edit)&&$floatnew=false;
global_master.class.php:			if (strpos($this->blog_float,' ')){
global_master.class.php:				$blogfloat=str_replace(' ','_',$this->blog_float);
global_master.class.php:				$this->hidden_array[]='<input type="hidden" name="'.$data.'_blog_float" value="'.$blogfloat.'">';
global_master.class.php:			if (!$this->flex_box_mode){
global_master.class.php:                    if (empty($this->blog_float)||$this->blog_float=='center_row'): 
global_master.class.php:                    elseif ($this->blog_float===$this->position_arr[1]):
global_master.class.php:                         $this->display_edit_data='inline-block'; 
global_master.class.php:                         ($this->fieldmax===$blog_order)&&$clearfloat=true;
global_master.class.php:                    elseif ($this->blog_float===$this->position_arr[2]):
global_master.class.php:                         ($this->fieldmax===$blog_order)&&$clearfloat=true;
global_master.class.php:                    elseif ($this->blog_float===$this->position_arr[3]):
global_master.class.php:                         ($this->fieldmax===$blog_order)&&$clearfloat=true;	   
global_master.class.php:                    elseif ($this->blog_float===$this->position_arr[4]):
global_master.class.php:                    elseif ($this->blog_float===$this->position_arr[5]):
global_master.class.php:                    elseif ($this->blog_float===$this->position_arr[6]):
global_master.class.php:                         $this->display_edit_data='inline-table'; 	   
global_master.class.php:                         if ($this->rwd_post){
global_master.class.php:                              ($this->fieldmax===$blog_order)&&$clearfloat=true;
global_master.class.php:		(!empty($floatstyle)&&$this->blog_type!=='nested_column')&& $this->css.="\n.$this->dataCss{".$floatstyle.'}'; 
global_master.class.php:		($this->fieldmax===$blog_order)&&$show_new_blog=true; 
global_master.class.php:		$this->pic_ext='_blog_pic';#extension for data to refer to pics .
global_master.class.php:		if(!empty($this->blog_border_start)){  
global_master.class.php:			 (isset($this->groupstyle_begin_col_id_arr[$this->col_id])&&isset($this->groupstyle_begin_blog_id_arr[$this->col_id]))&&printer::alertx('<p class="floatleft warn1">Caution need closing groupstyle for post Id '.$this->groupstyle_begin_blog_id_arr[$this->col_id]. " within this parent Column id $this->col_id before opening another</p>");
global_master.class.php:			$this->groupstyle_begin_blog_id_arr[$this->col_id]=$this->blog_id;
global_master.class.php:			$this->groupstyle_begin_col_id_arr[$this->col_id]=true;
global_master.class.php:          if (empty($this->blog_options)){ 
global_master.class.php:               $this->blog_options=array();
global_master.class.php:				$this->blog_options[$i]=0;
global_master.class.php:			$this->blog_options=explode(',',$this->blog_options);
global_master.class.php:				if (!array_key_exists($i,$this->blog_options)){
global_master.class.php:					$this->blog_options[$i]=0;
global_master.class.php:		 if($this->blog_type!=='nested_column'||$this->blog_data2!=='column_choice')$this->total_float();//this does take nested columns...
global_master.class.php:		  else $this->current_net_width_percent=100; //else   applies only to nested columns undergoing column_choice
global_master.class.php:     if ($this->edit&&$this->current_net_width <50){//make viewable
global_master.class.php:			$this->current_net_width=200; 
global_master.class.php:			$this->show_more('Click to View '.str_replace('_',' ',strtoupper($this->blog_type)). ' Post','','small info fsmorange posbackground white  click','',500,'',$floatstyle);echo '<!--open show more on-->';
global_master.class.php:			$this->current_net_width=250;
global_master.class.php:			$this->current_net_width_percent=100;
global_master.class.php:			$this->show_more_on=true;//signal to close out show_more following render
global_master.class.php:		else $this->show_more_on=false; 
global_master.class.php:		//$stylewidth='style="width:'.($this->current_net_width_percent).'%"';
global_master.class.php:		if (empty($this->blog_alt_rwd)){ 
global_master.class.php:               $this->blog_alt_rwd=array();
global_master.class.php:				$this->blog_alt_rwd[$i]=0;
global_master.class.php:			$this->blog_alt_rwd=explode(',',$this->blog_alt_rwd);
global_master.class.php:				if (!array_key_exists($i,$this->blog_alt_rwd)){
global_master.class.php:					$this->blog_alt_rwd[$i]=0;
global_master.class.php:		$cb_data=($this->blog_type==='nested_column')?$this->col_dataCss:$this->dataCss;
global_master.class.php:		$type=($this->is_column)?'col':'blog';
global_master.class.php:          if ($this->edit&&$this->{'use_'.$type.'_main_width'}){
global_master.class.php:               if ($this->edit&&!$this->rwd_post&&$this->blog_alt_rwd[$this->blog_width_mode_index]==='maxwidth'&&!$this->is_masonry){//here we checking if responsive width will apply at all.. if the post is not sharing space on the column then use max-width only 
global_master.class.php:                    $this->css.='
global_master.class.php:                         .'.$cb_data.'{max-width:'.$this->current_total_width.'px;}';
global_master.class.php:               elseif ($this->edit&&!$this->rwd_post&&is_numeric($this->blog_width)&&$this->blog_width>0&&(!$this->scale_width_enabled||!$this->blog_type==='nested_column')){//takes care of  width css for regular and nested column posts 
global_master.class.php:                    $bouncewidth_per=($this->blog_alt_rwd[$this->blog_bounce_width_index]>10&&$this->blog_alt_rwd[$this->blog_bounce_width_index]<301)?$this->blog_alt_rwd[$this->blog_bounce_width_index]:0;
global_master.class.php:                    $bouncewidth=$bouncewidth_per*$this->current_total_width/100;
global_master.class.php:                    $minwidth_per=($this->blog_alt_rwd[$this->blog_min_width_index]>0&&$this->blog_alt_rwd[$this->blog_min_width_index]<101)?$this->blog_alt_rwd[$this->blog_min_width_index]:Cfg::Default_min_width;
global_master.class.php:                    $mode=($this->blog_alt_rwd[$this->blog_width_mode_index]==='maxwidth'||$this->blog_alt_rwd[$this->blog_width_mode_index]==='compress_full_width'||$this->blog_alt_rwd[$this->blog_width_mode_index]==='compress_to_percentage')?$this->blog_alt_rwd[$this->blog_width_mode_index]:Cfg::Default_width_mode; 
global_master.class.php:                    $minwidth=$minwidth_per*$this->current_total_width/100;
global_master.class.php:                    $screen_min_bounceback=$this->column_total_width[0]*$minwidth_per/100;//check screen width for compression and reset post to original width as max-width
global_master.class.php:                        $this->css.='
global_master.class.php:                         div .'.$cb_data.'{max-width:'.$this->current_total_width.'px;}';
global_master.class.php:                         $this->css.='
global_master.class.php:                         div .'.$cb_data.'{width:'.($this->current_total_width_percent).'%;}';
global_master.class.php:                         width:'.($bouncewidth_per/100*$this->current_total_width_percent).'%;
global_master.class.php:                         $this->css.='
global_master.class.php:                         width:'.($this->current_total_width_percent).'%;
global_master.class.php:                             $this->css.='
global_master.class.php:                              div.'.$cb_data.'{max-width:'.$this->current_total_width.'px;}';
global_master.class.php:               }//$this->edit&&use_blog/col main width
global_master.class.php:		$masonclass=($this->is_masonry&& !$this->rwd_post)?' grid-item_'.$this->col_id:'';	
global_master.class.php:		if (!$this->edit){//note these  values are also used below in nested column divisions 
global_master.class.php:			list($anim_type,$anim_height,$anim_lock,$aef_class)=$this->preanimation();
global_master.class.php:		if ($this->blog_type!=='nested_column'){   
global_master.class.php:			$style=($this->edit&&$this->current_total_width<50)?'style="width:50px;"':'';
global_master.class.php:			list($bw,$bh)=$this->border_calc($this->blog_style);
global_master.class.php:				$bs=$this->calc_border_shadow($this->col_style); 
global_master.class.php:			$class=($this->rwd_post)?$this->dataCss.' post '.str_replace(',',' ',$this->blog_grid_width).' '.str_replace(',',' ',$this->blog_gridspace_right).' '.str_replace(',',' ',$this->blog_gridspace_left):$this->dataCss.' post ';
global_master.class.php:			if ($this->blog_type==='navigation_menu'){
global_master.class.php:				$nav_class=($this->blog_tiny_data2==='force_vert')?' vert':' horiz';
global_master.class.php:				$nav_class.=($this->blog_tiny_data3==='nav_display')?' display':' hover';
global_master.class.php:			$float_image=($this->blog_type==='float_image_left'||$this->blog_type==='float_image_right')?' float_image':'';//this is used for globalizing styles within a column with float image right and left we dont want to copy the image styles because of necessary padding between right and left but we do want to copy the text styles..  whereas image styles can also be globalized if type matches. to accomadate this in render textarea we use the css extenstion : float images and in images we use the the full blog type css extension.  Here we include both to cover all situations
global_master.class.php:			$dataMinheight='';//($this->blog_height_arr[$this->blog_min_height_index]>=5&&$this->blog_height_arr[$this->blog_min_height_index]<=1000)?' data-minHeight="'.$this->blog_height_arr[$this->blog_min_height_index].'" ':'  data-minHeight="1" ';
global_master.class.php:			$classHeight='';//($this->blog_height_arr[$this->blog_image_height_index]==='adjust')?' respondHeight ':''; 
global_master.class.php:			$dataHeight='';//($this->blog_height_arr[$this->blog_image_height_index]==='adjust')?' data-rwd="'.$this->rwd_post.'" data-type="'.$this->blog_type.'" data-height="init" data-hwid="init" ':'';
global_master.class.php:		 	if (!$this->edit)
global_master.class.php:				print '<div id="'.$this->dataCss.'" '.$style.' class="'.$class.$nav_class.$anim_class.$classHeight.$masonclass.' '.$this->blog_type.$float_image.'"'.$dataHeight.$dataMinheight.$dataAnimHeight.$dataAnimLock.'>';
global_master.class.php:				$addclass=(empty($bw))?' bs'.$this->page_editborder.$this->column_lev_color.' ':((empty($bs))?' bshad'.$this->page_editborder.$this->column_lev_color.' ':'');
global_master.class.php:		#fieldset  switched to class  //removed style="max-width:'.$this->current_total_width.'px;"
global_master.class.php:				 print '<div id="'.$this->dataCss.'" class="'.$class.$nav_class.$addclass.' '.$this->blog_type.$float_image.' edit post"><!--Editpage fieldset post border--><p class="lineh90  editcolor shadowoff editbackground editfont ">Post</p>'; 
global_master.class.php:			$this->background_video('blog_style');
global_master.class.php:		if ($this->edit&&$this->blog_type!='nested_column'){ 
global_master.class.php:				$this->delete_unc_clone_option($blog_clunc_id);//give option to remove unclone
global_master.class.php:			if (empty($this->blog_pub)){
global_master.class.php:				if (!$this->is_clone||$this->clone_local_style){
global_master.class.php:					$this->navobj->return_url($this->pagename,'',$this->column_lev_color.' floatleft    smallest button'.$this->column_lev_color,true);
global_master.class.php:			if (($orig_val['blog_status']==='clone'||$this->is_clone)&&!$this->tagged){
global_master.class.php:				if ($this->blog_status !=='clone'&&$this->parent_col_clone!==$this->col_id){
global_master.class.php:					$clone_msg='<span class="info" title="Parent Column Id c'.$this->parent_col_clone.' was directly Cloned and this Post and Any Nested Columns Within it were Automated Cloned as Well."> Info </span>';
global_master.class.php:				elseif ($this->blog_status !=='clone'){
global_master.class.php:						$clone_msg='<span class="info" title="Parent Column Id c'.$this->parent_col_clone.' was directly Mirrored and this Post within is mirrored along with it."> Info </span>';
global_master.class.php:					$clone_msg='<span class="info" title="This Post was directly Cloned From Parent Post p$this->blog_id"> Directly </span>';
global_master.class.php:					$this->parent_col_clone=$col_id;
global_master.class.php:					if ($blog_type !=='nested_column'&&!empty($blog_clone_target)&&!$this->is_clone){
global_master.class.php:						 $this->switch_clone_options($blog_clone_target,false,'post');
global_master.class.php:				 printer::alertx('<p class="editcolor fs2npred small floatleft editbackground editfont "><span class="red">Cloned Post </span> '.$clone_msg.' changes to: P'.$this->blog_id.' @ Page <a class="whiteshadow2" style="color:#0075a0;"  target="_blank" href="'.check_data::dir_to_file(__METHOD__,__LINE__,__FILE__,$this->blog_table_base).$this->ext.'#post_'.$this->blog_id.'"><u>'.check_data::table_to_title($this->blog_table_base,__method__,__LINE__,__file__).'</u></a> Appear Here Also </p>');
global_master.class.php:				if (in_array('p'.$blog_id,$this->clone_check_arr)){
global_master.class.php:					$this->unclone_options('p'.$blog_id,$this->post_target_clone_column_id);
global_master.class.php:				if (empty($this->clone_local_style&&$this->is_clone)){ 
global_master.class.php:					$this->show_more('Enable Local Post Style','noback','small highlight editbackground editfont rad3 fs2npinfo click','Enable Local Styling of this Cloned Post Without Affecting the styling of the Parent Post',600); 
global_master.class.php:					echo '<div class="fsminfo editbackground editfont  floatleft '.$this->column_lev_color.'"><!--Local clone style-->';
global_master.class.php:					$this->show_close('Local clone style');
global_master.class.php:					$this->show_more('Disable Local Post Style','noback','small highlight editbackground editfont rad3 fs2npinfo click','Disable Local Styling of this Cloned Post and Return to the Parent Post Style',600); 
global_master.class.php:					echo '<div class="fsminfo editbackground editfont  floatleft '.$this->column_lev_color.'"><!--Local clone style-->';
global_master.class.php:					$this->show_close('Local clone style2');
global_master.class.php:				if ($this->blog_type==='text'||$this->blog_type==='gallery'){
global_master.class.php:					if (empty($this->clone_local_data&&$this->is_clone)){ 
global_master.class.php:						$this->show_more('Enable Local Post Data','noback','small highlight editbackground editfont rad3 fs2npinfo click','Enable Local Data while keeping all Cloned Styling of this Cloned Post Without Affecting the Data of the Parent Post',600); 
global_master.class.php:						echo '<div class="fsminfo editbackground editfont  floatleft '.$this->column_lev_color.'"><!--Local clone style-->';
global_master.class.php:						$this->show_close('Local clone style3');
global_master.class.php:						$this->show_more('Disable Local Post Data','noback','small highlight editbackground editfont rad3 fs2npinfo click','Disable Local Styling of this Cloned Post and Return to the Parent Post Style',600); 
global_master.class.php:						echo '<div class="fsminfo editbackground editfont  floatleft '.$this->column_lev_color.'"><!--Local clone style-->';
global_master.class.php:						$this->show_close('Local clone style4');
global_master.class.php:			elseif($this->is_clone && $this->tagged){
global_master.class.php:				printer::alertx('<p class="neg fs2npred small floatleft editbackground editfont left shadowoff">This Post is a <u><span class="orange whitebackground">Tagged Post</span></u> and Changes to the Parent Post Id: P'.$blog_id.' on Page <a style="color:#0075a0;"  target="_blank" href="'.check_data::dir_to_file(__METHOD__,__LINE__,__FILE__,$this->blog_table_base).$this->ext.'#post_'.$blog_id.'"><u>'.check_data::table_to_title($this->blog_table_base,__method__,__LINE__,__file__).'</u></a> Will Appear Here </p>');
global_master.class.php:		$alerted=($this->is_clone)?'this is clone': ' this is not clone';
global_master.class.php:		// if ($this->blog_type!=='nested_column')echo printer::alert_neg($alerted);
global_master.class.php:		$this->blog_typed=str_replace('_',' ',$this->blog_type);
global_master.class.php:		 if($this->blog_options[$this->blog_date_on_index]==='date_on'){
global_master.class.php:			list($date,$v,$n)=$this->format_date($this->blog_date);
global_master.class.php:			if ($this->edit){
global_master.class.php:		(Sys::Deltatime)&&$this->deltatime->delta_log('Blog Render Id '.$this->blog_id.' blog:type: '.$this->blog_type.'  '.__line__.' @ '.__method__.'  '); 
global_master.class.php:		if ($this->blog_type==='text'){ 
global_master.class.php:			$this->text_render($data,$this->blog_table);
global_master.class.php:			($this->blog_options[$this->blog_comment_index]==='comment_on')&&$this->comment_display($data,'blog_data7');
global_master.class.php:			($floatnew)&&$this->blog_new($data,$this->blog_table,$blog_order, $this->blog_order_mod.' in');
global_master.class.php:		elseif ($this->blog_type==='image'){ 
global_master.class.php:			$this->build_pic($data,Cfg_loc::Root_dir.Cfg::Page_images_dir); 
global_master.class.php:			($floatnew)&&$this->blog_new($data,$this->blog_table,$blog_order, $this->blog_order_mod.' in');
global_master.class.php:		elseif ($this->blog_type==='float_image_right'){
global_master.class.php:			$this->float_pic($data, Cfg_loc::Root_dir.Cfg::Page_images_dir); 
global_master.class.php:			($this->blog_options[$this->blog_comment_index]==='comment_on')&&$this->comment_display($data,'blog_data7');
global_master.class.php:			($floatnew)&&$this->blog_new($data,$this->blog_table,$blog_order, $this->blog_order_mod.' in');
global_master.class.php:		elseif ($this->blog_type==='float_image_left'){
global_master.class.php:			$this->float_pic($data, Cfg_loc::Root_dir.Cfg::Page_images_dir); 
global_master.class.php:			($this->blog_options[$this->blog_comment_index]==='comment_on')&&$this->comment_display($data,'blog_data7');
global_master.class.php:			($floatnew)&&$this->blog_new($data,$this->blog_table,$blog_order, $this->blog_order_mod.' in');
global_master.class.php:		elseif ($this->blog_type==='video'){  
global_master.class.php:			$this->video_post($data,$this->blog_data3);
global_master.class.php:			($floatnew)&&$this->blog_new($data,$this->blog_table,$blog_order, $this->blog_order_mod.' in');
global_master.class.php:		elseif ($this->blog_type==='contact'){ 
global_master.class.php:			$this->contact_form($data,'',false,'Edit Overall Contact Styling',true,$this->blog_table); 
global_master.class.php:			($floatnew)&&$this->blog_new($data,$this->blog_table,$blog_order, $this->blog_order_mod.' in'); 
global_master.class.php:		elseif ($this->blog_type==='social_icons'){
global_master.class.php:			$this->social_icons($data,'',false,'Edit Social Icon Styling',true,$this->blog_table); 
global_master.class.php:			($floatnew)&&$this->blog_new($data,$this->blog_table,$blog_order, $this->blog_order_mod.' in'); 
global_master.class.php:		elseif ($this->blog_type==='auto_slide'){
global_master.class.php:			$this->auto_slide($data,'blog'); 
global_master.class.php:			($floatnew)&&$this->blog_new($data,$this->blog_table,$blog_order, $this->blog_order_mod.' in'); 
global_master.class.php:		elseif ($this->blog_type==='gallery'){ 
global_master.class.php:			$this->gallery($data,$this->blog_data1); 
global_master.class.php:			($floatnew)&&$this->blog_new($data,$this->blog_table,$blog_order, $this->blog_order_mod.' in'); 
global_master.class.php:		elseif ($this->blog_type==='navigation_menu'){  
global_master.class.php:			$this->nav_menu($data,$this->blog_data1,false,'',true,$tablename);  
global_master.class.php:			($floatnew)&&$this->blog_new($data,$this->blog_table,$blog_order, $this->blog_order_mod.' in');   
global_master.class.php:		elseif ($this->blog_type==='misc'){  return;//not in play
global_master.class.php:			$this->misc($data);  
global_master.class.php:			($floatnew)&&$this->blog_new($data,$this->blog_table,$blog_order, $this->blog_order_mod.' in');   
global_master.class.php:		elseif ($this->blog_type==='nested_column'){
global_master.class.php:			 $this->blog_order_arr[$this->column_level]=$orig_val['blog_order'];//this currently appears to be used for html div <!-- reference only --> 
global_master.class.php:			$textalign=($this->rwd_post)?'':' text-align:center;';//this is applied for cases in which rwd is not used and center float (inline-block) is used for posts within this column in order that ..  also use when rwd is in play for consistency 
global_master.class.php:			($this->edit)&&$this->css.="\n.$this->col_dataCss{".$floatstyle.$textalign.'}';
global_master.class.php:			 $class=($this->rwd_post)?$this->col_dataCss.' '.str_replace(',',' ',$this->col_grid_width).' '.str_replace(',',' ',$this->col_gridspace_right).' '.str_replace(',',' ',$this->col_gridspace_left):$this->col_dataCss; 
global_master.class.php:			list($bw,$bh)=$this->border_calc($this->col_style); 
global_master.class.php:				$bs=$this->calc_border_shadow($this->col_style);
global_master.class.php:			if (!$this->edit){ 
global_master.class.php:				 $col_masonry=($col_par_masonry&&!$this->rwd_post)?' grid-item_'.$col_id:'';#we could go with col level arr setup but this works also..
global_master.class.php:				if ($this->col_options[$this->col_use_grid_index]!=='use_grid'&&$this->col_options[$this->col_enable_masonry_index]==='masonry'){
global_master.class.php:					$enablemasonclass=' gridcol_'.$this->col_id; 
global_master.class.php:					$this->load_masonry();
global_master.class.php:					$masonryClass='gridcol_'.$this->col_id;
global_master.class.php:					if (!$this->edit){// padleft,
global_master.class.php:var resizeTimer1_$this->col_id='';
global_master.class.php:     itemSelector: '.grid-item_$this->col_id' 
global_master.class.php:          \$gridcol_$this->col_id=\$('$mclass').masonry(mopts); 
global_master.class.php:          \$gridcol_$this->col_id=\$('$mclass').masonry(mopts); //initiating twice
global_master.class.php:               if (\$gridcol_$this->col_id.masonry()!=='undefined')\$gridcol_$this->col_id.masonry('destroy'); 
global_master.class.php:                clearTimeout(resizeTimer1_$this->col_id); 
global_master.class.php:                resizeTimer1_$this->col_id=setTimeout( function(){ 
global_master.class.php:                \$gridcol_$this->col_id=\$('$mclass').masonry(mopts); 
global_master.class.php:                \$gridcol_$this->col_id=\$('$mclass').masonry(mopts);//initiating twice 
global_master.class.php:				print '<div id="'.$this->col_dataCss.'" class="'.$class.$anim_class.$enablemasonclass.$col_masonry.' nested" '.$dataAnimHeight.$dataAnimLock.'><!--Begin Nested Column id:'.$this->col_id.'-->';
global_master.class.php:				$addclass=(empty($bw))?' bdot'.$this->page_editborder.$this->color_arr_long[$this->column_level+1].' ':((empty($bs))?' bshad'.$this->page_editborder.$this->column_lev_color.' ':'');
global_master.class.php:				echo '<div id="'.$this->col_dataCss.'" class="'.$class.$addclass.' nested column edit" ><p class="lineh90  shadowoff editcolor editbackground editfontcol">Nested Column</p><!--Begin edit  Nested Column id'.$this->col_id.'-->';
global_master.class.php:					$this->delete_unc_clone_option($blog_clunc_id);
global_master.class.php:					$this->is_clone=true;
global_master.class.php:				if (empty($this->blog_pub)){
global_master.class.php:					if (!$this->is_clone||$this->clone_local_style){
global_master.class.php:		$objvars_hold[$ov]=$this->$ov;
global_master.class.php:			$this->nested_column();
global_master.class.php:			$this->blog_type='nested_column'; 
global_master.class.php:			$col_field_arr2=$this->col_field_arr; 
global_master.class.php:				$this->$field=${'restore_'.$field}; 
global_master.class.php:				$this->$key=$objvars_hold[$key]; 
global_master.class.php:			$this->col_dataCss=$this->clone_ext.$this->col_table_base.'_col_'.$this->col_id;
global_master.class.php:                $this->pelement=".$this->col_dataCss.nested_column";//set for nested column types
global_master.class.php:               ($floatnew)&&$this->blog_new($data,$this->blog_table,$blog_order, $this->blog_order_mod.' in'); 
global_master.class.php:			$this->current_net_width=$this->column_net_width[$this->column_level];
global_master.class.php:			print '</div><!--End Nested Column id:'. $this->column_id_array[$this->column_level+1].' -->';
global_master.class.php:			$msg="Missed the boat with blog id $this->blog_id and type $this->blog_type  in ".__method__ ;
global_master.class.php:		$this->is_clone=(array_key_exists($this->column_level,$this->column_clone_status_arr)&&$this->column_clone_status_arr[$this->column_level])?true:false;
global_master.class.php:		if ($this->blog_type!=='nested_column')
global_master.class.php:			print '</div><!-- id#'.$this->blog_id.' '.$this->blog_type.'-->';
global_master.class.php:		if ($this->edit&&$this->show_more_on){
global_master.class.php:			$this->show_more_on=false;
global_master.class.php:			$this->show_close('show more on');echo '<!--close show more on-->';
global_master.class.php:		if  (!$this->rwd_post&& (!$this->is_masonry&&!$clearfloat)&&$this->blog_float===$this->position_arr[0]||$this->blog_float===$this->position_arr[4]||$this->blog_float===$this->position_arr[5]||$this->blog_float===$this->position_arr[6]){ 
global_master.class.php:		if (!empty($this->blog_border_stop)) {
global_master.class.php:			//($this->edit)&&printer::alert_neg('Extra blog boarder alert Above Post');
global_master.class.php:			unset($this->groupstyle_begin_col_id_arr[$this->col_id]);
global_master.class.php:			unset($this->groupstyle_begin_blog_id_arr[$this->col_id]);
global_master.class.php:			print('</fieldset><!--'.$this->blog_table.' .style _groupstyle-->'); #end the border
global_master.class.php:		($this->edit&&!$floatnew)&&$this->blog_new($tablename.'_'.$this->blog_order,$tablename,$blog_order, $this->blog_order_mod.' in ');
global_master.class.php:		$this->clone_local_style=false; //reinitialize
global_master.class.php:		$this->clone_local_data=false;		 
global_master.class.php:	($this->edit&&isset($this->groupstyle_begin_col_id_arr[$this->col_id]))&&printer::alertx('<p class="floatleft warn1">Caution You have an error having not closed  an open groupstyle for post Id '.$this->groupstyle_begin_blog_id_arr[$this->col_id]. " within this parent Column id $this->col_id</p>");
global_master.class.php:				print'</div><!--End Primary Column id '.$this->col_id.'-->';
global_master.class.php:		if  ($this->blog_float===$this->position_arr[0]||$this->blog_float===$this->position_arr[4]||$this->blog_float===$this->position_arr[5]||$this->blog_float===$this->position_arr[6]){ 
global_master.class.php:	$this->is_blog=false;//turned off...   first use is for determining element size for rendering font size preview in styling options..
global_master.class.php:	$this->blog_status='';
global_master.class.php:		$this->message[]=$msg;//disable
global_master.class.php:		//$this->success[]="Now viewing database $dbname with  with pushed $fullpathfile";  
global_master.class.php:			 $this->backupinst->backupdb(Sys::Dbname,'',$time,$fname);
global_master.class.php:			 $this->success[]='Db View initated from '.$this->get_time_ago($time);
global_master.class.php:	 else $this->message[]='Problem with Backup restore fullfilepath of '.$fullpathfile.' in '.__METHOD__.__LINE__;	 
global_master.class.php:	if (empty($this->page_options)){ 
global_master.class.php:			$this->page_options=array();
global_master.class.php:				$this->page_options[$i]=0;
global_master.class.php:		$this->page_options=explode(',',$this->page_options);
global_master.class.php:			if (!array_key_exists($i,$this->page_options)){
global_master.class.php:				$this->page_options[$i]=0;
global_master.class.php: 	$this->alert=array();
global_master.class.php:	$this->instruct=array();
global_master.class.php:	$this->message = array();
global_master.class.php:	$this->success=array();
global_master.class.php:	$this->session_initiate();
global_master.class.php:	$this->db_initiate(); 
global_master.class.php:	$this->mysqlinst->dbconnect(Sys::Dbname);
global_master.class.php:	$this->mail_initiate(); 
global_master.class.php:	$this->navigation_initiate();
global_master.class.php:	$this->storeinst=store::instance();
global_master.class.php:	($this->edit)&&$this->backup_initiate();
global_master.class.php:	$this->page_images_arr[$this->pagename]=array(); 
global_master.class.php:	$this->page_images_expanded_arr[$this->pagename]=array();
global_master.class.php:	$this->auto_slide_arr[$this->pagename]=array();// 
global_master.class.php:	$this->large_images_arr[$this->pagename]=array(); 
global_master.class.php:		$q="update $this->master_page_table set page_data1='$sorted' where page_id='$big'"; 
global_master.class.php:	else $q="update $this->master_post_table set  blog_data1='$sorted' where  blog_id='$big'";   
global_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_master.class.php:	if (!$this->mysqlinst->affected_rows())return false;
global_master.class.php:		$q="update $this->master_gall_table set gall_time='".time()."',token='".mt_rand(1,mt_getrandmax())."',pic_order='".$x."' where pic_id=".$img_arr[1]; 
global_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);  
global_master.class.php:	$q="update $this->master_page_table set page_{$editor_ref}_editor_order='$color_list' where page_ref='$this->pagename'";
global_master.class.php:	$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false); 
global_master.class.php:	$q="select picname from $this->master_gall_table where gall_ref='$gall_ref'";
global_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_master.class.php:	While ($rows=$this->mysqlinst->fetch_row($r)){
global_master.class.php:	$q="select picname from $this->master_gall_table where gall_ref='$gall_ref'";
global_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_master.class.php:		While ($rows=$this->mysqlinst->fetch_row($r)){
global_master.class.php:			$table=$this->master_page_table;
global_master.class.php:			$table=$this->master_col_table;
global_master.class.php:			$table=$this->master_post_table;
global_master.class.php:	$r=$this->mysqlinst->query($q);
global_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_master.class.php:		list($styles)=$this->mysqlinst->fetch_row($r);
global_master.class.php:		if (!empty($custom_style)&&$this->isSerialized($custom_style)){ 
global_master.class.php:	$q="select col_table_base from $this->master_col_table where col_status='clone' and col_clone_target='$id'";
global_master.class.php:	$r=$this->mysqlinst->query($q);
global_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_master.class.php:		while (list($col_table_base) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_master.class.php:	$q="select distinct page_ref, page_title, page_filename from $this->master_page_table  order by page_ref ASC"; 
global_master.class.php:	$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_master.class.php:	while (list($page_ref,$title,$filename) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_master.class.php:		$return.= '<p class="editbackground  editfont"><a style="color:inherit;"  href="'.$filename.$this->ext.'">'.$title.': &nbsp;&nbsp;<span class="smaller info" title="Page Ref:'. $page_ref.' filename: '.$filename.$this->ext.'">'.$page_ref.'</a></p>'; 
global_master.class.php:	if (!is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'display_anchor_'.$this->pagename.'.dat'))return 'Refresh Page to generate Goto anchors';
global_master.class.php:     $id_array=unserialize(file_get_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'display_anchor_'.$this->pagename.'.dat'));
global_master.class.php:	$q="select distinct page_ref, page_title, page_filename from $this->master_page_table  order by page_ref ASC";  
global_master.class.php:	$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_master.class.php:	while (list($page_ref,$title,$filename) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_master.class.php:		$return.='<p style="padding:10px;"><input type="radio" name="'.$data.'_blog_data2['.$index.']" value="'.$filename.$this->ext.'">'.$title.': &nbsp;&nbsp;<span class="smaller highlight" title="Page Ref:'. $page_ref.' filename: '.$filename.$this->ext.'">'.$page_ref.'</p>';  
global_master.class.php:	$r=$this->mysqlinst->query($q); 
global_master.class.php:	if ($this->mysqlinst->affected_rows()){
global_master.class.php:		while (list($fname,$date,$time,$restoredate,$restorefname) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_master.class.php:			$return.='<div style="padding:10px;color:black; background:#'.$color.'"><input type="radio" name="page_restore_view" value="'.$fname.'@@'.$time.'">TimeAgo: '.$this->get_time_ago($time).'&nbsp; Date: '.$date.'&nbsp;Filename: '.$fname.'&nbsp; Size: '.(filesize(Cfg_loc::Root_dir.Cfg::Backup_dir.$fname)/1000).'Kb'.$restime.'</div>';
global_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log(__line__.' @ '.__method__.'  '); 
global_master.class.php:	if ($this->edit&&isset($_GET['display_anchor'])){   
global_master.class.php:		$json_arr[]=$this->gen_display_anchor();
global_master.class.php:     if ($this->edit&&isset($_GET['bufferOutput'])){
global_master.class.php:          if (!is_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Buffer_dir.'output_'.$_GET['bufferOutput'].$this->pagename.'.dat'))exit('reBuffed');//has been fired once
global_master.class.php:		$data=$json_arr[]=mb_convert_encoding(process_data::readfile(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Buffer_dir.'output_'.$_GET['bufferOutput'].$this->pagename.'.dat'),'HTML-ENTITIES'); 
global_master.class.php:          unlink(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Buffer_dir.'output_'.$_GET['bufferOutput'].$this->pagename.'.dat');//remove prevent secondary click replacement
global_master.class.php:     if ($this->edit&&isset($_GET['check_clones'],$_GET['check_id'])){   
global_master.class.php:		$json_arr[]=$this->gen_check_clones($_GET['check_clones']);
global_master.class.php:	if ($this->edit&&isset($_GET['display_fullnav'])){   
global_master.class.php:		$json_arr[]=mb_convert_encoding($this->display_fullnav(),'HTML-ENTITIES');
global_master.class.php:	if ($this->edit&&isset($_GET['choose_pagenav'])){
global_master.class.php:		$json_arr[]=$this->choose_pagenav($data,$index);
global_master.class.php:	if ($this->edit&&isset($_GET['display_backups'])){   
global_master.class.php:		$json_arr[]=$this->display_backups();
global_master.class.php:	if ($this->edit&&isset($_GET['display_styles'],$_GET['display_id'])){   
global_master.class.php:		$json_arr[]=$this->gen_display_styles($_GET['display_styles']);
global_master.class.php:	if ($this->edit&&isset($_GET['iframe_gen'],$_GET['pages'])){   
global_master.class.php:		$json_arr[]=$this->iframe_list_gen($_GET['pages']);
global_master.class.php:	if ($this->edit&&isset($_GET['imageSelectGallery'])){   
global_master.class.php:		$json_arr[]=$this->display_image_list($arr[0]);
global_master.class.php:	if ($this->edit&&isset($_GET['imageChoiceMaster'])){   
global_master.class.php:		$json_arr[]=$this->get_image_list($arr[0],$arr[1]);
global_master.class.php:	if ($this->edit&&isset($_GET['toggle_class_reload'])){ 
global_master.class.php:		$q="update $this->master_post_table set blog_data1='".$arr[2]."' where blog_id='".$arr[1]."'";
global_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_master.class.php:		$this->resize($arr[0],$arr[1],0,0,Cfg_loc::Root_dir.Cfg::Upload_dir,$arr[2]); 
global_master.class.php:	if ($this->edit&&isset($_GET['auto_sort'])){   
global_master.class.php:		$msgreturn=$this->update_sort_list($arr[0],$arr[1]);
global_master.class.php:	if ($this->edit&&isset($_GET['gall_sort'])){   
global_master.class.php:		$this->update_gall_list($arr[0],$arr[1]);
global_master.class.php:	if ($this->edit&&isset($_GET['pageEd_sort'])){   
global_master.class.php:		$this->update_editor_color_list($arr[0],$arr[1]);
global_master.class.php:	if ($this->edit&&isset($_GET['leftovers'])){
global_master.class.php:		$json_arr[]=printer::alert('<a href="#leftovers">Delete/Move Leftover Unclones</a>',true,'neg normal shadowoff smallest button'.$this->column_lev_color );
global_master.class.php:	if ($this->edit&&isset($_GET['unclone_list_post'])){
global_master.class.php:          $q="select blog_id,blog_table_base,blog_unstatus from $this->master_post_table where blog_clone_target='$clone_id' OR blog_unclone=$clone_id";  
global_master.class.php:          $r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_master.class.php:		if ($this->mysqlinst->affected_rows()){
global_master.class.php:			while (list($blog_id,$blog_table_base) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_master.class.php:     if ($this->edit&&isset($_GET['unclone_list_post'])||isset($_GET['unclone_list_column'])){ 
global_master.class.php:          $this->clone_delete_list=array();
global_master.class.php:          $this->clone_delete_list[]=$col_id.'@@'.'nested_column'.'@@'.$col_id;
global_master.class.php:          $this->check_clone($col_id); 
global_master.class.php:           foreach (array_unique($this->clone_delete_list) as $arr){
global_master.class.php:                    $q="select blog_id,blog_table_base,blog_unstatus from $this->master_post_table where blog_clone_target='$blog_id' OR blog_unclone='$blog_id'";  
global_master.class.php:                    $q="select blog_data1,blog_table_base,blog_unstatus from $this->master_post_table where (blog_data1='$clone_id' or blog_unclone = $blog_id) and blog_table_base!='$this->pagename'";     
global_master.class.php:               $r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_master.class.php:               if ($this->mysqlinst->affected_rows()){
global_master.class.php:                    while (list($clone_id,$blog_table_base,$unstatus) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_master.class.php:	$this->accessvar_obj($this->master_page_table,$fields,'page_ref',$this->pagename);
global_master.class.php:	if($this->page_ref==='indexpage'&&!is_dir(Cfg::PrimeEditDir)){//check for completely new database manual clone
global_master.class.php:	$this->page_populate_options();
global_master.class.php:	$this->generate_cache(); 
global_master.class.php:	$this->generate_bps();
global_master.class.php:	$this->deltatime->delta_log('accessvar.obj');
global_master.class.php:	$this->pre_render_data();$this->deltatime->delta_log('pre_render_data');
global_master.class.php:	$this->render_header_open();
global_master.class.php:	$this->render_analytics();  //note will not render  unless cached..// renders with ?render_return
global_master.class.php:	$this->gen_Proc_init();
global_master.class.php:	// $this->render_yt_embed_player();
global_master.class.php:	$this->header_close(); $this->deltatime->delta_log('header'); 
global_master.class.php:	$this->render_body();
global_master.class.php:	//(Sys::Deltatime)&&print $this->deltatime->return_delta_log();
global_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);	 
global_master.class.php:		if (!$this->mysqlinst->affected_rows()) {
global_master.class.php:	//$this->mailinst->mailwebmaster($this->success, $this->message, $vars);		
global_master.class.php:	while ($rows=$this->mysqlinst->fetch_assoc($r,__LINE__)) {
global_master.class.php:				$this->{$field_array[$x]}=trim($rows[$field_array[$x]]);
global_master.class.php:		$this->session_log_count=$_SESSION[Cfg::Owner.'session_log']=1;
global_master.class.php:		$this->session_log_id=$_SESSION[Cfg::Owner.'session_log_id']=mt_rand(1,mt_getrandmax());
global_master.class.php:		$this->browser_info=true;
global_master.class.php:		$this->session_log_count=$_SESSION[Cfg::Owner.'session_log']+1;
global_master.class.php:		$_SESSION[Cfg::Owner.'session_log']=$this->session_log_count;
global_master.class.php:		$this->session_log_id=$_SESSION[Cfg::Owner.'session_log_id'];
global_master.class.php:		$count=$this->cookie_count=$_COOKIE[Cfg::Cookie_id]['count'];
global_master.class.php:		$this->cookie_date=$_COOKIE[Cfg::Cookie_id]['last_date'];
global_master.class.php:		$this->cookie_reference=$_COOKIE[Cfg::Cookie_id]['reference'];
global_master.class.php:		$this->browser_info=false;
global_master.class.php:		$this->cookie_reference=mt_rand(1,mt_getrandmax());
global_master.class.php:		setcookie(Cfg::Cookie_id.'[reference]',$this->cookie_reference,  time() + (10 * 365 * 24 * 60 * 60),'/','',0,0);
global_master.class.php:		$this->echo_eob.=NL.'deltatime post '.$funct.':'.$this->deltatime->delta();
global_master.class.php:	if (!$this->edit&&Sys::Logged_in){echo 'here';
global_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log(__line__.' @ '.__method__.'  ');
global_master.class.php:	$this->call_body();
global_master.class.php:	$this->track_font_em($this->page_style);
global_master.class.php:	if ($this->page_options[$this->page_slideshow_index]==='enable_page_slideshow'){
global_master.class.php:		$this->auto_slide($this->pagename,'page');
global_master.class.php:	$this->nav_return(); 
global_master.class.php:	$this->browser_size_display(); 
global_master.class.php:	($this->edit)&&$this->echo_msg();#actually called in edit_body #drop in success message after nav
global_master.class.php:	$this->render_body_main(); 
global_master.class.php:	$this->javascript_preload();
global_master.class.php:	$this->render_body_end();
global_master.class.php:	if (!empty($this->preload )){
global_master.class.php:		fadeTo.preloading('.$this->preload.');
global_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log('Begin render body main '.__line__.' @ '.__method__.'  '); 
global_master.class.php:	$this->clone_ext='';//extension used for delinieate if column or post is clone: may affect  style and submitted data  elements
global_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log(__line__.' @ '.__method__.'  ');
global_master.class.php:	($this->edit)&&printer::alertx( '<p id="javascriptcheck" class="neg editbackground  editfont fsmred vlarge" style="display:block">Caution: Your Javascript is Disabled. This Edit Site Requires Javascript Be Enabled in Your Browser. Submitting Changes Without Javascript Enabled Can Result in Data Loss</p>
global_master.class.php:	$styles=explode(',',$this->page_style);//for background
global_master.class.php:	$this->current_background_color=$this->column_background_color_arr[0]= (array_key_exists($this->background_index,$styles)&&preg_match(Cfg::Preg_color,explode('@@',$styles[$this->background_index])[0]))?explode('@@',$styles[$this->background_index])[0]:'ffffff';
global_master.class.php:	$this->current_color=$this->column_color_arr[0]= (array_key_exists($this->font_color_index,$styles)&&preg_match(Cfg::Preg_color,$styles[$this->font_color_index]))?$styles[$this->font_color_index]:'000000';
global_master.class.php:	$this->current_font_px=$this->column_font_px_arr[0]=(array_key_exists($this->font_size_index,$styles)&&!empty($styles[$this->font_size_index])&&$styles[$this->font_size_index]>=.5&&$styles[$this->font_size_index]<=4.5)?$styles[$this->font_size_index]*16:16;
global_master.class.php:	$where="WHERE col_table_base='$this->pagename' and col_primary=1";
global_master.class.php:	$count_column=$count=$this->mysqlinst->count_field($this->master_col_table,'col_id','',false,$where);
global_master.class.php:		if ($this->edit){
global_master.class.php:			printer::alertx('<div class="left fs2'.$this->column_lev_color.' '.$this->column_lev_color.' right10 left10 editbackground  editfont left maxwidth700" title=""><input type="checkbox" value="1" name="addnewcolumn[]">Check this box to Begin Creating Your Content Column From Scratch and hit the Submit Change Button. ');
global_master.class.php:			printer::alertx('<p class="left fs2'.$this->column_lev_color.' '.$this->column_lev_color.' right10 left10 editbackground  editfont left maxwidth700" title=""><input type="checkbox" value="1" name="copynewcolumn[]">OR Copy/Clone/Move   Any Previous Column from another Page (ie Template Starter) Here </p>');
global_master.class.php:			$this->submit_button('SUBMIT ALL'); 
global_master.class.php:			printer::alertx('<p style="font-size:2em; color:#'.$this->info.';background:#ffffff;">Navigate to Editpages To Create Your First Page</p>',1.75);
global_master.class.php:			printer::alertx('<p style="font-size:2em; color:#'.$this->pos.';background:#ffffff;">New Page Coming Soon</p>');
global_master.class.php:		if ($this->edit){
global_master.class.php:			$this->show_more('Add Primary','','editbackground floatleft editcolor editfont supersmall rad3 fs1info','',600);
global_master.class.php:			printer::alertx('<p class="editbackground fsm'.$this->column_lev_color.' '.$this->column_lev_color.' editfont left maxwidth700" title=""><input type="checkbox" value="0" name="addnewcolumn[]">Check the box to Create another Primary Column directly on Top of Your Previous Primary Column in the body (as opposed to a &#34;Nested Column&#34; which is Column with a  Column as typically done in websites. Primary Columns occupy the center space of a page and do not &#34;float&#34; which is to say do not sit side by side with other columns.  Normally, Columns are created within the Main Column by choosing the New Column option in the Post Dropdown Menu. However you may directly create an additonal Primary Columns  HERE on Top of the Page Body or Following the Current Primary Column(s) Under  Add Primary Option  Below</p>');
global_master.class.php:			printer::alertx('<p class="editbackground  editfont fs2'.$this->column_lev_color.' '.$this->column_lev_color.' right10 left10 left maxwidth700" title=""><input type="checkbox" value="0" name="copynewcolumn[]">OR Copy/Move/Clone a Column Starter HERE </p>');
global_master.class.php:			$this->show_close();//<!--End Add Special-->';
global_master.class.php:			$this->submit_button('SUBMIT ALL');
global_master.class.php:		$col_field_arr2=$this->col_field_arr;
global_master.class.php:		$q='select col_id,'.Cfg::Col_fields." from $this->master_col_table where col_table_base='$this->pagename' AND col_primary=1 order by col_num";
global_master.class.php:		$primer=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_master.class.php:		while ($prime_rows=$this->mysqlinst->fetch_assoc($primer,__LINE__,__METHOD__)){ 
global_master.class.php:				$this->$field=$rows[$field];
global_master.class.php:			$this->clone_ext=false;//set default
global_master.class.php:		 	$col_num= $this->col_num;
global_master.class.php:			$this->clone_local_style=false;
global_master.class.php:			if (in_array($this->col_id,$this->column_moved))continue;
global_master.class.php:			$this->col_child_table='';//to remove child clone
global_master.class.php:			if ($this->col_temp=='column_choice'){
global_master.class.php:				$this->choose_column($this->col_id,false);
global_master.class.php:			$this->column_clone_status_arr[0]=false;
global_master.class.php:			$this->is_clone=false;
global_master.class.php:			if ($this->col_status==='clone'&&is_numeric($this->col_clone_target)&&$this->col_clone_target>0){
global_master.class.php:				$this->post_target_clone_column_id=$this->col_clone_target;//will used cloned value to match  and just be consistent with being last col_id reported to unclone blog_data6
global_master.class.php:				$this->clone_ext='clone_'; 	
global_master.class.php:				$this->column_clone_status_arr[0]=true;
global_master.class.php:				$this->is_clone=true;
global_master.class.php:				$this->col_id=$this->col_clone_target;
global_master.class.php:				$this->parent_col_clone=$this->col_clone_target;//for column/post is cloned moreinfo msg
global_master.class.php:				$col_status=$this->col_status;
global_master.class.php:				$this->col_child_table=$this->col_table;//If cloned primary table needs to be deleted
global_master.class.php:				$count=$this->mysqlinst->count_field($this->master_col_table,'col_id','',false,"where col_id='$this->col_id'");
global_master.class.php:				$q='select '.Cfg::Col_fields." from $this->master_col_table where col_id='$this->col_id'";
global_master.class.php:				$r2=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_master.class.php:				if (!$this->mysqlinst->affected_rows()){
global_master.class.php:					mail::alert('Cloned Primary Column problem with ID'.$this->col_clone_target);
global_master.class.php:				$row=$this->mysqlinst->fetch_assoc($r2,__LINE__,__METHOD__,true); 
global_master.class.php:				foreach ($this->col_field_arr as $field) {
global_master.class.php:					$this->$field=$row[$field];
global_master.class.php:				$this->col_status=$col_status;//reinstate status of clone or not
global_master.class.php:				if ($this->edit&&$this->col_primary!=1){
global_master.class.php:				//$this->col_width=(is_numeric($this->col_width)&&$this->col_width>100)?$this->col_width:((!empty($this->page_width))?$this->page_width:Cfg::Page_width);
global_master.class.php:				if (isset($_POST['delete_collocalstyle'][$this->col_id])){
global_master.class.php:					$q="delete from $this->master_col_css_table Where col_id='c$this->col_id' and col_table_base='$this->pagename'";
global_master.class.php:					$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_master.class.php:					$this->clone_local_style=false;
global_master.class.php:					$this->parent_col_clone=$this->col_clone_target;
global_master.class.php:					$count=$this->mysqlinst->count_field($this->master_col_css_table,'css_id','',false,"where col_id='c$this->col_id' and col_table_base='$this->pagename'");   
global_master.class.php:						if (isset($_POST['submitted'])&&isset($_POST['add_collocalstyle'][$this->col_id])){
global_master.class.php:							$q="select $col_fields from $this->master_col_table where col_id='$this->col_id'";  
global_master.class.php:							$ins=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_master.class.php:							$col_rows=$this->mysqlinst->fetch_assoc($ins,__LINE__);
global_master.class.php:							$this->mysqlinst->count_field($this->master_col_css_table,'css_id','',false);
global_master.class.php:							$css_id=$this->mysqlinst->field_inc;
global_master.class.php:								if($field==='col_table_base')$value.="'$this->pagename',";
global_master.class.php:								elseif($field==='col_table')$value.="'$this->col_table',";
global_master.class.php:							$q="insert into $this->master_col_css_table   (css_id,col_id,$col_fields,col_update,col_time,token) values ($css_id,'c$this->col_id',$value '".date("dMY-H-i-s")."','".time()."','".mt_rand(1,mt_getrandmax())."')";   
global_master.class.php:							$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true); 
global_master.class.php:							$this->clone_local_style=true; 
global_master.class.php:                                   $this->clone_local_style=false;
global_master.class.php:						 $q="select $column_css_fields from $this->master_col_css_table where col_table_base='$this->pagename' and col_id='c$this->col_id'"; 
global_master.class.php:						$loc=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_master.class.php:						$col_css_row=$this->mysqlinst->fetch_assoc($loc,__LINE__);
global_master.class.php:							$this->{$cfield}=$col_css_row[$cfield];
global_master.class.php:						$this->clone_local_style=true;
global_master.class.php:			$this->current_background_color=$this->column_background_color_arr[0];//reset to top level level colors and font px///  will track through color and individual posts...
global_master.class.php:			$this->current_color=$this->column_color_arr[0];
global_master.class.php:			$this->current_font_px=$this->column_font_px_arr[0];   
global_master.class.php:			($this->edit)&&$this->css.="\n.{$this->clone_ext}col_$this->col_id{text-align:center;}";//text align used for non rwd posts using  center float  ie  inline-block margin-left:auto;margin-right:auto; 
global_master.class.php:			$this->blog_render($this->col_id,true,$this->col_table_base); 
global_master.class.php:			if ($this->edit){   
global_master.class.php:				$this->submit_button('SUBMIT  ALL');
global_master.class.php:				$this->show_more('Add Primary','','floatleft editbackground  editfont editcolor editfontsupersmall rad5 fsminfo','',600);
global_master.class.php:				printer::alertx('<p class="editbackground fsm'.$this->column_lev_color.' '.$this->column_lev_color.' editfont  maxwidth700"  title=""><input type="checkbox" value="'.($col_num +.5).'" name="addnewcolumn[]">Check the box to Create another Primary Column directly in the body (as opposed to a &#34;Nested Column&#34; which is Column with a  Column as typically done in websites. Primary Columns occupy the center space of a page and do not &#34;float&#34; which is to say do not sit side by side with other columns. Normally, Columns are created within the Main Column by choosing the nested column option in the Post Dropdown Menu all within a Single Primary Column. However you may directly create additonal Primary Columns in the main Body by checking here. Create a new Primary Column HERE after Primary Column#'.$col_num.'</p>');
global_master.class.php:				printer::alertx('<p class="editbackground  editfont fs2'.$this->column_lev_color.' '.$this->column_lev_color.' right10 left10 left maxwidth700" title=""><input type="checkbox" value="'.($col_num+.5).'" name="copynewcolumn[]">OR Copy/Move/Clone a Column Starter HERE after Primary Column#'.$col_num.'</p>');
global_master.class.php:				$this->show_close();//<!--End Add Special-->';
global_master.class.php:		if ($this->edit&&(isset($_POST['column_copy'])||isset($_POST['addnewcolumn'])||isset($_POST['deletecolumn'])))$this->primary_order_update();
global_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log('End render body main '.__line__.' @ '.__method__.'  '); 
global_master.class.php:	$style=Cfg_loc::Root_dir.'styling/'.$this->pagename.'.css';
global_master.class.php:	$image_response_array=json_encode(explode(',',$this->page_cache));
global_master.class.php:	$maxlimit=$this->page_width;
global_master.class.php:gen_Proc.edit='$this->edit';
global_master.class.php:	if ($this->edit)return;
global_master.class.php:	if ($this->edit)return;
global_master.class.php:	$load->fullpath($this->header_type);
global_master.class.php:	if ($this->meta_data)echo '
global_master.class.php:<meta name="keywords" content="'.$this->keywords.'">
global_master.class.php:<meta name="description" content="'. $this->metadescription . '">
global_master.class.php:	if (!empty($this->page_head)) 
global_master.class.php:		printer::printx( "\n".$this->page_head);
global_master.class.php:		printer::printx( "\n".'<link href="'.$this->roots.Cfg::Style_dir.$this->css_suffix.$this->pagename.'.css?'.rand(0,32323).'" rel="stylesheet" type="text/css">'); 
global_master.class.php:		printer::printx( "\n".'<link href="'.$this->roots.Cfg::Style_dir.$this->pagename.'_paged.css?'.rand(0,32323).'" rel="stylesheet" type="text/css">');
global_master.class.php:		printer::printx( "\n".'<link href="'.$this->roots.Cfg::Style_dir.$this->pagename.'_mediacss.css?'.rand(0,32323).'" rel="stylesheet" type="text/css">');  
global_master.class.php:		(Sys::Advanced||!$this->edit||(!Sys::Advancedoff&&$this->page_options[$this->page_advanced_index]!=='disabled'))&&printer::printx( "\n".'<link href="'.$this->roots.Cfg::Style_dir.$this->pagename.'_adv.css?'.rand(0,32323).'" rel="stylesheet" type="text/css">');
global_master.class.php:		($this->edit)&&printer::printx( "\n".'<link href="'.$this->roots.Cfg::Style_dir.$this->pagename.'pageedit.css?'.rand(0,32323).'" rel="stylesheet" type="text/css">');
global_master.class.php:		 ($this->edit)&&printer::printx("\n".'<link href="'.Cfg_loc::Root_dir.$this->css_fonts_extended_dir.'"  rel="stylesheet" type="text/css">');
global_master.class.php:		($this->edit)&&printer::printx( "\n".'<link href="'.$this->roots.Cfg::Style_dir.$this->pagename.'editoverride.css?'.rand(0,32323).'" rel="stylesheet" type="text/css">'); 
global_master.class.php:		($this->edit)&&printer::printx( "\n".'<link href="'.$this->roots.Cfg::Style_dir.'gen_edit.css?'.rand(0,32323).'" rel="stylesheet" type="text/css">');
global_master.class.php:		<link href="'.$this->roots.Cfg::Style_dir.'gen_page.css" rel="stylesheet" type="text/css">
global_master.class.php:	if (is_file(Cfg_loc::Root_dir.Cfg::Data_dir.'page_stylesheet_'.$this->pagename)){ 
global_master.class.php:		$csspage=explode(',',file_get_contents(Cfg_loc::Root_dir.Cfg::Data_dir.'page_stylesheet_'.$this->pagename));
global_master.class.php:			<link href="'.$this->roots.Cfg::Style_dir.$page.'.css?'.rand(0,32323).'" rel="stylesheet" type="text/css"> 
global_master.class.php:			<link href="'.$this->roots.Cfg::Style_dir.$page.'_mediacss.css?'.rand(0,32323).'" rel="stylesheet" type="text/css">';
global_master.class.php:		 ($this->edit)&& print '
global_master.class.php:			  <link href="'.$this->roots.Cfg::Style_dir.$page.'editoverride.css?'.rand(0,32323).'" rel="stylesheet" type="text/css">';
global_master.class.php:					((Sys::Advanced||!$this->edit)||(!Sys::Advancedoff&&$this->page_options[$this->page_advanced_index]!=='disabled') )&&printer::printx("\n". '<link href="'.$this->roots.Cfg::Style_dir.$page.'_adv.css?'.rand(0,32323).'" rel="stylesheet" type="text/css">'); 
global_master.class.php:	if (is_file(Cfg_loc::Root_dir.Cfg::Data_dir.'page_stylesheet_'.$this->pagename.$this->passclass_ext)&&!empty($this->passclass_ext)){//here we are doubling up to replace the former with the current if it has been rendered  otherwise we need to iframe_generate the pages of clone originals
global_master.class.php:		$csspage=explode(',',file_get_contents(Cfg_loc::Root_dir.Cfg::Data_dir.'page_stylesheet_'.$this->pagename.$this->passclass_ext));
global_master.class.php:					(Sys::Advanced||!$this->edit||(!Sys::Advancedoff&&$this->page_options[$this->page_advanced_index]!=='disabled') )&&printer::printx( '<link href="'.$this->roots.Cfg::Style_dir.$page.'_adv.css?'.rand(0,32323).'" rel="stylesheet" type="text/css">');
global_master.class.php:	if (!empty($this->header_style)){
global_master.class.php:		$this->header_style=(!is_array($this->header_style))?explode(',',$this->header_style):$this->header_style;    
global_master.class.php:		foreach($this->header_style as $var){  
global_master.class.php:				<link href="'.$this->roots.$var.'?'.rand(0,32323).'" rel="stylesheet" type="text/css">'; 
global_master.class.php:     if ($this->edit&&!empty($this->header_edit_style)){
global_master.class.php:		$this->header_edit_style=(!is_array($this->header_edit_style))?explode(',',$this->header_edit_style):$this->header_edit_style;    
global_master.class.php:		foreach($this->header_edit_style as $var){  
global_master.class.php:				<link href="'.$this->roots.Cfg::Style_dir.$var.'?'.rand(0,32323).'" rel="stylesheet" type="text/css">'; 
global_master.class.php:	($this->edit)&&$this->initnoUiSlider(); //javascript slider
global_master.class.php:	if (!empty($this->header_script_function)){#note that the standard pagename script will be dumped here...!!
global_master.class.php:	    $this->header_script=(!is_array($this->header_script))?explode(',',$this->header_script):$this->header_script;    
global_master.class.php:	    $this->header_script[]='gen_Procscripts.js?'.rand(0,32323); //     
global_master.class.php:	if (!empty($this->header_script)){  
global_master.class.php:		$this->header_script=(!is_array($this->header_script))?explode(',',$this->header_script):$this->header_script;    
global_master.class.php:		 foreach ($this->header_script as $var){
global_master.class.php:			    <script  src="'.$this->roots.Cfg::Script_dir.$var.'?'.rand(0,32323).'"></script> ';
global_master.class.php:	if (!$this->edit&&!empty($this->header_script_webmode)){ 
global_master.class.php:		$this->header_script=(!is_array($this->header_script))?explode(',',$this->header_script):$this->header_script;    
global_master.class.php:		 foreach ($this->header_script as $var){
global_master.class.php:			    <script  src="'.$this->roots.Cfg::Script_dir.$var.'?'.rand(0,32323).'"></script> ';
global_master.class.php:	if ($this->edit){
global_master.class.php:	    echo '<title>Edit ' .$this->page_title .'</title>';  
global_master.class.php:		<title> '.$this->page_title .'</title>';
global_master.class.php: $this->header_insert();
global_master.class.php:	$this->header_global();
global_master.class.php:	   if ($this->edit||Sys::Loc)return;
global_master.class.php:	   $this->analytics();
global_master.class.php:	if($this->edit){ 
global_master.class.php:		echo '<body id="'.$this->pagename.'" class="editcoldefault '.$this->pagename.'" '.$this->edit_onload.'>';
global_master.class.php:	    echo '<body id="'.$this->pagename.'" class="'.$this->pagename.'" '.$this->onload.'>';
global_master.class.php:		$this->background_video('page_style');
global_master.class.php:		if ($this->edit&&Sys::Pass_class&&Sys::Viewdb){
global_master.class.php:			$this->print_wrap('restore opts','white redbackground Os3salmon fsminfo');
global_master.class.php:			$pagename=check_data::dir_to_file(__METHOD__,__LINE__,__FILE__,$this->pagename); 
global_master.class.php:			$msg1=' from TimeAgo: '.$this->get_time_ago($time).'&nbsp; Date: '.date("dMY-H-i-s",$time).'&nbsp;Filename: '.$fname.'&nbsp; Size: '.(filesize(Sys::Home_pub.Cfg::Backup_dir.$fname)/1000).'Kb';
global_master.class.php:			$this->print_wrap('restore opts','white redbackground  fsminfo');
global_master.class.php:			$pagename=check_data::dir_to_file(__METHOD__,__LINE__,__FILE__,$this->pagename); 
global_master.class.php:	 if (count($this->storeinst->msg)>0){
global_master.class.php:		foreach ($this->storeinst->msg as $msg){
global_master.class.php:		if (count($this->message)>0||count($this->success)>0){
global_master.class.php:			$this->mailinst->mailwebmaster($this->success,$this->message);
global_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log(__line__.' @ '.__method__.'  ');
global_master.class.php:	$this->deltatime->delta_log('body main');
global_master.class.php:		echo $this->echo_eob;#echo the time
global_master.class.php:	  // $this->render_body_end_add2();//just depends where you want the extra info		
global_master.class.php:	if ($this->edit){// css is rendered to file before destructor
global_master.class.php:		$this->destructor();	//get destructor in before form  close for orphan unclone choices...
global_master.class.php:		$this->edit_form_end(); 
global_master.class.php:	//if (!$this->edit&&!empty($this->add_container))echo '</div><!--addcontainerinner--></div><!--addcontainer-->';
global_master.class.php:	else ($this->edit)&& printer::alert('bottom view');//
global_master.class.php:	(Sys::Logged_in&&$this->edit)&&printer::alert_neu('<a href="'.Sys::Self.'?logout">logout as admin</a>');
global_master.class.php:	(Sys::Logged_in&&$this->edit)&&printer::alert_neu('<a href="'.Sys::Self.'?changepass">change your password</a>');
global_master.class.php:	(Sys::Logged_in&&$this->edit)&&printer::pspace(50);
global_master.class.php:    $this->mailinst=mail::instance();
global_master.class.php:    $this->mysqlinst = mysql::instance();
global_master.class.php:    $this->sess=session::instance();
global_master.class.php:    $this->sess->referrer(); 
global_master.class.php:    //$this->sess->session_check();
global_master.class.php:   // $this->sess->token=create_token(); 
global_master.class.php:    $this->backupinst=backup::instance();
global_master.class.php:    $this->navobj=navigate::instance();
global_master.class.php:    $this->navobj->put('ext',$this->ext);
global_master.class.php:    $this->navobj->put('pagename',$this->pagename);
global_master.class.php:    $this->navobj->put('edit',$this->edit); 
global_master.class.php:	echo '<img src="'.$dir.$pic.'"' .$this->get_size_string($pic,$dir).' alt="'.$alt.'">';
global_master.class.php:	//$color=($main===true)?'moccasin':$this->column_lev_color;
global_master.class.php:	$color=$this->column_lev_color;
global_master.class.php:	$this->show_more++; //echo 'show more is '.$this->show_more;
global_master.class.php:	$class=(empty($class))?$this->column_lev_color.' floatleft editfont editbackground button'.$this->column_lev_color:$class;
global_master.class.php:	$lesswidth=($this->current_net_width<80)?5:20;
global_master.class.php:	$stylewidth='style="'.$zstyle.'"';(!empty($showwidth))?'style="'.$zstyle.'max-width:'.$showwidth.$styledirect.'"':((isset($this->current_net_width)&&!empty($this->current_net_width))?'style="'.$zstyle.'max-width:'.($this->current_net_width-$lesswidth).'px;'.$styledirect.'"':(!empty($styledirect)?'style="'.$zstyle.$styledirect.';"':''));
global_master.class.php:     $id=(strpos($msg_var,'buffer')!==false&&!Sys::Nobuffer)?$msg_var:'show'.$this->show_more;
global_master.class.php:     $type=($this->is_page)?' is page and '.$msg_open:(($this->is_column)?' is column id '.$this->col_id.' '.$msg_open:' is blog and id is '.$this->blog_id. '  '.$msg_open); 
global_master.class.php:          process_data::write_to_file(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Buffer_dir.'output_'.$buffer.$this->pagename.'.dat',$text,true,false,Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Buffer_dir);  
global_master.class.php:	$this->plus_msg=$msg;
global_master.class.php:	<p class="underline left shadowoff editbackground  editfont floatleft button'.$this->column_lev_color.' '.$this->column_lev_color.' editfont" style="max-width:'.($this->current_net_width-20).'px;">
global_master.class.php:	$this->plus_msg=$msg;
global_master.class.php:    $maxwidth=(isset($this->current_net_width)&&$this->current_net_width>50)?$this->current_net_width:$this->current_total_width;
global_master.class.php:	<p style="max-width:'.($maxwidth-20).'px;" class="underline shadowoff editbackground  editfont floatleft button'.$this->column_lev_color.' '.$this->column_lev_color.' editfont" id="plusmoddata'.self::$plusmod.'" onclick="plus(id,\''.$msg.'\');'.$full_width.';">'.$msg.
global_master.class.php:     echo '</div><!--'.$this->plus_msg. ' closeplustrack'.self::$pluscount.'-->';
global_master.class.php:	if (!$this->edit)return;
global_master.class.php:     file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'display_anchor_'.$this->pagename.'.dat',serialize($this->id_array));
global_master.class.php:			$current=$this->page_images_arr;
global_master.class.php:			$current=$this->page_images_expanded_arr;  
global_master.class.php:			$current=$this->auto_slide_arr;  
global_master.class.php:			$current=$this->large_images_arr;   
global_master.class.php:		$file='image_info_'.$file.'_'.$this->pagename; 
global_master.class.php:	$this->update_arrays(); 
global_master.class.php:	$this->deltatime->delta_log('begin destructor');  
global_master.class.php:	if (isset($_POST['submit'])&&Sys::Norefresh){//printer::vert_print($this->backup_page_arr); 
global_master.class.php:			$this->show_more('Show select Queries');
global_master.class.php:			$this->show_close('Show select Queries');
global_master.class.php:		$this->success[]='Page Changes Have Been Submitted for Update';
global_master.class.php:		 if (count($this->success)>0){
global_master.class.php:			foreach($this->success as $msg){
global_master.class.php:		if (count($this->message)>0){ 
global_master.class.php:			foreach($this->message as $msg){
global_master.class.php:		if (count($this->instruct)>0){ 
global_master.class.php:			foreach($this->instruct as $msg){
global_master.class.php:		if (count($this->alert)>0){
global_master.class.php:			foreach($this->message as $msg){
global_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log(__line__.' @ '.__method__.'  ');
global_master.class.php:	if($this->edit){
global_master.class.php:		if (count($this->list)>0){
global_master.class.php:			printer::vert_print($this->list);
global_master.class.php:               $_SESSION[Cfg::Owner.'update_msg'][]=printer::alert($this->deltatime->return_delta_log(),1,'small');
global_master.class.php:		else if(Sys::Deltatime) printer::alert( $this->deltatime->return_delta_log());
global_master.class.php:	$q="select blog_id from $this->master_post_table where blog_unclone!='' and blog_unstatus='unclone' AND blog_table_base='$this->pagename'";  
global_master.class.php:	$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_master.class.php:	if ($this->mysqlinst->affected_rows()) {
global_master.class.php:		while(list($blog_id)=$this->mysqlinst->fetch_row($r,__line__,__method__)){#checking in array to remove valid unclones from list to find orphans
global_master.class.php:			if (in_array($blog_id,$this->current_unclone_table)) continue;
global_master.class.php:	if ($this->edit&&$count>0){  
global_master.class.php:		$this->styleoff=true;//redundant
global_master.class.php:		$q="select blog_id,blog_col,blog_type,blog_order,blog_table,blog_data1 from $this->master_post_table where blog_unclone!='' and blog_unstatus='unclone' AND blog_table_base='$this->pagename'";  
global_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);	 
global_master.class.php:		if ($this->mysqlinst->affected_rows()) {
global_master.class.php:			while(list($blog_id,$blog_col,$blog_type,$blog_order,$blog_table,$blog_data1)=$this->mysqlinst->fetch_row($r,__line__,__method__)){
global_master.class.php:				$this->edit=false;
global_master.class.php:				$data=$this->pagename.'_colId_'.$blog_col.'_postId_'.$blog_id;
global_master.class.php:				if (in_array($blog_id,$this->current_unclone_table)) continue;
global_master.class.php:				 $this->accessvar_obj($this->master_post_table,Cfg::Post_fields,'blog_table',$blog_table,'blog_order',$blog_order);
global_master.class.php:  				//self::editpages_obj($this->master_post_table,Cfg::Post_fields,'','blog_order',$blog_order,'blog_table',$blog_table,'populate_data');
global_master.class.php:				$this->blog_id=$blog_id;
global_master.class.php:				$this->column_level=0;
global_master.class.php:				$this->column_net_width[$this->column_level]=500;
global_master.class.php:				//$this->total_float(false,true);  
global_master.class.php:				$id=($this->blog_type=='nested_column')?$this->blog_data1:$this->blog_id;
global_master.class.php:				$name=($this->blog_type=='nested_column')?'remove_unclone_column':'remove_unclone_post';
global_master.class.php:				$msg=($this->blog_type=='nested_column')?' To MOVE IT ENTIRELY Elsewhere OR SELECT specific POST IDs To Copy/Move Elsewhere':' to Move This Post Elsewhere';
global_master.class.php:				$post_prefix=($this->blog_type==='nested_column')?'C':'P';
global_master.class.php:				printer::printx('<p class="fs1black editbackground  editfont editcolor"><input type="checkbox" name="'.$name.'[]" value="'.$id.'">Check Here to Delete Orphaned Unclone Type: ' .str_replace('_',' ',strtoupper($this->blog_type)).' OR Use Id '.$post_prefix.$id.$msg.'  </p>');
global_master.class.php:				 $this->show_more('View '.$blog_type,'Close View');//show more View
global_master.class.php:				$this->blog_table_base='';
global_master.class.php:				$this->col_table_base='';
global_master.class.php:				if ($this->blog_type==='text'){
global_master.class.php:					$this->text_render($data,$this->blog_table);
global_master.class.php:				if ($this->blog_type==='image'){
global_master.class.php:					$this->build_pic($data,Cfg_loc::Root_dir.Cfg::Page_images_dir); 
global_master.class.php:				if ($this->blog_type==='float_image_right'){
global_master.class.php:					$this->css.="\n.$data$this->pic_ext {float:right;}";
global_master.class.php:					$this->float_pic($data.$this->pic_ext,$data, Cfg_loc::Root_dir.Cfg::Page_images_dir); 
global_master.class.php:				if ($this->blog_type==='float_image_left'){
global_master.class.php:					$this->css.="\n.$data$this->pic_ext {float:left;}";
global_master.class.php:					$this->float_pic($data.$this->pic_ext,$data, Cfg_loc::Root_dir.Cfg::Page_images_dir); 
global_master.class.php:				 if ($this->blog_type==='video'){  
global_master.class.php:					$this->video_post($data,$this->blog_vid_info);
global_master.class.php:				 if ($this->blog_type==='contact'){ 
global_master.class.php:					$this->contact_form($data,'',false,'Edit Overall Contact Form Styling',true,$this->blog_table); 
global_master.class.php:				if ($this->blog_type==='social_icons'){
global_master.class.php:					$this->social_icons($data,'',false,'Edit Social Icon Styling',true,$this->blog_table); 
global_master.class.php:				 if ($this->blog_type==='navigation_menu'){  
global_master.class.php:					$this->nav_menu($data,$this->blog_data1,false,'',true,$tablename); 
global_master.class.php:				if ($this->blog_type==='nested_column'){
global_master.class.php:					$q="select col_table from $this->master_col_table where col_id=$this->blog_data1"; 
global_master.class.php:					$rnc=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_master.class.php:					list ($col_table)=$this->mysqlinst->fetch_row($rnc, false);
global_master.class.php:					$this->publish($this->blog_data1);//view unpublished posts if any
global_master.class.php:					$col_field_arr2=$this->col_field_arr;
global_master.class.php:					$q='select col_id,'.Cfg::Col_fields." from $this->master_col_table where col_id='$this->blog_data1'";
global_master.class.php:					$pp=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_master.class.php:					if (!$this->mysqlinst->affected_rows()){
global_master.class.php:						$row=$this->mysqlinst->fetch_assoc($pp,__LINE__,__METHOD__);
global_master.class.php:							$this->$field=$row[$field];// create upcoming nested column values
global_master.class.php:						$this->column_options=explode(',',$this->col_options);
global_master.class.php:							if (!array_key_exists($i,$this->column_options))$this->column_options[$i]=0;
global_master.class.php:						$this->column_level=0;
global_master.class.php:						$this->col_primary=1; //avoids problems with column level
global_master.class.php:						$this->blog_render($this->blog_data1,true,$this->pagename);		  
global_master.class.php:				$this->show_close();//show more View
global_master.class.php:		$this->edit=true; //reset back after displaying orphaned unclones
global_master.class.php:		if ($count>0&&!isset($_SESSION[Cfg::Owner.'_'.$this->pagename.'_leftovers'])){
global_master.class.php:		if ($count==0)unset($_SESSION[Cfg::Owner.'_'.$this->pagename.'_leftovers']);
global_master.class.php:		else $_SESSION[Cfg::Owner.'_'.$this->pagename.'_leftovers']=true;
global_master.class.php:	($this->edit&&(Sys::Tables||Sys::Server))&&printer::vert_print($_SERVER);
global_master.class.php:	($this->edit&&(Sys::Tables||Sys::Session))&&printer::vert_print($_SESSION);
global_master.class.php:		$iframe_msg= (!isset($this->iframe_update_msg))?'Allowing for Data Update of Content in iframes to finish loading at top of this page':$this->iframe_update_msg;	
global_master.class.php:	if($this->edit==='return')return;#class object invoked for function access only
global_master.class.php:	if ($this->users_record){ return; 
global_master.class.php:	   //($this->edit)&&$usr->put('edit','edit');#defualt is noedit..
global_master.class.php:		//$usr->delta_log($this->deltatime->return_delta_log());
global_master.class.php:		$usr->diff_request_ini=$this->deltatime->diff_request_ini;
global_master.class.php:		($this->browser_info&&$this->browser_active)&&$usr->browser_info='true'; 	
global_master.class.php:		$usr->cookie_count=$this->cookie_count;
global_master.class.php:		$usr->cookie_date=$this->cookie_date;  
global_master.class.php:		$usr->cookie_reference=$this->cookie_reference;
global_master.class.php:		$usr->session_log_count=$this->session_log_count;
global_master.class.php:		$usr->session_log_id=$this->session_log_id; 
global_master.class.php:	   if (Sys::Loc)(isset($php_errormsg))&&$this->alert($php_errormsg);
global_master.class.php:	  if (Sys::Debug||Sys::Deltatime)echo 'deltatime end: '.$this->deltatime->delta(); #do not register hit//($this->edit&&Sys::Pass_class)
global_master.class.php:	$this->deltatime->delta_log('end destructor');  
global_master.class.php:	$array=array_unique($this->page_stylesheet_inc);  
global_master.class.php:	file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.'page_stylesheet_'.$this->pagename.$this->passclass_ext,$data);
global_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log(__line__.' @ '.__method__.'  '); 
global_master.class.php:	$this->css_stylesheet_include();//include stylesheets of non local clones
global_master.class.php:	$this->css_at_fonts();//gen specific local fonts and all for editpages 
global_master.class.php:	 $this->css_initiate(); 
global_master.class.php:	$this->css_generate();
global_master.class.php:	$this->css_custom_page();
global_master.class.php:	 $this->css_nav();  
global_master.class.php:	$this->css_custom();// can be used to bypass upper css info....    $this->css_pics(); currently not in use
global_master.class.php:	$this->css_gall();
global_master.class.php:	$this->css_grid();  
global_master.class.php:	$this->css_custom_site();
global_master.class.php:	$this->css_custom_gallery(); 
global_master.class.php:	$this->css_highslide();
global_master.class.php:	$this->css_render_file();
global_master.class.php:	$this->css_edit_file();
global_master.class.php:	$this->css_grid='';
global_master.class.php:	 if (!isset($this->grid_class_selected_wid_array))return;
global_master.class.php:	/*$this->css_grid='
global_master.class.php:			$this->{'grid_class_selected_'.$type.'_array'}=array_unique($this->{'grid_class_selected_'.$type.'_array'});
global_master.class.php:	foreach(array_unique($this->column_grid_css_arr) as $arr){
global_master.class.php:		$this->css_grid.='
global_master.class.php:			$this->css_grid.=(in_array('wid-bp-max'.$bp_arr[0].'-0-'.$gu,$this->grid_class_selected_wid_array,true))?'
global_master.class.php:				$this->css_grid.=(in_array('wid-bp-max'.$bp_arr[0].'-'.$i.'-'.$gu,$this->grid_class_selected_wid_array,true))?'
global_master.class.php:				$this->css_grid.=(in_array('right-bp-max'.$bp_arr[0].'-'.$i2.'-'.$gu,$this->grid_class_selected_right_array,true))?' 
global_master.class.php:				$this->css_grid.=(in_array('left-bp-max'.$bp_arr[0].'-'.$i2.'-'.$gu,$this->grid_class_selected_left_array,true))?'
global_master.class.php:			$this->css_grid.=(in_array('wid-bp-max'.$bp_arr[0].'-'.$gu.'-'.$gu,$this->grid_class_selected_wid_array,true))?'
global_master.class.php:			$this->css_grid.='
global_master.class.php:			$this->css_grid.=(in_array('wid-bp-'.$bp.$mw.'-0-'.$gu,$this->grid_class_selected_wid_array,true))?'
global_master.class.php:				$this->css_grid.=(in_array('wid-bp-'.$bp.$mw.'-'.$i.'-'.$gu,$this->grid_class_selected_wid_array,true))?'
global_master.class.php:				$this->css_grid.=(in_array('right-bp-'.$bp.$mw.'-'.$i2.'-'.$gu,$this->grid_class_selected_right_array,true))?' 
global_master.class.php:				$this->css_grid.=(in_array('left-bp-'.$bp.$mw.'-'.$i2.'-'.$gu,$this->grid_class_selected_left_array,true))?'
global_master.class.php:			$this->css_grid.=(in_array('wid-bp-'.$bp.$mw.'-'.$gu.'-'.$gu,$this->grid_class_selected_wid_array,true))?'
global_master.class.php:	foreach($this->at_fonts as $af){   
global_master.class.php:			$this->fontcss.='
global_master.class.php:	foreach($this->fonts_extended as $af){   
global_master.class.php:          $this->editgencss.='
global_master.class.php:	$font=(!empty($this->master_font))?'font-family: '.$this->master_font.';':'';
global_master.class.php:	$color=(!empty($this->editor_color))?'color: #'.$this->editor_color.'; ':'color: #FF5900; ';
global_master.class.php:     $this->initcss.='
global_master.class.php:	.editfontfamily {font-family:'.$this->edit_font_family.';} 
global_master.class.php:	.editfont {font-family:'.$this->edit_font_family.';text-shadow:none; text-align:left;font-size:'.($this->edit_font_size*16).'px;}  
global_master.class.php:	a:link.info,a:visited.link {color:#'.$this->info.';background:rgba(255,255,255,0.33)}
global_master.class.php:	.navnavy {color:#'.$this->navy.'; text-shadow: -.8px -.8px  0.4px #ffffff;}
global_master.class.php:	.highlight,.highlight:visited{color:#'.$this->info.';font-style:italic;font-weight:500;}
global_master.class.php:	.navr1 a:link, .navr1 a:visited{color:#'.$this->navy.';}
global_master.class.php:	color:#'.$this->navy.';
global_master.class.php:	   border: 2px  double #'.$this->navy.'}
global_master.class.php:    .ramana{padding:.1em .5em;text-align:left; color:#'.$this->editor_color.';background:#'.$this->editor_background.'; display:inline-block;}
global_master.class.php:	.ramanaleft{padding:.1em .5em;color:#'.$this->editor_color.'; text-align: left;background:#'.$this->editor_background.'; display:inline-block;}
global_master.class.php:	.editcolor{color:#'.$this->editor_color.';}
global_master.class.php:	.editbackground{ background:#'.$this->editor_background.';} 
global_master.class.php:	$this->sitecss.="\n".$this->gall_css."\n".$this->nav_site_css."\n".$this->initcss."\n".$this->highslidecss;
global_master.class.php:	$this->css.="\n".$this->fontcss."\n".$this->navcss."\n".$this->imagecss."\n".$this->css_grid; 
global_master.class.php:    file_put_contents($this->roots.Cfg::Style_dir.$this->pagename.'.css',$this->css);
global_master.class.php:    file_put_contents($this->roots.Cfg::Style_dir.$this->pagename.'_paged.css',$this->pagecss);
global_master.class.php:    file_put_contents($this->roots.Cfg::Style_dir.'gen_page.css','@charset "UTF-8";'. $this->sitecss);//for add pages Pics etc.
global_master.class.php:     file_put_contents($this->roots.Cfg::Style_dir.$this->pagename.'_adv.css','@charset "UTF-8";'. $this->advancedmediacss);// 
global_master.class.php:     file_put_contents($this->roots.Cfg::Style_dir.$this->css_suffix.$this->pagename.'_mediacss.css','@charset "UTF-8";'. $this->mediacss);// 
global_master.class.php:	$return=include_copy_gen::copypath('slippry.js',$this->roots.Cfg::Script_dir.'slippry.js');
global_master.class.php:	(!$return)&&mail::alert('False return on   slippry.js'.$this->roots.Cfg::Script_dir.'slippry.js');
global_master.class.php:	$return=include_copy_gen::copypath('slippry.css',$this->roots.Cfg::Style_dir.'slippry.css');
global_master.class.php:	(!$return)&&mail::alert('False return on   slippry.css'.$this->roots.Cfg::Style_dir.'slippry.css');
global_master.class.php:    $this->css_edit_page_common();
global_master.class.php:    $this->css_edit_page();   // this is for page_specific editcss...
global_master.class.php:     file_put_contents($this->roots.Cfg::Style_dir.$this->pagename.$this->css_suffix.'editoverride.css', $this->editoverridecss);// 
global_master.class.php:	file_put_contents($this->roots.Cfg::Style_dir.$this->pagename.'pageedit.css', $this->pageeditcss);// editcss generated by all the system css for editcss 
global_master.class.php:   file_put_contents($this->roots.Cfg::Style_dir.'gen_edit.css', $this->editgencss);// editcss generated by all the system css for editcss
global_master.class.php:      $this->css.='
global_master.class.php:      $this->css.='
global_master.class.php:     $this->css.='
global_master.class.php:    $this->css.='
global_master.class.php:    $this->css.='
global_master.class.php:     $this->css.='
global_master.class.php:$this->highslidecss=' 
global_master.class.php:	$this->gall_css='
global_master.class.php: .containbackto { position:relative; float:left;  width:6'.$this->rem.';  margin-left:200px; margin-top:100px; }
global_master.class.php:text-align:center; font-size: .9'.$this->rem.'; font-family: arial,sans-serif;font-weight: 700;
global_master.class.php:.fs1color{border:1px solid  #'.$this->editor_color.';}  
global_master.class.php:.backtoborder,.backto,.containbackto{padding:.3'.$this->rem.' 0 .4'.$this->rem.' 0;}
global_master.class.php:	$this->nav_site_css='
global_master.class.php:     $this->show_more('Configure Outer Tab Title, keywords and Meta data','noback','','',500);
global_master.class.php:     $this->print_wrap('outer tab');
global_master.class.php:    <textarea class="utility" name="metadescription" cols="50" rows="3" id="metadescription">' . $this->metadescription.'</textarea>
global_master.class.php:    <textarea class="utility" name="keywords" cols="50" rows="3" id="keywords">' . $this->keywords.'</textarea>
global_master.class.php:    <textarea class="utility" name="page_title" cols="50" rows="3" id="page_title">' . $this->page_title.'</textarea>
global_master.class.php:	$this->close_print_wrap('outer tab'); 
global_master.class.php:     $this->show_close('Configure Outer Tab Title');  
global_master.class.php:	$fontfamily=(!empty($this->master_font))? 'font-family: '.$this->master_font.'; ':' font-family: Arial, helvetica,  sans-serif; '; 
global_master.class.php:   $this->editgencss.=' 
global_master.class.php:    .purple{color:#'.$this->purple.';}
global_master.class.php:	.bordernavy{border-color:#'.$this->navy.';}
global_master.class.php:	.borderblue{border-color:#'.$this->blue.';}
global_master.class.php:	.borderekblue{border-color:#'.$this->ekblue.';}
global_master.class.php:	.borderpos{border-color:#'.$this->pos.';}
global_master.class.php:	.borderred{border-color:#'.$this->redAlert.';}
global_master.class.php:	.borderinfo{border-color:#'.$this->info.';}
global_master.class.php:	color:#'.$this->pos.';
global_master.class.php:	   border: 3px  double #'.$this->navy.';
global_master.class.php:	   outline: 2px solid #'.$this->floralwhite.';}
global_master.class.php:	 input,legend,label,option,select  {margin:0; padding:0;color:#'.$this->editor_color.';}
global_master.class.php:	.warn1,.warn{margin:1px; background: #f1d8d8; padding:1px 3px; border: 2px  double #'.$this->redAlert.'}
global_master.class.php:	.warnlight{margin:1px; background: #fff2f2; padding:1px 3px; border: 2px  double #'.$this->redAlert.'}
global_master.class.php:	.caution{margin:1px; background: orange; padding:1px 3px; border: 2px  double #'.$this->redAlert.'}
global_master.class.php:	.cautionmaroon{color:maroon; margin:1px; background: #f1d8d8; padding:1px 3px; border: 2px  double #'.$this->redAlert.'}
global_master.class.php:	.neg{color:#'.$this->redAlert.';}
global_master.class.php:	.alertnotice {font-weight:800; color:#'.$this->redAlert.';}
global_master.class.php:	.fs1npred {border: 1px  solid #'.$this->redAlert.';}
global_master.class.php:	.fs1npinfo {border: 1px  solid #'.$this->info.';} 
global_master.class.php:	.fs1lpinfo{padding: 4px 4px 4px 25px; border: 1px  solid #'.$this->info.';} 
global_master.class.php:	.fs2npred {margin:0;padding:0;border: 2px  solid #'.$this->redAlert.';}
global_master.class.php:	.fs2npinfo {border: 2px  solid #'.$this->{'info'}.';}
global_master.class.php:	.fsmcolor   { margin: 4px; padding:10px; border: 2px  double #'.$this->editor_color.' } 
global_master.class.php:		border: 4px  double #'.$this->info.';
global_master.class.php:$this->pageeditcss.='
global_master.class.php:	 .editfontcol {font-size:'.($this->edit_font_size*16).'px;font-family:'.$this->edit_font_family.'text-shadow:none; text-align:center;}
global_master.class.php:	editcolor{color:#'.$this->editor_color.';}
global_master.class.php:	.ramanablock {max-width:700px; text-align:left;background:#'.$this->editor_background.';color:#'.$this->editor_color.';}
global_master.class.php:	.ramanafullblock {text-align:left;background:#'.$this->editor_background.';color:#'.$this->editor_color.';}
global_master.class.php:     input,textareax,.uncloak{background:#'.$this->editor_background.';}
global_master.class.php:     textarea {  border: 1px solid #'.$this->editor_color.';}
global_master.class.php:     input.utility{color:#'.$this->editor_color.';background:#'.$this->editor_background.';} 
global_master.class.php:     textarea.utility {'.$fontfamily.' width:90%; border: 1px solid #'.$this->editor_color.'; color: #'.$this->editor_color.';background:#'.$this->editor_background.';}
global_master.class.php:    .utility_horiz ul ul  li  {background-color: #'.$this->editor_background.'; width:195px; } 
global_master.class.php:	.utility_horiz {background:#'.$this->editor_background.'; color:#'.$this->editor_color.'; WIDTH: 100%; margin: 0 auto;}
global_master.class.php:    .photoupload{color:#'.$this->editor_color.';display:block;} 
global_master.class.php:	.editbackground{ background:#'.$this->editor_background.';} 
global_master.class.php:	.fs1color{border:1px solid  #'.$this->editor_color.';}
global_master.class.php:	.fs1npblack {border: 1px  solid #'.$this->editor_color.';}
global_master.class.php:	.editfontcenter {font-size:'.($this->edit_font_size*16).'px;font-family:'.$this->edit_font_family.';text-align:center;}
global_master.class.php:foreach ($this->color_order_arr as $color){ 
global_master.class.php:     $colorlight=process_data::colourBrightness($this->$color,.4);
global_master.class.php:	$this->editgencss.='
global_master.class.php:	   background: #'.$this->editor_background.';   margin: 2px;
global_master.class.php:	   padding: 2px; line-height:110%; border-width:1px; border-style: solid; border-color:#'.$this->$color.';  
global_master.class.php:	   background: #'.$this->editor_background.';   margin: 2px;
global_master.class.php:	   padding: 2px; border-width:2px; border-style: solid; border-color:#'.$this->$color.';  
global_master.class.php:	   background: #'.$this->editor_background.';   margin: 5px 5px ;
global_master.class.php:	   padding: 2px; line-height:120%; border-width:9px; border-style: solid; border-color:#'.$this->info.';  
global_master.class.php:	$carr=$this->color_order_arr;
global_master.class.php:	$this->editgencss.= 
global_master.class.php:	'.fs1'.$color.'{padding:3px; margin:3px; border: 1px  solid #'.$this->$color.';} 
global_master.class.php:	.fs2'.$color.'{padding: 3px; margin:3px; border: 2px  solid #'.$this->$color.';}  
global_master.class.php:	.fs3'.$color.'{padding: 3px; margin:3px; border: 3px  solid #'.$this->$color.';} 
global_master.class.php:	.fd1'.$color.'{padding: 4px; margin:4px; border: 1px  double #'.$this->$color.';} 
global_master.class.php:	.fd2'.$color.'{padding: 4px; margin:4px; border: 2px  double #'.$this->$color.';}  
global_master.class.php:	.fd3'.$color.'{padding: 4px; margin:4px; border: 3px  double #'.$this->$color.';}    
global_master.class.php:	.bs1'.$color.'{border: 1px  solid #'.$this->$color.';}   
global_master.class.php:	.bs2'.$color.'{border: 2px  solid #'.$this->$color.';}  
global_master.class.php:	.bs3'.$color.'{border: 3px  solid #'.$this->$color.';} 
global_master.class.php:	.bs4'.$color.'{border: 4px  solid #'.$this->$color.';}
global_master.class.php:	.Os3'.$color.'{outline: 3px  solid #'.$this->$color.';}
global_master.class.php:	.bdot1'.$color.'{border: 1px  dotted #'.$this->$color.';} 
global_master.class.php:	.bshad1'.$color.'{-moz-box-shadow: 0px 0px 1px 1px #'.$this->$color.'; 
global_master.class.php:-webkit-box-shadow:  0px 0px 1px 1px #'.$this->$color.';    
global_master.class.php:box-shadow:  0px 0px 1px 1px #'.$this->$color.';}
global_master.class.php:	.bdot2'.$color.'{border: 2px  dotted #'.$this->$color.';} 
global_master.class.php:	.bshad2'.$color.'{-moz-box-shadow: 0px 0px 2px 2px #'.$this->$color.'; 
global_master.class.php:-webkit-box-shadow:  0px 0px 2px 2px #'.$this->$color.';    
global_master.class.php:box-shadow:  0px 0px 3px 3px #'.$this->$color.';}
global_master.class.php:	.bdot3'.$color.'{border: 3px  dotted #'.$this->$color.';} 
global_master.class.php:	.bdot4'.$color.'{border: 4px  dotted #'.$this->$color.';} 
global_master.class.php:	.bshad3'.$color.'{-moz-box-shadow: 0px 0px 3px 3px #'.$this->$color.'; 
global_master.class.php:-webkit-box-shadow:  0px 0px 3px 3px #'.$this->$color.';    
global_master.class.php:box-shadow:  0px 0px 3px 3px #'.$this->$color.';}
global_master.class.php:	.bshad4'.$color.'{-moz-box-shadow: 0px 0px 4px 4px #'.$this->$color.';
global_master.class.php:-webkit-box-shadow:  0px 0px 4px 4px #'.$this->$color.';    
global_master.class.php:box-shadow:  0px 0px 4px 4px #'.$this->$color.';}
global_master.class.php:	.fsec'.$color.'{margin: 2px; padding:3px; border: 4px  double #'.$this->$color.';}
global_master.class.php:	.fsm2'.$color.'{margin: 4px; padding:10px; border: 2px  double #'.$this->$color.';}
global_master.class.php:	.fsm'.$color.'{margin: 4px; padding:10px; border: 2px  double #'.$this->$color.';}';
global_master.class.php:	$this->editgencss.= 
global_master.class.php:	'.'.$color.'{color:#'.$this->$color.';}';
global_master.class.php:	$this->editgencss.= 
global_master.class.php:	'.border'.$color.'{border-color:#'.$this->$color.';}';
global_master.class.php:	$this->editgencss.=
global_master.class.php:	'.'.$color.'background{background:#'.$this->$color.';}';
global_master.class.php:   $this->editgencss.='
global_master.class.php:	.fs1npred .highslide-image {border: 16px  solid #'.$this->redAlert.';} 
global_master.class.php:   .fcol{ border:1px dashed #'.$this->redAlert.';}
global_master.class.php:   .sfield{text-align:left; border:1px solid #'.$this->redAlert.';}
global_master.class.php:   .redfield{text-align:left; border:3px solid #'.$this->redAlert.';}
global_post_master.class.php:	$img_opt_arr=explode(',',$this->blog_data2);
global_post_master.class.php:	$width_percent=($this->column_level>0)?$this->column_total_net_width_percent[$this->column_level]:100; 
global_post_master.class.php:	list($picname,$alt)=process_data::process_pic($this->blog_data1);
global_post_master.class.php:	($this->edit)&&$maxplus=(!empty($img_opt_arr[$image_max_expand_index])&&$img_opt_arr[$image_max_expand_index]>50)?$img_opt_arr[$image_max_expand_index]:((is_numeric($this->page_options[$this->page_max_expand_image_index])&&$this->page_options[$this->page_max_expand_image_index]>50)?$this->page_options[$this->page_max_expand_image_index]:Cfg::Page_pic_expand_plus);
global_post_master.class.php:	$this->edit_styles_open();
global_post_master.class.php:     $this->image_height_set=$image_height_set=($img_opt_arr[$image_height_set_index]==='setheight')?true:false;
global_post_master.class.php:	$wpercent=($img_opt_arr[$image_width_limit_index]>=5&&$img_opt_arr[$image_width_limit_index]<100)?$img_opt_arr[$image_width_limit_index]:(($this->blog_type==='image')?100:50); 
global_post_master.class.php:	list($border_width,$border_height)=$this->border_calc($this->blog_data4);//img
global_post_master.class.php:	list($post_pad_width,$post_mar_width)=$this->pad_mar_calc($this->blog_style,$this->column_total_width[$this->column_level]); //around post
global_post_master.class.php:	$shadowcalc=$this->calc_border_shadow($this->blog_data4); 
global_post_master.class.php:	list($pad_width,$mar_width)=$this->pad_mar_calc($this->blog_data4,$this->column_total_width[$this->column_level]);  
global_post_master.class.php:	$width_min_mode=($this->blog_tiny_data1==='maintain_width')?'max-width:'.($this->current_net_width*$wpercent/100).'px':'width:'.$wpercent.'%;'.$min_width_val;
global_post_master.class.php:     ($this->edit)&&    
global_post_master.class.php:		$this->blog_options($data,$this->blog_table);
global_post_master.class.php:     if ($this->edit){// Sys::Pass_class
global_post_master.class.php:		print('<p id="return_'.$this->blog_id.'">&nbsp;</p>');
global_post_master.class.php:          $bp_arr=$this->page_break_arr;
global_post_master.class.php:		if ($this->column_use_grid_array[$this->column_level]==='use_grid'){ 
global_post_master.class.php:			$max_pic_size=$this->grid_width_chosen_arr['max'.$bp_arr[0]]*$wpercent/100;
global_post_master.class.php:			foreach($this->page_break_arr as $bp){
global_post_master.class.php:				$max_pic_size=max($max_pic_size,$this->grid_width_chosen_arr[$bp]*$wpercent/100);
global_post_master.class.php:				if($this->blog_tiny_data1==='maintain_width'){
global_post_master.class.php:					$maxwidth=$this->grid_width_chosen_arr['max'.$bp_arr[0]]*$wpercent/100;
global_post_master.class.php:			$max_pic_size=$this->current_net_width*$wpercent/100; 
global_post_master.class.php:		$type=($this->column_use_grid_array[$this->column_level]==='use_grid')?'rwd':'no_rwd';
global_post_master.class.php:		$grid_post_percent_arr=($this->column_use_grid_array[$this->column_level]==='use_grid')?$this->grid_width_chosen_arr:'';//array becomes size of pic plugging in viewport 
global_post_master.class.php:		$maxfullwidth=check_data::key_up($this->page_cache_arr,$this->current_net_width*$wpercent/100,'val',$this->page_width);//current net width should check out as the maximum width permissible under all circumstances  not accounting for width_limiting...  for this post..  now. if clones are locally resized larger there could be a problem with them finding their new width
global_post_master.class.php:		file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'build_pic_'.$this->passclass_ext.$data,$best_guess.'@@'. $type.'@@'.serialize($grid_post_percent_arr).'@@'.$maxfullwidth);
global_post_master.class.php:		$quality=(!empty($img_opt_arr[$image_quality_index])&&$img_opt_arr[$image_quality_index]>9&&$img_opt_arr[$image_quality_index]<101)?$img_opt_arr[$image_quality_index]:((!empty($this->page_options[$this->page_image_quality_index])&&$this->page_options[$this->page_image_quality_index]<101&&$this->page_options[$this->page_image_quality_index]>9)?$this->page_options[$this->page_image_quality_index]:Cfg::Pic_quality); 
global_post_master.class.php:				list($exp_width,$exp_height)=$this->get_size($picname,Cfg_loc::Root_dir.Cfg::Page_images_expand_dir);
global_post_master.class.php:			$this->page_images_expand_arr=array('id'=>$this->blog_id,'data'=>$this->data,'picname'=>$picname,'is_clone'=>$this->is_clone,'clone_local_style'=>$this->clone_local_style,'clone_local_data'=>$this->clone_local_data,'maxwidth'=>$maxplus,'quality'=>$quality,'quality_option'=>$img_opt_arr[$image_quality_index]); 
global_post_master.class.php:			foreach($this->page_cache_arr as $ext){
global_post_master.class.php:								if ($arr['id']===$this->blog_id){
global_post_master.class.php:				$this->show_more('Image Quality Info');
global_post_master.class.php:				$this->show_close('Image Quality Info');
global_post_master.class.php:				$this->page_images_arr[]=array('id'=>$this->blog_id,'data'=>$this->data,'picname'=>$picname,'is_clone'=>$this->is_clone,'clone_local_style'=>$this->clone_local_style,'clone_local_data'=>$this->clone_local_data,'maxwidth'=>$maxfullwidth,'quality'=>$quality,'quality_option'=>$img_opt_arr[$image_quality_index]); ;//this will be compiled in destructor as the current record for this page
global_post_master.class.php:	$pic_info_arr=explode('@@',file_get_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'build_pic_'.$this->passclass_ext.$data));
global_post_master.class.php:	$best_guess=check_data::key_up($this->page_cache_arr,$best_guess,'val',$this->page_width); //page width provided as ultimate limiter if misconfiged
global_post_master.class.php:	if (!empty($this->viewport_current_width)&&$this->viewport_current_width>200){
global_post_master.class.php:			list($key,$width_value)=check_data::key_up($current_grid_chosen_arr,$this->viewport_current_width,'keyval');
global_post_master.class.php:			#width#$current_grid_chosen_arr,'keyval',$this->page_width) directly gives the width available of the image a any given breakpoint just beyond the current viewport width...    .
global_post_master.class.php:		$image_width=min($this->viewport_current_width,$width_value,$maxwidth);
global_post_master.class.php:			$image_width=min($this->current_net_width,$this->viewport_current_width,$maxwidth);
global_post_master.class.php:	$image_width=check_data::key_up($this->page_cache_arr,$image_width,'val',$this->page_width);
global_post_master.class.php:		$quality=(!empty($img_opt_arr[$image_quality_index])&&$img_opt_arr[$image_quality_index]>9&&$img_opt_arr[$image_quality_index]<101)?$img_opt_arr[$image_quality_index]:((!empty($this->page_options[$this->page_image_quality_index])&&$this->page_options[$this->page_image_quality_index]<101&&$this->page_options[$this->page_image_quality_index]>9)?$this->page_options[$this->page_image_quality_index]:Cfg::Pic_quality);
global_post_master.class.php:		(Cfg::Development)&&mail::alert("creating image resize for $picname edit mode is $this->edit");
global_post_master.class.php:				($this->edit)&&printer::alert_neg('Your Previous Image Does not Exist. Upload a New Image &nbsp;<a href="add_page_pic.php?blog_image_noexpand='.$image_expand.'&amp;wwwexpand='.$maxplus.'&amp;image_noresize='.$image_noresize.'&amp;expandfield=blog_tiny_data2&amp;prevpic=0&amp;www='.$maxwidth.'&amp;ttt='.$this->blog_table.'&amp;fff=blog_data1&amp;quality='.$quality.'&amp;id='. $this->blog_id.'&amp;id_ref=blog_id&amp;pgtbn='.$this->pagename.'&amp;postreturn='.Sys::Self.'&amp;css='.$this->roots.Cfg::Style_dir.$this->pagename. '&amp;sess_override&amp;sess_token='.$this->sess->sess_token.'"><u>Here</u></a>');
global_post_master.class.php:	//list($width,$height)=$this->get_size($picname,$picdir);
global_post_master.class.php:	switch ($this->blog_type){
global_post_master.class.php:               \$('.$this->dataCss a.image_caption  span').css({'bottom': 0});
global_post_master.class.php:	if ($this->edit){
global_post_master.class.php:              $this->imagecss.='
global_post_master.class.php:			 #'.$this->dataCss.' p.imagewrap img {width:auto;max-width:auto; min-width:0px;}
global_post_master.class.php:                 $this->imagecss.='
global_post_master.class.php:                     .'.$this->dataCss.' p.imagewrap {'.$width_min_mode.'}
global_post_master.class.php:               if ($this->blog_tiny_data1==='maintain_width'&&$this->column_use_grid_array[$this->column_level]==='use_grid'){
global_post_master.class.php:                    $bp_arr=$this->page_break_arr;
global_post_master.class.php:                    $this->imagecss.='
global_post_master.class.php:                     .'.$this->dataCss.'_img {width:'.($this->grid_width_chosen_arr['max'.$bp_arr[0]]*$wpercent/100-$shadowcalc).'px;max-width:'.$maxwidth_adjust_shadow_calc.'%;
global_post_master.class.php:                     $post_pad_width=$post_pad_width/100*$this->grid_width_chosen_arr['max'.$bp_arr[0]];//convert to px from %
global_post_master.class.php:                     $maxdisplay_maintain=$this->grid_width_chosen_arr['max'.$bp_arr[0]]*$wpercent/100+$post_pad_width+150;//ie the padding width diminishes the text width increases the width necessary to transition
global_post_master.class.php:                     /* .'.$this->dataCss.' a.image_caption:hover, .'.$this->dataCss.' a.image_caption:active {
global_post_master.class.php:                    $this->imagecss.='
global_post_master.class.php:                    $this->imagecss.='
global_post_master.class.php:                     .'.$this->dataCss.' p.imagewrap {  float:none; text-align:center; padding-left:0; padding-right:0;
global_post_master.class.php:                     .'.$this->dataCss.'_img { text-align:center; /*padding-left:0; padding-right:0;*/
global_post_master.class.php:                    $this->imagecss.='}
global_post_master.class.php:                    $this->imagecss.='
global_post_master.class.php:                    .'.$this->dataCss.'_img {width:'.$maxwidth_adjust_shadow_calc.'% 
global_post_master.class.php:               $this->imagecss.='
global_post_master.class.php:                    $this->imagecss.='
global_post_master.class.php:     .'.$this->dataCss.' a.image_caption:hover span {
global_post_master.class.php:     .'.$this->dataCss.' a.image_caption:active span {
global_post_master.class.php:     .'.$this->dataCss.' a.image_caption span {
global_post_master.class.php:                    $this->imagecss.='
global_post_master.class.php:     .'.$this->dataCss.' a.image_caption span {
global_post_master.class.php:                $this->imagecss.='
global_post_master.class.php:          .'.$this->dataCss.' a.image_caption span {
global_post_master.class.php:	if(!$this->edit||$this->is_clone){
global_post_master.class.php:               $imagealink='href="'.$image_internal_link.'?gallreturnurl='.Sys::Self.'@@@'.$this->dataCss.'"';
global_post_master.class.php:               $imagealink='href="#'.$this->dataCss.'" style="cursor:default;"';
global_post_master.class.php:          printer::printx('<p class="'.$imagerespond.' imagewrap '.$fstyle. '"'.$respond_data.'><a class="image_caption" '.$imagealink.'> <img '.$imagestyle.' class="'.$this->dataCss.'_img '.$this->blog_type.'_img" src="'.$fullpicdir. $picname.'"   alt="'.$alt.'" ><span>'.$image_caption_text.'</span></a></p>');
global_post_master.class.php:          ($this->blog_type!=='image')&&
global_post_master.class.php:          $this->blog_text_float_box($data);//!edit
global_post_master.class.php:	if (!$this->edit)return;
global_post_master.class.php:	$minwid= ($this->current_net_width >100)?$this->current_net_width:100;//
global_post_master.class.php:	if (!$this->is_clone){ 	
global_post_master.class.php:		printer::alertx('<p class="'.$imagerespond.' imagewrap '.$fstyle. '"'.$respond_data.'><a class="image_caption" href="add_page_pic.php?blog_image_noexpand='.$image_expand.'&amp;wwwexpand='.$maxplus.'&amp;expandfield=blog_tiny_data2&amp;www='.$fwidth.'&amp;ttt='.$this->blog_table.'&amp;fff=blog_data1&amp;id='.$this->blog_id.'&amp;id_ref=blog_id&amp;pgtbn='.$this->pagename.'&amp;postreturn='.Sys::Self.'&amp;css='.$this->roots.Cfg::Style_dir.$this->pagename.'&amp;quality='.$quality.'&amp;sess_override&amp;sess_token='.$this->sess->sess_token.'"><img '.$imagestyle.' class="'.$this->dataCss.'_img '.$this->blog_type.'_img"  src="'.$fullpicdir. $picname.'"   alt="'.$alt.'"  ><span>'.$image_caption_text.'</span></a></p>');
global_post_master.class.php:	if($this->blog_type!=='image'){//&&!$this->is_clone
global_post_master.class.php:		$this->blog_text_float_box($data);
global_post_master.class.php:     $this->show_more('Styling &amp; Image Configs');
global_post_master.class.php:     if (!$this->is_clone){
global_post_master.class.php:          $this->show_more('Alt Title');
global_post_master.class.php:		$this->show_close('Alt Title');
global_post_master.class.php:	if (!$this->is_clone||$this->clone_local_style){ 
global_post_master.class.php:		$this->show_more('Add Image Caption','','','',500,'','float:left',true);
global_post_master.class.php:		$this->print_wrap('Image Caption');
global_post_master.class.php:          $this->textarea($image_caption_text ,$data.'_'.$img_opt.'['.$image_caption_text_index.']','600','16');
global_post_master.class.php:           echo '<div class="fsminfo editbackground  editfont '.$this->column_lev_color.' floatleft editfont maxwidth500"><!--finetunebottom--> 
global_post_master.class.php:          $this->mod_spacing($data.'_'.$img_opt.'['.$imagecaption_bottom_index.']',$imagecaption_bottom,-100,100,1,'px','none',$msgjava);  
global_post_master.class.php:          $imagecaptiontitle='.'.$this->dataCss.' .image_caption span';
global_post_master.class.php:          $this->edit_styles_close($data,'blog_data5',$imagecaptiontitle,'','Style the <b>Background/Spacing/Text</b> of Captions in Images',false,'');  
global_post_master.class.php:		$this->close_print_wrap('Image Caption');
global_post_master.class.php:          $this->show_close('Add Image Caption');
global_post_master.class.php:		$this->show_more('Add image link','','','',500,'','float:left',true);
global_post_master.class.php:		$this->print_wrap('image link');
global_post_master.class.php:          $this->choose_nav($data,$image_internal_link_index);
global_post_master.class.php:		$this->close_print_wrap('image link');
global_post_master.class.php:          $this->show_close('Add image link');
global_post_master.class.php:		$current = $this->current_net_width*$wpercent/100;
global_post_master.class.php:		$this->show_more('Image Specific Configs','','','',500,'','float:left',true);
global_post_master.class.php:		$this->print_wrap('config image');
global_post_master.class.php:		$this->print_wrap('image noexpand');
global_post_master.class.php:		$maxplus=(!empty($img_opt_arr[$image_max_expand_index])&&$img_opt_arr[$image_max_expand_index]>50)?$img_opt_arr[$image_max_expand_index]:((!empty($this->page_options[$this->page_max_expand_image_index])&&$this->page_options[$this->page_max_expand_image_index]>50)?$this->page_options[$this->page_max_expand_image_index]:Cfg::Page_pic_expand_plus);
global_post_master.class.php:		printer::printx('<div title="Change this default maximum width or height value '.$maxplus.' for this image." id="'.$this->dataCss.'_expandsize_show" '.$genstyle.' class="fsminfo highlight floatleft"><!--imageplus-->Change Expanded Image height or width setting whichever is larger:');
global_post_master.class.php:		$this->mod_spacing($data.'_'.$img_opt.'['.$image_max_expand_index.']',$maxplus,25,1500,10,'px');
global_post_master.class.php:		printer::alertx('<p class="fs1'.$this->column_lev_color.'" ><input type="radio"  name="'.$data.'_'.$img_opt.'['.$image_height_set_index.']" '.$checked1.' value="setheight">Set Image Height to Post Height On<p>');
global_post_master.class.php:		printer::alertx('<p class="fs1'.$this->column_lev_color.'" ><input type="radio"  name="'.$data.'_'.$img_opt.'['.$image_height_set_index.']" '.$checked2.' value="0">Set Image Height Off<p>');
global_post_master.class.php:		echo '<div class="fsminfo editbackground  editfont editcolor '.$this->column_lev_color.' floatleft"><!--final width adjust-->';
global_post_master.class.php:          $this->mod_spacing($data.'_'.$img_opt.'['.$image_width_limit_index.']',$wpercent,0,100,1,'%','none',$msgjava); 
global_post_master.class.php:		$checked1=($this->blog_tiny_data1==='maintain_width')? 'checked="checked"':'';
global_post_master.class.php:		$checked2=($this->blog_tiny_data1==='maintain_width')?'':'checked="checked"';
global_post_master.class.php:		echo '<div class="fsminfo floatleft '.$this->column_lev_color.' editfont editbackground  editfont editcolor"><!--Edit image Limiter Mode-->';
global_post_master.class.php:		printer::alertx('<p class="fs1'.$this->column_lev_color.'" title="In Maintain Image Size Mode, Images with width limiting or Images with float text size will not scale down proportionally but maintain size up to the post max width!"><input type="radio"  name="'.$data.'_blog_tiny_data1" '.$checked1.' value="maintain_width">Maintain Image Size<span class="info"> more info</span><p>');
global_post_master.class.php:		$stylemin='';//($this->blog_tiny_data1==='maintain_width')?'style="display:none;':'';		 
global_post_master.class.php:		echo '<div class="fs1'.$this->column_lev_color.'" title="In image Scale mode Mode images will scale down proportionally  with spaces or text on smaller view screens"><!--scale images--><input type="radio" onclick="gen_Proc.showIt(\''.$data.'_showmin\');" name="'.$data.'_blog_tiny_data1" '.$checked2.' value="0">Scale Images<span class="info"> more info</span>';
global_post_master.class.php:		echo '<div id="'.$this->dataCss.'_showmin" '.$stylemin.'><!--show min width-->';
global_post_master.class.php:		$this->mod_spacing($data.'_'.$img_opt.'['.$image_min_index.']',$image_min,10,600,1,'px','none');
global_post_master.class.php:		$this->print_wrap('image resize');
global_post_master.class.php:		$this->mod_spacing($data.'_'.$img_opt.'['.$image_quality_index.']',$quality,10,100,1,'%');
global_post_master.class.php:		$this->submit_button();
global_post_master.class.php:		$this->show_close('Configure Image');
global_post_master.class.php:	$this->background_img_px=$fwidth+$pad_width;
global_post_master.class.php:	$global_field=($this->blog_global_style==='global')?',.'.$this->col_dataCss.' > .'.$this->blog_type.'_img , .'.$this->col_dataCss.' >fieldset>.'.$this->blog_type.'_img':'';
global_post_master.class.php:	$globalmsg=($this->blog_global_style==='global')?' Global Style':'';
global_post_master.class.php:	$this->edit_styles_close($data,'blog_data4','.'.$this->dataCss.'_img'.$global_field,'background,padding_top,padding_bottom,padding_left,padding_right,margin_top,margin_bottom,borders,box_shadow,outlines,radius_corner','Style Image Border,Radius, &amp; Image Spacing '.$globalmsg,false,'Style an Image Border and background effect here. Remember that Margin spacing is outside the image border whereas Padding spacing will put space between a border and the image.',true,'',true);  
global_post_master.class.php:	$type=($this->blog_type==='float_image_left'||$this->blog_type==='float_image_right')?'float_image':$this->blog_type;
global_post_master.class.php:	$global_field=($this->blog_global_style==='global')?',.'.$this->col_dataCss.' > .'.$type.',.'.$this->col_dataCss.' >fieldset>.'.$type:'';
global_post_master.class.php:	$globalmsg=($this->blog_global_style==='global')?' Global Style':'';
global_post_master.class.php:	$this->edit_styles_close($data,$style_ref,'.'.$this->dataCss.'.'.$type.$global_field, $style_list,'Style the Overall Post'.$globalmsg,'','',true); 
global_post_master.class.php:     $this->show_close('Image Styling &amp; Configs');
global_post_master.class.php:	$this->build_pic($data,$picdir);
global_post_master.class.php:	($this->edit)&&printer::pclear();
global_post_master.class.php:	if ($this->edit)printer::alert($this->styler2_instruct);
global_post_master.class.php:	if (!empty($this->blog_text&&!$this->edit)){
global_post_master.class.php:		echo process_data::clean_break($this->blog_text);
global_post_master.class.php:	else if (!$this->edit)return;
global_post_master.class.php:	else if ($this->is_clone&&!empty($this->blog_text)){ 
global_post_master.class.php:		echo process_data::clean_break($this->blog_text);
global_post_master.class.php:	elseif ($this->is_clone)return;  
global_post_master.class.php:	$cols=(!empty($this->current_net_width))?process_data::width_to_col($this->current_net_width,$this->current_font_px):$columns; 
global_post_master.class.php:	$display_editor=($this->blog_options[$this->blog_editor_use_index]==='use_editor')?'enableTiny ':'divTextArea';
global_post_master.class.php:	$rowlength=($cols<3)?3:process_data::row_length($this->blog_text,$cols);  
global_post_master.class.php:	$print=($this->blog_options[$this->blog_editor_use_index]==='use_editor')?'':
global_post_master.class.php:		'<div class="'.$this->column_lev_color.' floatleft cursor smallest editbackground  editfont editcolor editfont shadowoff rad3 button'.$this->column_lev_color.'" onclick="edit_Proc.enableTiny(this,\''.$data.'_blog_text\',\'divTextArea\');">Use Tiny</div>';
global_post_master.class.php:		echo process_data::clean_break($this->blog_text); 
global_post_master.class.php:	$blog_text=($this->blog_options[$this->blog_editor_use_index]==='use_editor')?process_data::textarea_validate($this->blog_text):process_data::textarea_validate(process_data::remove_html_break($this->blog_text));
global_post_master.class.php:	$this->master_gallery=($this->blog_tiny_data2==='master_gall')?true:false;
global_post_master.class.php:	$this->edit_styles_open();
global_post_master.class.php:	if ($this->edit){
global_post_master.class.php:		$q="select distinct gall_ref,gall_table from $this->master_gall_table where master_gall_status!='master_gall' order by gall_table asc"; 
global_post_master.class.php:		$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_post_master.class.php:		if ($this->mysqlinst->affected_rows()){ 
global_post_master.class.php:			$gcount=$this->mysqlinst->num_rows($r);
global_post_master.class.php:			While ($gRows=$this->mysqlinst->fetch_assoc($r)){
global_post_master.class.php:			 $count=$this->mysqlinst->count_field($this->master_gall_table,'pic_id','',false,$where);
global_post_master.class.php:                    $q="select distinct gall_ref from $this->master_gall_table where   master_gall_status!='master_gall' and gall_table='$this->pagename' order by gall_table";
global_post_master.class.php:				$rg=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_post_master.class.php:				if ($this->mysqlinst->affected_rows()){
global_post_master.class.php:					while  (list($gall_tbn)=$this->mysqlinst->fetch_row($rg,__LINE__)){
global_post_master.class.php:					While (in_array($this->pagename.'_'.$n,$tbn_arr)){
global_post_master.class.php:					$gall_ref=$this->pagename.'_'.$n; 
global_post_master.class.php:				else $gall_ref=$this->pagename.'_1';
global_post_master.class.php:				$ptable=(!$this->clone_local_data)?$this->master_post_table :$this->master_post_data_table;
global_post_master.class.php:				$pext=(!$this->clone_local_data)?'':'p';
global_post_master.class.php:				$q="update $ptable set blog_data1='$gall_ref'  where blog_id='$pext$this->blog_id' and blog_table_base='$this->pagename'"; 
global_post_master.class.php:				$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_post_master.class.php:				$this->show_more('Create Master Gallery Info','noback','fsm2info rad5 supertiny editbackground  editfont '.$this->column_lev_color,'','full');
global_post_master.class.php:                    $this->print_wrap('wrap master gall href');
global_post_master.class.php:				printer::alertx('<p class="'.$this->column_lev_color.' floatleft editbackground  editfont">When two or more  galleries are created on this site a "master gallery" may be created to display a Gallery of Galleries or in other words a listing of your galleies with each having a Title, an Image, and link to each individual Gallery Collection.</p>');
global_post_master.class.php:					$q="select page_title,page_ref, page_filename from $this->master_page_table where page_ref='$ch_gall_table' order by page_ref asc";   
global_post_master.class.php:					$rpag = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_post_master.class.php:					list($page_title,$page_ref,$page_filename)=$this->mysqlinst->fetch_row($rpag);
global_post_master.class.php:				$this->submit_button('Submit Create Master Gallery');
global_post_master.class.php:				$this->show_close('Master Gallery Info');
global_post_master.class.php:			$this->show_more('Master Gallery Info','noback','fs2info rad3 smallest editbackground  editfont '.$this->column_lev_color,'',500);
global_post_master.class.php:			if (!$this->master_gallery)
global_post_master.class.php:				printer::alertx('<p class="'.$this->column_lev_color.' floatleft editbackground  editfont">  When two or more  galleries are created on this site and A new gallery is created with no images uploaded an option to create a master gallery will be displayed here. A master gallery is a Gallery of Galleries having a Title, an Image, and link to each Gallery Collection.</p>');
global_post_master.class.php:			else printer::alertx('<p class="'.$this->column_lev_color.' floatleft editbackground  editfont">New Gallery Collections may be added to the Master Gallery see the option below</p>');
global_post_master.class.php:			$this->show_close('Master Gallery Info');
global_post_master.class.php:     if ($this->edit&&!$this->master_gallery&&(!$this->is_clone||$this->clone_local_data)){
global_post_master.class.php:               $this->show_more('Import/Start New Gallery','noback','fsminfo rad3 small editbackground  editfont '.$this->column_lev_color,'','full');
global_post_master.class.php:               printer::alertx('<p class="'.$this->column_lev_color.' floatleft editbackground  editfont">When two or more  galleries are created on this site a "master gallery" may be created to display a Gallery of Galleries or in other words a listing of your galleies with each having a Title, an Image, and link to each individual Gallery Collection.</p>');
global_post_master.class.php:               <select class="smaller editcolor editbackground  editfont" onchange="edit_Proc.imageSelectGallery(this,\'gall_image_select_'.$inc.'\',\'gallref_title_'.$inc.'\',\''.$gall_ref.'\');"  name="'.$this->clone_ext.'import_gallery['.$this->blog_id.']">');
global_post_master.class.php:               $this->show_close('Import/Start New Gallery');
global_post_master.class.php:	$this->blog_options($data,$this->blog_table);
global_post_master.class.php:	//$this->{$data.'_blog_data2_arrayed'}=$blog_data2=explode(',',$this->blog_data2);
global_post_master.class.php:	$blog_data2=explode(',',$this->blog_data2);//holds the various gall configs..
global_post_master.class.php:			$this->{$data.'_blog_data2_arrayed'}[$i]='';
global_post_master.class.php:	$quality=(!empty($blog_data2[$image_quality_index])&&$blog_data2[$image_quality_index]>9&&$blog_data2[$image_quality_index]<101)?$blog_data2[$image_quality_index]:((!empty($this->page_options[$this->page_image_quality_index])&&$this->page_options[$this->page_image_quality_index]<101&&$this->page_options[$this->page_image_quality_index]>9)?$this->page_options[$this->page_image_quality_index]:Cfg::Pic_quality);
global_post_master.class.php:	$smallpicplus=(is_numeric($blog_data2[$smallpic_index])&&$blog_data2[$smallpic_index]>=50&&$blog_data2[$smallpic_index]<1001)?$blog_data2[$smallpic_index]:(($this->master_gallery)?Cfg::Master_gall_pic_width:Cfg::Small_gall_pic_plus);
global_post_master.class.php:	$default_imagetitle=$this->blog_tiny_data4;
global_post_master.class.php:	$default_subtitle=$this->blog_tiny_data5;
global_post_master.class.php:	$default_description=$this->blog_data7;
global_post_master.class.php:	$shadowcalc=$this->calc_border_shadow($this->blog_tiny_data3); 
global_post_master.class.php:	$shadowcalc=$this->calc_border_shadow($this->blog_tiny_data1);
global_post_master.class.php:	$thumb_width_type=($blog_data2[$thumb_width_type_index]==='width_height'||$blog_data2[$thumb_width_type_index]==='width'||$blog_data2[$thumb_width_type_index]==='height')?$blog_data2[$thumb_width_type_index]:(($this->master_gallery)?'width':'height');  
global_post_master.class.php:               if ($this->master_gallery){
global_post_master.class.php:	$display_float='inlineblock_'.$this->blog_id.'';//for master gall mode display single
global_post_master.class.php:	if ($this->master_gallery){
global_post_master.class.php:	if ($this->master_gallery&&$display_float!=='marginauto') 
global_post_master.class.php:	if ($this->edit&&($this->clone_local_style||!$this->is_clone)){
global_post_master.class.php:		if (!$this->master_gallery){ 
global_post_master.class.php:			$this->show_more('Configure Your Gallery Display','','','',700,'','float:left;',true);#<!--Configure gallery-->
global_post_master.class.php:			echo '<div class="'.$this->column_lev_color.' fs1color floatleft editbackground  editfont left" ><!--config gall settings-->';
global_post_master.class.php:			//$this->print_wrap('preview under or none sub choices','fsmmaroon');
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$transition_time_index.']',$transition_time,.2,5,.2,'secs');
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$pause_index.']',$pause,3,30,.5,'secs');
global_post_master.class.php:			$this->show_more('More Slippry Options: Max Width/Height Expand Image, Slippry Modes &amp; Styling/Use of control Icons','','buttonmaroon whitebackground maroon');
global_post_master.class.php:			echo '<div class="'.$this->column_lev_color.' fsminfo editbackground  editfont floatleft left"> <!--imagecontrol bar-->
global_post_master.class.php:               $this->show_more('Style Slippry Top Gallery Control Bar','','fs2info rad5 editbackground  editfont editcolor left5 right5');
global_post_master.class.php:			printer::alertx('<p class="left editbackground  editfont editcolor">Choose Control Bar Color: #<input onclick=" window.jscolor(this);" style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text"  name="'.$data.'_blog_data2['.$slipbar_color_index.']." id="'.$this->blog_table.'_'.$this->blog_order.'controlbarcolor" value="'.$slipbar_color.'" size="6" maxlength="6" class="jscolor {refine:false}"><span style="font-size: 1.1em; color:#'.Cfg::Info_color.';" id="'.$this->blog_table.'_'.$this->blog_order.'controlbarcolorinstruct"></span></p>');
global_post_master.class.php:               $this->mod_spacing($data.'_blog_data2['.$slipbar_size_index.'][0]',$slipbar_size,.3,3,.1,'em','none');
global_post_master.class.php:              $this->rwd_scale($blog_data2[$slipbar_size_index],$data.'_blog_data2['.$slipbar_size_index.']',"#$this->dataCss .slipcontrol_$this->blog_id",'font-size','Gallery Control panel Icon Size','px',0,1,false,16,10); 
global_post_master.class.php:               $this->show_close('Style Gallery Control Bar Used by Slippry and Highslide');
global_post_master.class.php:               $this->show_more('Choose Return Menu Icon for Simulated New Page Mode','noback','fs2info rad5 editbackground  editfont editcolor left5 right5','',500);
global_post_master.class.php:                printer::alertx('<p class="left editbackground  editfont editcolor">Change the Menu Icon Color: #<input onclick=" window.jscolor(this);" style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text"  name="'.$data.'_blog_data2['.$gall_icon_color_index.']." id="'.$this->blog_table.'_'.$this->blog_order.'expandiconcolor" value="'.$gall_expand_menu_icon.'" size="6" maxlength="6" class="jscolor {refine:false}"><span style="font-size: 1.1em; color:#'.Cfg::Info_color.';" id="'.$this->blog_table.'_'.$this->blog_order.'expandiconcolorinstruct"></span></p>');
global_post_master.class.php:               $this->mod_spacing($data.'_blog_data2['.$return_icon_size_index.'][0]',$return_icon_size,.3,3,.1,'em','none');
global_post_master.class.php:              $this->rwd_scale($blog_data2[$return_icon_size_index],$data.'_blog_data2['.$return_icon_size_index.']',"#$this->dataCss .expand-menu-icon",'font-size','Expanded Image Menu Return Icon Size','px',0,1,false,16,10); 
global_post_master.class.php:			$this->show_close('Choose Color For Expanded Images Return Navigation Icon');
global_post_master.class.php:			echo '<div class="'.$this->column_lev_color.' fsminfo editbackground  editfont floatleft left"> <!--limitmax-->';
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$limitmax_index.']',$limitmax,90,100,1,'%','none');
global_post_master.class.php:			echo '<div class="'.$this->column_lev_color.' fsminfo editbackground  editfont floatleft left">Configure your Expanded Gallery image size.  Enter a maximum width or height (which ever is greater) for your image. For <b>simulated new pages</b> Image Width will be limited by this setting or the page width whereas for <b>maintain page context</b>options Image width will be limited by the current gallery  post width or this value which ever is less.   <!--wpplus-->';
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$largepic_index.']',$largepicplus,125,3000,5,'px');// 
global_post_master.class.php:			echo '<div class="'.$this->column_lev_color.' fsminfo editbackground  editfont floatleft left"> <!--imagecontrol bar-->
global_post_master.class.php:			echo '<div class="'.$this->column_lev_color.' fsminfo editbackground  editfont floatleft left"> <!--imagecontrol bar-->
global_post_master.class.php:			echo '<div class="'.$this->column_lev_color.' fsminfo editbackground  editfont floatleft left"> <!--imagecontrol bar-->
global_post_master.class.php:			$this->submit_button();
global_post_master.class.php:			$this->show_close('More Options Affecting Slippry');
global_post_master.class.php:			$this->show_more('Photoswipe Options','','buttonmaroon  whitebackground maroon');
global_post_master.class.php:			printer::alertx('<p class="left editbackground  editfont editcolor">Photoswipe Background on Controls &amp; Caption Background Color<input onclick=" window.jscolor(this);" style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text"  name="'.$data.'_blog_data2['.$photoswipe_control_background_index.']" value="'.$photoswipe_control_background.'"  size="6" maxlength="6" class="jscolor {refine:false}"></p>');
global_post_master.class.php:			echo '<div class="'.$this->column_lev_color.' fsminfo editbackground  editfont floatleft left"><!--opacity-->Optionally Choose an opacity index for your background color.<!--prev image size-->';
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$photoswipe_control_background_opacity_index.']',$photoswipe_control_background_opacity,5,100,1,'%','none');//
global_post_master.class.php:			$this->submit_button();
global_post_master.class.php:			$this->show_close('Photoswipe Option Info');
global_post_master.class.php:			$this->show_more('Highslide Options','','buttonmaroon  whitebackground maroon');
global_post_master.class.php:                        echo '<div class="'.$this->column_lev_color.' fsminfo lightestmaroonbackground maroon floatleft left"> <!--highslide control bar-->
global_post_master.class.php:			$this->show_close('Highslide Option Info');
global_post_master.class.php:			$this->show_more('Adjusting Separate Page Multiple Images Per Row','','buttonmaroon lightestmaroonbackground maroon','Style/Config an initial Preview Images Page if Selected'); 
global_post_master.class.php:			$this->print_wrap('Adjust Separate','maroon');
global_post_master.class.php:			echo '<div class="fsminfo editbackground  editfont '.$this->column_lev_color.' floatleft editfont maxwidth500"><!--preview image spacing-->
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$padleft_index.']',$padleft,0,60,1,'px');
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$preview_pad_bottom_index.']',$preview_pad_bottom,0,175,1,'px');
global_post_master.class.php:			echo '<div class="fsminfo editbackground  editfont '.$this->column_lev_color.' floatleft editfont maxwidth500"><!--final width adjust gal--> 
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$limit_width_index.']',$limit_width,300,1000,1,'px','none');
global_post_master.class.php:               $this->submit_button();
global_post_master.class.php:			$this->close_print_wrap('Adjust Separate','maroon');
global_post_master.class.php:			$this->show_close('Adjusting preview Page with Multiple Preview Image Rows');
global_post_master.class.php:			$this->show_more('Further Adjust Separate Page Preview Images','','buttonmaroon lightestmaroonbackground maroon','Style/Config an initial Preview Images Page if Selected',500);
global_post_master.class.php:			$msg=($this->master_gallery)?'By Default Your Master Gallery Representative Images are equal width but you can choose Equal height/width Depending which is greater': 'By Default Gallery Preview Page Images (if used) are set to a maximum height/width depending which is greater but theres a choice for equal width instead';
global_post_master.class.php:			echo '<div class="'.$this->column_lev_color.' fsminfo editbackground  editfont floatleft left"><!--wpplus-->';
global_post_master.class.php:			echo '<div class="'.$this->column_lev_color.' fsminfo editbackground  editfont floatleft left">Configure your preview image size for separate preview image displays <b>For the preview under slide images go to the slippry option for that</b>.  Enter the max value for  width  or  height for your image (Scaled down Images will be used for Smaller devices)<!--prev image size-->';
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$smallpic_index.']',$smallpicplus,50,1000,5,'px');// 
global_post_master.class.php:			echo '<div class="'.$this->column_lev_color.' fsminfo editbackground  editfont floatleft left"><!--wpplus-->';
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$preview_minimum_index.']',$preview_minimum,10,90,1,'%','none');// 
global_post_master.class.php:               $this->submit_button();
global_post_master.class.php:			$this->show_close('Adjust Separate Preview Image Display');
global_post_master.class.php:			$this->show_more('Slippry Preview Under Slide Selection','noback','buttonmaroon lightestmaroonbackground maroon','Style/Config the Preview Images under a Gallery if Selected',500);
global_post_master.class.php:			echo '<div class="fsminfo editbackground  editfont '.$this->column_lev_color.' floatleft editfont maxwidth500"><!--preview image spacing-->
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$preview_padtop_index.']',$preview_padtop,0,135,1,'px');
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$thumbnail_height_index.']',$thumbnail_height,10,200,2,'px'); 
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$thumbnail_pad_right_index.']',$thumbnail_pad_right,0,35,1,'px'); 
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$thumbnail_pad_bottom_index.']',$thumbnail_pad_bottom,0,35,1,'px'); 
global_post_master.class.php:               $this->submit_button();
global_post_master.class.php:			$this->show_close('Slippry Preview Under Slide Selection'); 
global_post_master.class.php:				$this->show_more('Adjust Expanded Image Quality','noback','buttonmaroon lightestmaroonbackground maroon','Expanded image quality may be adjusted for better quality versus smaller image size',450);
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$image_quality_index.']',$quality,10,100,1,'%');
global_post_master.class.php:			$this->show_close('Adjust Expanded Image Quality');
global_post_master.class.php:			$this->submit_button();
global_post_master.class.php:			 $this->submit_button(); 
global_post_master.class.php:			$this->show_close('Configure Your Gallery Display');#<!--Configure gallery-->
global_post_master.class.php:			$this->show_more('Configure Your Master Gallery Display','','','',700,'','float:left;',true);#<!--Configure gallery--> 
global_post_master.class.php:			$this->show_more('Adjust Position of Left Align Captions','','smallest fsmmaroon maroon whitebackground');
global_post_master.class.php:				$this->show_close('Adjust Position of Left Align Captions');
global_post_master.class.php:			$this->show_more('Adjust Master Preview Gallery Image','noback','fs2info rad5 editbackground  editfont highlight left5 right5','Style/Config Image Preview Links in Master Gallery',500,'','float:left;',true);
global_post_master.class.php:			echo '<div class="'.$this->column_lev_color.' fsminfo editbackground  editfont floatleft left"><!--prev image size-->';
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$smallpic_index.']',$smallpicplus,50,1000,5,'px');// 
global_post_master.class.php:			$msg=($this->master_gallery)?'By Default Your Master Gallery Representative Images are equal width but you can choose Equal height/width Depending which is greater': 'By Default you Regular Gallery Preview Page Images (if used) are set to a maximum  height/width depending which is greater but there are choices for equal width or height instead.';
global_post_master.class.php:			 $this->show_more('Adjusting Gallery Image Rows in Master Gallery','noback');
global_post_master.class.php:			echo '<div class="fsminfo editbackground  editfont '.$this->column_lev_color.' floatleft editfont maxwidth500"><!--preview image spacing-->
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$padleft_index.']',$padleft,0,60,1,'px');
global_post_master.class.php:			$this->mod_spacing($data.'_blog_data2['.$preview_pad_bottom_index.']',$preview_pad_bottom,0,175,1,'px');
global_post_master.class.php:			echo '<div class="fsminfo editbackground  editfont '.$this->column_lev_color.' floatleft editfont maxwidth500"><!--final width adjust gal-->
global_post_master.class.php:			 $this->mod_spacing($data.'_blog_data2['.$limit_width_index.']',$limit_width,300,1000,1,'px','none');
global_post_master.class.php:				echo '<div class="fsminfo editbackground  editfont '.$this->column_lev_color.' floatleft editfont maxwidth500"><!--final width adjust captions--> 
global_post_master.class.php:			 $this->mod_spacing($data.'_blog_data2['.$caption_width_index.']',$caption_width,100,701,5,'px','none');
global_post_master.class.php:			 $this->submit_button(); 
global_post_master.class.php:			$this->show_close('Adjusting Master Gall with Multiple Preview Image Rows');
global_post_master.class.php:			 $this->submit_button(); 
global_post_master.class.php:			$this->show_close('Adjust Separate Preview Image Display');
global_post_master.class.php:			 $this->submit_button(); 
global_post_master.class.php:			$this->show_close('Configure gallery');#<!--Configure gallery-->
global_post_master.class.php:	if ($this->edit&&!$this->master_gallery&&(!empty($this->clone_local_data)||!$this->is_clone)){
global_post_master.class.php:          $this->show_more('Default Caption Option','noback','','',600,'','float:left;',true);
global_post_master.class.php:		echo '<div class="'.$this->column_lev_color.' fsminfo editbackground  editfont floatleft left">Image specific captions are made under the "Edit Individual Image Captions or Delete an Image Here" Link Below.  However, Here  optionally Add Default Title, Subtitle and/or descriptions which will be applied to images that don&#34;t have them<!--global captions-->';
global_post_master.class.php:		echo '<div class="fsminfo width100 editbackground  editfont floatleft left '.$this->column_lev_color.'"> Add Default Title:';
global_post_master.class.php:		$this->textarea($default_imagetitle,$data.'_blog_tiny_data4','600',16,'','left',100);
global_post_master.class.php:		echo '<div class="fsminfo width100 editbackground  editfont floatleft left '.$this->column_lev_color.'"> Add Default Subtitle:';
global_post_master.class.php:		$this->textarea($default_subtitle,$this->data.'_blog_tiny_data5','600','16','','left',100);
global_post_master.class.php:		echo '<div class="fsminfo width100 editbackground  editfont floatleft left '.$this->column_lev_color.'"> Add Default description:';
global_post_master.class.php:		$this->textarea($default_description,$this->data.'_blog_data7','600','16','','left',100);
global_post_master.class.php:		$this->show_close('Default Caption Option');
global_post_master.class.php:	$previewFlexContainer=($gall_flex&&!$this->edit)?' previewFlexContainer':''; 
global_post_master.class.php:	$masonry=(!$gall_flex&&$preview_display==='multiple'&&$gall_masonry&&!$this->edit)?true:false;
global_post_master.class.php:		$this->load_masonry();
global_post_master.class.php:		$masonryClass='gridgall_'.$this->blog_id;
global_post_master.class.php:		if (!$this->edit){
global_post_master.class.php:     var resizeTimer1_$this->blog_id='';
global_post_master.class.php:               \$gridgall_$this->blog_id=\$('$mclass').masonry(mopts); 
global_post_master.class.php:               \$gridgall_$this->blog_id=\$('$mclass').masonry(mopts); //initiating twice
global_post_master.class.php:                    if (\$gridgall_$this->blog_id.masonry()!=='undefined')\$gridgall_$this->blog_id.masonry('destroy'); 
global_post_master.class.php:                     clearTimeout(resizeTimer1_$this->blog_id); 
global_post_master.class.php:                     resizeTimer1_$this->blog_id=setTimeout( function(){ 
global_post_master.class.php:                     \$gridgall_$this->blog_id=\$('$mclass').masonry(mopts); 
global_post_master.class.php:                     \$gridgall_$this->blog_id=\$('$mclass').masonry(mopts);//initiating twice 
global_post_master.class.php:			$this->css.='
global_post_master.class.php:     .'.$this->dataCss.' grid-item{margin-bottom:'.$preview_pad_bottom.'px;}
global_post_master.class.php:		$this->render_highslide();
global_post_master.class.php:		$allowSizeReduction=($this->edit)?'hs.allowSizeReduction: false':'hs.allowSizeReduction:true';
global_post_master.class.php:	slideshowGroup: "$this->blog_data1",
global_post_master.class.php:	$this->css.=' 
global_post_master.class.php:     .dimming_gall_img_'.$this->blog_id.'{background:#'.$simulate_background.'; }
global_post_master.class.php:		if (!$this->edit){
global_post_master.class.php:			$this->load_photoswipe();
global_post_master.class.php:		initPhotoSwipeFromDOM('.photoswipe_$this->blog_id'); 
global_post_master.class.php:               $this->css.='
global_post_master.class.php:                     #gallery_'.$this->blog_id.'{background:#'.$simulate_background.';}
global_post_master.class.php:                    .'.$this->dataCss.' figure{display:none;}
global_post_master.class.php:		$this->load_slippry();
global_post_master.class.php:		$fixheight=($this->blog_height_arr[$this->blog_height_index]>=10)?$this->blog_height_arr[$this->blog_height_index]:'noheight';
global_post_master.class.php:		//$this->blog_height_arr[$this->blog_height_mode_index]==='maintain'&&	
global_post_master.class.php:		$adaptiveHeight=true;//($this->blog_height_arr[$this->blog_height_mode_index]==='maintain'&&$this->blog_height_arr[$this->blog_height_index]>=10)?true:false;//if post has a fixed width set fix this gallery to height
global_post_master.class.php:function slippry_$this->blog_id(pic,ele){   
global_post_master.class.php:	$(this).html(gen_Proc.slippry_$this->blog_id).fadeIn(300);});
global_post_master.class.php:	slippry_$this->blog_id = \$("#slippry_$this->blog_id").slippry({
global_post_master.class.php:	extId: $this->blog_id,
global_post_master.class.php:     mainEle: '$this->dataCss',
global_post_master.class.php:	$('.$this->dataCss .pause').click(function () {
global_post_master.class.php:			slippry_$this->blog_id.stopAuto();
global_post_master.class.php:	    $('.$this->dataCss .play').click(function () {
global_post_master.class.php:		    slippry_$this->blog_id.goToNextSlide();
global_post_master.class.php:		    slippry_$this->blog_id.startAuto();
global_post_master.class.php:	    $('.$this->dataCss .previous').click(function () { 
global_post_master.class.php:		    slippry_$this->blog_id.goToPrevSlide();
global_post_master.class.php:	    $('.$this->dataCss .next').click(function () {
global_post_master.class.php:		    slippry_$this->blog_id.goToNextSlide();
global_post_master.class.php:	    $('.$this->dataCss .close').click(function () { 
global_post_master.class.php:		    //slippry_$this->blog_id.destroySlider();
global_post_master.class.php:	    $('.$this->dataCss .reload').click(function () {
global_post_master.class.php:		    slippry_$this->blog_id.reloadSlider();
global_post_master.class.php:	    $('.$this->dataCss .init').click(function () {
global_post_master.class.php:		    slippry_$this->blog_id = slippry_$this->blog_id.slippry({auto: true});
global_post_master.class.php:	var slip_$this->blog_id={};
global_post_master.class.php:	slip_$this->blog_id.resizeTimer='';
global_post_master.class.php:	slip_$this->blog_id.windowWidth = \$(window).width();
global_post_master.class.php:	slip_$this->blog_id.transition = '$transition';
global_post_master.class.php:	slip_$this->blog_id.fixheight= '$fixheight';
global_post_master.class.php:	if (slip_$this->blog_id.fixheight !== 'noheight' ){ 
global_post_master.class.php:			if (\$(window).width() !== slip_$this->blog_id.windowWidth) {
global_post_master.class.php:				slip_$this->blog_id.windowWidth = \$(window).width(); 
global_post_master.class.php:				clearTimeout(slip_$this->blog_id.resizeTimer); 
global_post_master.class.php:				slip_$this->blog_id.resizeTimer=setTimeout( function(){
global_post_master.class.php:					var slide=\$('.$this->dataCss .sy-active'); 
global_post_master.class.php:					var factorWidth=  slip_$this->blog_id.transition ==='kenburns' ? 1.4 : 1
global_post_master.class.php:					var pwidth = $('.$this->dataCss').width(); 
global_post_master.class.php:					var pheight = $('.$this->dataCss').height(); 
global_post_master.class.php:	$holderid=($new_page_effect)?'':' id="holder_'.$this->blog_id.'" ';
global_post_master.class.php:		if (!$this->edit){ 
global_post_master.class.php:			printer::printx('<p class="fsminfo editbackground  editfont  '.$this->column_lev_color.'">New Gallery Coming Soon</p>');
global_post_master.class.php:     if ($this->edit&&$inc<2&&$gall_display==='slippry'){
global_post_master.class.php:          $this->css.='
global_post_master.class.php:          $this->css.='
global_post_master.class.php:     if ($this->edit&&($gall_display==='slippry')){
global_post_master.class.php:          $this->css.='
global_post_master.class.php:.slipcontrol_'.$this->blog_id.'{font-size:'.$font_size.'px;}
global_post_master.class.php:.slipcontrol_'.$this->blog_id.' li a.pause{  
global_post_master.class.php:.slipcontrol_'.$this->blog_id.' li a.next { 
global_post_master.class.php:.slipcontrol_'.$this->blog_id.' li a.previous{  
global_post_master.class.php:.slipcontrol_'.$this->blog_id.' li a.close:before,.slipcontrol li a.close:after {  
global_post_master.class.php:.slipcontrol_'.$this->blog_id.' li a.play{
global_post_master.class.php:               \$('#$this->dataCss .hover_caption .caption_wrap').css({'bottom':'0'});
global_post_master.class.php:     if ($this->edit){
global_post_master.class.php:               $this->css.='
global_post_master.class.php:               $this->css.='
global_post_master.class.php:     .'.$this->dataCss.' .hover_caption a:hover .caption_wrap {
global_post_master.class.php:     .'.$this->dataCss.' .hover_caption .caption_wrap {
global_post_master.class.php:               $this->css.='
global_post_master.class.php:          .'.$this->dataCss.' .hover_caption .caption_wrap {
global_post_master.class.php:     if ($this->master_gallery&&$gall_display==='display_single_row'&&$blog_data2[$galltype_index]!=='center'){  
global_post_master.class.php:          ($this->edit)&&$this->css.='
global_post_master.class.php:               .inlineblock_'.$this->blog_id.'{display:inline-block;}
global_post_master.class.php:                .mainPicInfo_'.$this->blog_id.'{width:'.$caption_width.'px}
global_post_master.class.php:          .inlineblock_'.$this->blog_id.'{display:inline-block ; margin-left:0; margin-right:0;}
global_post_master.class.php:          .mainPicInfo_'.$this->blog_id.'{width:'.$caption_width.'px} 
global_post_master.class.php:          .inlineblock_'.$this->blog_id.'{display:block; margin-left:0; margin-right:0;}
global_post_master.class.php:          .mainPicInfo_'.$this->blog_id.'{width:auto;}
global_post_master.class.php:          $maxstyle=(!empty($limit_width)&&$limit_width>299&&$limit_width<$this->current_net_width)?'style="max-width:'.$limit_width.'px;"':'style="max-width:100%"';
global_post_master.class.php:          ($this->edit)&&$this->css.='
global_post_master.class.php:               .inlineblock_'.$this->blog_id.'{display:inline-block;}';
global_post_master.class.php:	list($border_add_width,$border_add_height)=$this->border_calc($this->blog_tiny_data3);
global_post_master.class.php:	list($border_add_width2,$border_add_height)=$this->border_calc($this->blog_style);
global_post_master.class.php:	$gallery->page_width=$this->page_width;
global_post_master.class.php:	$gallery->page_cache_arr=$this->page_cache_arr;
global_post_master.class.php:	$gallery->dataCss=$this->dataCss;
global_post_master.class.php:	$gallery->current_net_width=$this->current_net_width;  
global_post_master.class.php:	$gallery->master_gallery=$this->master_gallery;//whether for master gallery collection or normal gallery
global_post_master.class.php:	$gallery->css=$this->roots.Cfg::Style_dir.$this->pagename;
global_post_master.class.php:	$gallery->column_lev_color=$this->column_lev_color;
global_post_master.class.php:	$gallery->edit=$this->edit;
global_post_master.class.php:	$gallery->master_gall_table=$this->master_gall_table; 
global_post_master.class.php:	$gallery->gall_table=$gallery->pagename=$this->pagename;
global_post_master.class.php:	$gallery->blog_id=$this->blog_id; 
global_post_master.class.php:	$gallery->is_clone=$this->is_clone;
global_post_master.class.php:	$gallery->clone_local_style=$this->clone_local_style;
global_post_master.class.php:	$gallery->clone_local_data=$this->clone_local_data;
global_post_master.class.php:	$gallery->large_images_arr=$this->large_images_arr; 
global_post_master.class.php:	$gallery->blog_data2=$this->blog_data2;
global_post_master.class.php:	$gallery->blog_order=$this->blog_order;
global_post_master.class.php:	$gallery->blog_table=$this->blog_table;
global_post_master.class.php:	$gallery->enable_edit= (!$this->is_clone||$this->clone_local_data)?true:false;
global_post_master.class.php:	$gallery->clone= ($this->is_clone&&!$this->clone_local_data)?'clone_'.$this->pagename:'';//pagename will give specific page reference of clone otherwise the parent page is used and clone will automatically follow parent page updates without itslef updating!
global_post_master.class.php:	$gallery->ext=$this->ext;
global_post_master.class.php:	echo '<div class="inlineblock_'.$this->blog_id.' '.$masonryClass.$previewFlexContainer.'" '.$maxstyle.'><!--limiter  on width available for preview images-->';
global_post_master.class.php:	$this->large_images_arr=$gallery->large_images_arr;//collecting image informations
global_post_master.class.php:	$this->preload=(!empty($this->preload))?$this->preload.','.$gallery->preload:$gallery->preload;//collect one or more gallery preloads
global_post_master.class.php:	$this->instruct=array_merge($this->instruct,$gallery->instruct);
global_post_master.class.php:	if (!$this->edit){ 
global_post_master.class.php:	$msg=($this->master_gallery)?'Edit general Master Gallery Styles':'Edit General Gallery Styles';
global_post_master.class.php:	 $this->edit_styles_close($data,'blog_style','.'.$this->dataCss,'background,padding_top,padding_bottom,padding_left,padding_right,margin_top,margin_bottom,margin_left,margin_right,font_family,font_size,font_weight,text_align,font_color,text_shadow,line_height,letter_spacing,italics_font,small_caps,text_underline,borders,box_shadow,outlines,radius_corner',$msg,true,'Background Styles will not affect the Expanded image Background in Simulated New Pages.  Use the specific option for this. Set General Caption Styles Here. Individual Caption Styles for Title Subtitle and Description May be set below',true);
global_post_master.class.php:	if (!$this->master_gallery){
global_post_master.class.php:		$this->edit_styles_close($data,'blog_tiny_data3','.preview_border_'.$this->blog_id,'borders,box_shadow,outlines,radius_corner','Style Borders for Preview Images',false,'',true); 
global_post_master.class.php:	if ($this->clone_local_style||!$this->is_clone){
global_post_master.class.php:           $image_border='.pswp_'.$this->blog_id.' img,.sy-slides-crop_'.$this->blog_id.',.gall_img_'.$this->blog_id.' img'; 
global_post_master.class.php:               $msg=($this->master_gallery)?'Image Border Style for Master Gallery':'Style the <b>Image Border &amp; Radius</b> of Expanded Images for this Gallery';
global_post_master.class.php:               $this->edit_styles_close($data,'blog_tiny_data1',$image_border,'borders,box_shadow,outlines,radius_corner',$msg,false,'',true); 
global_post_master.class.php:          $msg=($this->master_gallery)?'':'Expanded';
global_post_master.class.php:		$imagetitle='.imagetitle_'.$this->blog_id;
global_post_master.class.php:		$this->edit_styles_close($data,'blog_data3',$imagetitle,'padding_top,font_family,font_size,font_weight,text_align,font_color,text_shadow,text_underline,italics_font,small_caps,line_height,letter_spacing','Style the <b>TITLE</b> of '.$msg.' Image Captions for this Gallery',false,''); 
global_post_master.class.php:		$subtitle='.subtitle_'.$this->blog_id;
global_post_master.class.php:		$this->edit_styles_close($data,'blog_data4',$subtitle,'padding_top,font_family,font_size,font_weight,text_align,font_color,text_shadow,italics_font,small_caps,line_height,letter_spacing,text_underline','Style the <b>SUBTITLE</b> of '.$msg.' Image Captions for this Gallery',false,'',false);
global_post_master.class.php:          if ($this->master_gallery&&$imagecaptiontitle){
global_post_master.class.php:               $this->show_more('Additional Styles for Master Galleries with title in image' ,'','','','500','','float:left;',true);
global_post_master.class.php:               $imagecaptiontitle='.'.$this->dataCss.' .hover_caption .caption_wrap';
global_post_master.class.php:               $this->edit_styles_close($data,'blog_data8',$imagecaptiontitle,'background,padding_top,padding_bottom,padding_left,padding_right,borders,box_shadow,outlines,radius_corner','Style the <b>Background &amp; Spacing</b> of Captions in Image Type Captions',false,''); 
global_post_master.class.php:               $this->show_close('Special Styles for Master Galleries with title in image'); 
global_post_master.class.php:		$msg=($this->master_gallery)?'Additional Styles for All Other Master Gallery':'Styles for Expanded Images and Captions';
global_post_master.class.php:		$this->show_more($msg,'','','','500','','float:left;',true);
global_post_master.class.php:		}//$this->clone_local_style||!$this->is_clone
global_post_master.class.php:     $image_border='.pswp_'.$this->blog_id.' img,.sy-slides-crop_'.$this->blog_id.',.gall_img_'.$this->blog_id.' img'; 
global_post_master.class.php:     $msg=($this->master_gallery)?'Image Border Style for Master Gallery':'Style the <b>Image Border &amp; Radius</b> of Expanded Images for this Gallery';
global_post_master.class.php:     $this->edit_styles_close($data,'blog_tiny_data1',$image_border,'borders,box_shadow,outlines,radius_corner',$msg,false,'',true); 
global_post_master.class.php:     $msg=($this->master_gallery)?'':'Expanded';
global_post_master.class.php:     $description='.description_'.$this->blog_id; 
global_post_master.class.php:     $this->edit_styles_close($data,'blog_data5',$description,'padding_top,font_family,font_size,font_weight,text_align,font_color,text_shadow,italics_font,small_caps,line_height,letter_spacing,text_underline','Style the <b>DESCRIPTION</b> of '.$msg.' Image Captions for this Gallery',false,'',false);
global_post_master.class.php:     if (!$this->master_gallery){
global_post_master.class.php:          $this->show_more('<b>Simulate Page Background</b> Color for Expand Images');
global_post_master.class.php:          printer::alertx('<p class="left editbackground  editfont editcolor">Change the Background Color of Simulated Page when viewing Expanded Images <input onclick=" window.jscolor(this);" style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text"  name="'.$data.'_blog_data2['.$simulate_background_index.']" value="'.$simulate_background.'"  size="6" maxlength="6" class="jscolor {refine:false}"></p>'); 
global_post_master.class.php:          $this->show_close('<b>Simulate Page Background</b>Color for Expand Images');//<!--Show More Change Colors-->';  
global_post_master.class.php:     $mainPicInfo='.mainPicInfo_'.$this->blog_id.',.highslide-caption_'.$this->blog_id; 
global_post_master.class.php:      $this->edit_styles_close($data,'blog_data6',$mainPicInfo,'background,padding_top,padding_bottom,padding_left,padding_right,margin_top,margin_bottom,borders,box_shadow,outlines,radius_corner','Style the <b>BACKGROUND AREA</b> of the '.$msg.' Image Captions for this Gallery',false,'',false); 
global_post_master.class.php:     if ($this->clone_local_style||!$this->is_clone){ 
global_post_master.class.php:		$this->show_close('features of expand gall images');
global_post_master.class.php: 	if ($this->edit){
global_post_master.class.php:		$this->css.='
global_post_master.class.php:.'.$this->dataCss.' .sy-controls li a:after{background-color:#'.$controlcolor.';}
global_post_master.class.php:.'.$this->dataCss.' .expand-menu-icon{'.$position_menu_icon.'}
global_post_master.class.php:.'.$this->dataCss.'	.expand-menu-icon .xbar1,.'.$this->dataCss.' .expand-menu-icon .xbar2,.'.$this->dataCss.' .expand-menu-icon .xbar3 {
global_post_master.class.php:#holder_'.$this->blog_id.'{ text-align:center;padding-bottom:50px;}
global_post_master.class.php:.'.$this->dataCss.' .gall_preview_'.$this->blog_id.'{margin-left: auto; margin-right:auto;margin-top:'.$preview_padtop.'px;}
global_post_master.class.php:.gall_img_'.$this->blog_id.' .highslide-controls,.gall_slipimg_'.$this->blog_id.' .highslide-controls{ background:url(graphics/'.$controlbar.') 0 -90px no-repeat;margin:20px 15px 10px 0;}
global_post_master.class.php:	.gall_img_'.$this->blog_id.' .highslide-controls a,.gall_slipimg_'.$this->blog_id.' .highslide-controls a{background-image:url(graphics/'.$controlbar.');display:block;float:left;height:30px;width:30px;outline:none;}
global_post_master.class.php:	.'.$this->dataCss.' .thumbnail_'.$this->blog_id.'{float: left; margin-bottom:'.$thumbnail_pad_bottom.'px; margin-right:'.$thumbnail_pad_right.'px;}
global_post_master.class.php:     ($this->edit&&$this->overlapbutton)&&$this->overlapbutton();
global_post_master.class.php:			$table=$this->pagename;
global_post_master.class.php:			$dbtable=$this->master_page_table;
global_post_master.class.php:			$field_id_val=$this->page_id;
global_post_master.class.php:			$sort_id='page'.$this->page_id;
global_post_master.class.php:			$image_pos_data_arr=(strlen($this->page_tiny_data3)>10)?unserialize($this->page_tiny_data3):array();
global_post_master.class.php:			$background_slide=($this->blog_tiny_data1==='background_slide')?true:false;
global_post_master.class.php:			$table=$this->blog_table;
global_post_master.class.php:			$field_id_val=$this->blog_id;
global_post_master.class.php:			$dbtable=$this->master_post_table;
global_post_master.class.php:			$sort_id=$this->blog_id; 
global_post_master.class.php:			$table=$this->col_table;
global_post_master.class.php:			$dbtable=$this->master_col_table; 
global_post_master.class.php:			$field_id_val=$this->col_id; 
global_post_master.class.php:	$option_field_arr=explode(',',$this->$option_field);
global_post_master.class.php:	if ($this->edit&&isset($_POST['submitted'])){
global_post_master.class.php:			$pic_arr=explode(',',$this->$pic_field); 
global_post_master.class.php:                    $this->message[]=printer::alert_neg('Removed '.$del_img. ' from slide show',.9,1);
global_post_master.class.php:			$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_post_master.class.php:	$this->edit_styles_open();
global_post_master.class.php:	($this->edit&&$this->is_blog)&&    
global_post_master.class.php:	$this->blog_options($data,$this->blog_table); 
global_post_master.class.php:	if (empty($this->$pic_field)){  
global_post_master.class.php:		if (!$this->edit)return;
global_post_master.class.php:		#$maxwid=$this->column_net_width[$this->column_level];
global_post_master.class.php:	$piccount=count(explode(',',$this->$pic_field));
global_post_master.class.php:	$quality=(!empty($option_field_arr[$image_quality_index])&&$option_field_arr[$image_quality_index]>9&&$option_field_arr[$image_quality_index]<101)?$option_field_arr[$image_quality_index]:((!empty($this->page_options[$this->page_image_quality_index])&&$this->page_options[$this->page_image_quality_index]<101&&$this->page_options[$this->page_image_quality_index]>9)?$this->page_options[$this->page_image_quality_index]:Cfg::Pic_quality); 
global_post_master.class.php:	$wpercent=100;//not used at moment($this->blog_data3>4&&$this->blog_data3<=100)?$this->blog_data3:100;
global_post_master.class.php:	if (!empty($this->$pic_field)){
global_post_master.class.php:		$arr=explode(',',$this->$pic_field);
global_post_master.class.php:		$pic_arr=explode(',',$this->$pic_field); 
global_post_master.class.php:				$this->message[]='file not found in auto slide '.Cfg_loc::Root_dir.Cfg::Upload_dir.$image ;
global_post_master.class.php:			list($width,$height)=$this->get_size($image,Cfg_loc::Root_dir.Cfg::Upload_dir);
global_post_master.class.php:		}//end !empty($this->$pic_field)
global_post_master.class.php:	if (!empty($this->$pic_field)){// rechecking after unsetting... currently unsetting removed...
global_post_master.class.php:          $this->image_resize_msg='Auto Slideshow';  
global_post_master.class.php:		if ($this->edit&&$type!=='page'){
global_post_master.class.php:               list($border_width,$border_height)=$this->border_calc($this->$border_field);//img
global_post_master.class.php:               list($post_pad_width,$post_mar_width)=$this->pad_mar_calc($this->$style_field,$this->column_total_width[$this->column_level]); //around post
global_post_master.class.php:               $shadowcalc=$this->calc_border_shadow($this->$border_field); 
global_post_master.class.php:               list($pad_width,$mar_width)=$this->pad_mar_calc($this->$border_field,$this->column_total_width[$this->column_level]);  
global_post_master.class.php:               ($this->edit)&&print('<p id="return_'.$this->blog_id.'">&nbsp;</p>');
global_post_master.class.php:               $bp_arr=$this->page_break_arr;
global_post_master.class.php:               if ($type==='col'&&$this->column_primary)$max_pic_size=800;
global_post_master.class.php:                    $column_level= ($type!=='col')?$this->column_level:$this->col_level-1; 
global_post_master.class.php:                    if ($this->column_use_grid_array[$column_level]==='use_grid'){ 
global_post_master.class.php:                         $max_pic_size=$this->grid_width_chosen_arr['max'.$bp_arr[0]]*$wpercent/100;//likely starter
global_post_master.class.php:                         foreach($this->page_break_arr as $bp){
global_post_master.class.php:                              $max_pic_size=max($max_pic_size,$this->grid_width_chosen_arr[$bp]*$wpercent/100);//relative percent and size can be bigger with smaller break pt calculation
global_post_master.class.php:					$max_pic_size=$this->current_net_width*$wpercent/100; 
global_post_master.class.php:               $gtype=($this->column_use_grid_array[$this->column_level]==='use_grid')?'rwd':'no_rwd';
global_post_master.class.php:               $grid_post_percent_arr=($this->column_use_grid_array[$this->column_level]==='use_grid')?$this->grid_width_chosen_arr:'';//array becomes size of pic plugging in viewport
global_post_master.class.php:               file_put_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'auto_slide_'.$this->passclass_ext.$data,$best_guess.'@@'. $gtype.'@@'.serialize($grid_post_percent_arr).'@@'.$maxwidth);
global_post_master.class.php:			if (!empty($this->viewport_current_width)&&$this->viewport_current_width>200){
global_post_master.class.php:				$image_width=$this->viewport_current_width;
global_post_master.class.php:			$pic_info_arr=explode('@@',file_get_contents(Cfg_loc::Root_dir.Cfg::Data_dir.Cfg::Page_info_dir.'auto_slide_'.$this->passclass_ext.$data));
global_post_master.class.php:			if (!empty($this->viewport_current_width)&&$this->viewport_current_width>200){
global_post_master.class.php:					list($key,$width_value)=check_data::key_up($grid_width_chosen_arr,$this->viewport_current_width,'keyval');  
global_post_master.class.php:					$image_width=min($width_value,$this->viewport_current_width);    //not used *$wpercent/100; 
global_post_master.class.php:					$total_width_available=$this->current_net_width; 
global_post_master.class.php:					$total_width_available=min($total_width_available,$this->viewport_current_width);
global_post_master.class.php:		$image_size=check_data::key_up($this->page_cache_arr,$image_width,'val',$this->page_width);//image size used from image directory 
global_post_master.class.php:		$this->image_resize_msg=''; 
global_post_master.class.php:		if ($this->edit){//generate images for all sizes
global_post_master.class.php:			$maxfullwidth=($type==='page')?max($this->page_cache_arr):$this->current_net_width;
global_post_master.class.php:			$limiter=($type==='page')?max($this->page_cache_arr):$this->page_width;
global_post_master.class.php:			$maxfullwidth=check_data::key_up($this->page_cache_arr,$maxfullwidth,'val',$limiter);  
global_post_master.class.php:			$this->show_more('Image Quality Info','noback','','',400,'','float:left;',true);
global_post_master.class.php:			$this->print_wrap('Quality info wrap');
global_post_master.class.php:			foreach (explode(',',$this->$pic_field) as $picname){
global_post_master.class.php:				$this->auto_slide_arr[]=array('id'=>$this->blog_id,'data'=>$data,'picname'=>$picname,'is_clone'=>$this->is_clone,'clone_local_style'=>$this->clone_local_style,'clone_local_data'=>$this->clone_local_data,'maxwidth'=>$maxfullwidth,'quality'=>$quality,'quality_option'=>$option_field_arr[$image_quality_index]);  
global_post_master.class.php:				foreach($this->page_cache_arr as $ext){ 
global_post_master.class.php:									if ($arr['id']===$this->blog_id){
global_post_master.class.php:					$this->print_wrap('image info quality','editbackground  editfont floatleft left fsmnavy Od3green '.$this->column_lev_color);
global_post_master.class.php:			$this->show_close('Image Quality Info');
global_post_master.class.php:		 if (!$this->edit){
global_post_master.class.php:			$maxfullwidth=($type==='page')?max($this->page_cache_arr):$this->current_net_width;
global_post_master.class.php:			$limiter=($type==='page')?max($this->page_cache_arr):$this->page_width;
global_post_master.class.php:			$maxfullwidth=check_data::key_up($this->page_cache_arr,$maxfullwidth,'val',$limiter);   			$dir=Cfg_loc::Root_dir.Cfg::Auto_slide_dir.Cfg::Response_dir_prefix;
global_post_master.class.php:			$extarr=$this->page_cache_arr; 
global_post_master.class.php:			foreach (explode(',',$this->$pic_field) as $picname){
global_post_master.class.php:		if ($this->edit)$this->show_more('View Slideshow','','','','full','','float:left;',true);
global_post_master.class.php:               myslide_'.$inc.'.slideAuto_init("'.$this->blog_data1.'");
global_post_master.class.php:		if ($this->edit)$this->show_close('View Slideshow');
global_post_master.class.php:		if  (!$this->edit)return; 
global_post_master.class.php:		if (!$this->is_clone){
global_post_master.class.php:			$this->show_more('Rearrange or Remove Slide Images','','','',900,'','float:left;',true); 
global_post_master.class.php:			<div style="background:#'.$this->editor_background.'; color:#555; text-align:left; width:1000px; float:left;   border:3px solid #'.$this->redAlert.';  padding: 10px 30px 60px 30px;" ><!--Sorting-->
global_post_master.class.php:			$this->show_close('Rearrange or Remove Slide Images');
global_post_master.class.php:				$this->show_more('Individually Adjust Image Positioning','','','',900,'','float:left;',true); 
global_post_master.class.php:					if ($this->edit&&isset($_POST['submit'])&&isset($_POST['pageslide'][$image_mod])){
global_post_master.class.php:					$this->mod_spacing('pageslide['.$image_mod.'][0]',$current_posx,0,100,1,'%');
global_post_master.class.php:					$this->mod_spacing('pageslide['.$image_mod.'][1]',$current_posy,0,100,1,'%');
global_post_master.class.php:					$q="update $this->master_page_table set page_tiny_data3='".serialize($image_pos_data_arr)."',page_update='".date("dMY-H-i-s")."', page_time=".time().",token='".mt_rand(1,mt_getrandmax()). "' where page_id=$this->page_id";
global_post_master.class.php:                         $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_post_master.class.php:					if ($this->mysqlinst->affected_rows())
global_post_master.class.php:						$this->success[]="Updated Auto Page Slide Show Positioning";
global_post_master.class.php:						$this->message[]="No affected Rows result to update of Auto Page Slide Show";
global_post_master.class.php:				$this->show_close('Individually Adjust Image Positioning');
global_post_master.class.php:			}//$this->blog_table_base==$this->pagename
global_post_master.class.php:		//$width_available=($this->current_net_width*$wpercent/100);
global_post_master.class.php:		$sizes='';//$this->get_size_string($pic_init, Cfg_loc::Root_dir.Cfg::Auto_slide_dir);  
global_post_master.class.php:	if (!$this->edit)return;
global_post_master.class.php:	if ($this->clone_local_style||!$this->is_clone){ 
global_post_master.class.php:		$this->show_more('Configure Your Slide Show','','','',600,'','float:left;',true);
global_post_master.class.php:		echo '<div class="fsminfo editbackground  editfont '.$this->column_lev_color.' left floatleft"><!--Configure slide show-->';
global_post_master.class.php:			echo '<div class="fsminfo editbackground  editfont '.$this->column_lev_color.' left floatleft">Choose Your SlideShow type. ';
global_post_master.class.php:			echo '<p class="'.$this->column_lev_color.' editfont ">Adjust Speed of Fade-In/Fade-out Effect:</p>';
global_post_master.class.php:			 $this->mod_spacing($data.'_'.$option_field.'['.$transit_index.']',$transit,.2,1.4,.1,'secs');
global_post_master.class.php:			echo '<p class="'.$this->column_lev_color.' editfont ">Customize Time between Photo Changes:</p>';
global_post_master.class.php:			 $this->mod_spacing($data.'_'.$option_field.'['.$time_index.']',$time,3,14,1,'secs');
global_post_master.class.php:          $this->mod_spacing($data.'_'.$option_field.'['.$image_quality_index.']',$quality,10,100,1,'%');
global_post_master.class.php:          $this->submit_button();
global_post_master.class.php:		$this->show_close('Configure Your Slide Show'); 
global_post_master.class.php:          }//if ($this->clone_local_style||$this->pagename==$this->blog_table_base){
global_post_master.class.php:	if (!$this->is_clone){
global_post_master.class.php:		$this->print_wrap('upload slide image','editbackground  editfont Os3salmon fsminfo');
global_post_master.class.php:		printer::alert('Click here for the Image Uploader to add a new photo to the Automatic Slideshow.','',$this->column_lev_color.' left floatleft  ');
global_post_master.class.php:		printer::printx('<p class="navy underline"><a href="add_page_pic.php?www='.$width_available.'&amp;ttt='.$table.'&amp;fff='.$pic_field.'&amp;id='.$field_id_val.'&amp;id_ref='.$field_id.'&amp;bbb=auto_slide&amp;pgtbn='.$this->pagename.'&amp;quality='.$quality.'&amp;postreturn='.Sys::Self.'&amp;append=append&amp;css='.$this->roots.Cfg::Style_dir.$this->pagename.'&amp;no_image_resize&amp;sess_override&amp;sess_token='.$this->sess->sess_token.'">Upload A New SlideShow Image</a></p>');
global_post_master.class.php:          $this->edit_styles_close($data,'blog_data4','.thePhoto'.$inc.''.$inc,'borders,box_shadow','Style Slide Image Border',false,'',true);
global_post_master.class.php:          $this->edit_styles_close($data,$style_field,'.'.$this->dataCss,'background,padding_top,padding_bottom,padding_left,padding_right,margin_top,margin_bottom,margin_left,margin_right,borders,box_shadow,outlines,radius_corner','Edit Auto Slide General Post Styles',true,'',true);
global_post_master.class.php:          $this->css.= '
global_post_master.class.php:               $this->css.='
global_post_master.class.php:          $this->css.= '
global_post_master.class.php:     ($this->edit&&$this->overlapbutton)&&$this->overlapbutton();
global_post_master.class.php:	$corecolor=(preg_match(Cfg::Preg_color,$this->blog_data5))?' style="background:#'.$this->blog_data5.';"':'';
global_post_master.class.php:          if (!empty(trim($this->blog_data1))){   
global_post_master.class.php:               $old_arr=unserialize($this->blog_data1);   
global_post_master.class.php:				$this->message[]=$msg; 
global_post_master.class.php:		$q="update $this->master_post_table set blog_time=".time().",token='".mt_rand(1,mt_getrandmax()). "',blog_data1='".serialize($social_arr)."' where blog_table='$this->blog_table' and blog_order=$this->blog_order"; 
global_post_master.class.php:		$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
global_post_master.class.php:		$this->success[]=$msg;
global_post_master.class.php:	else if(!empty($this->blog_data1)) $socialdata=unserialize($this->blog_data1);  
global_post_master.class.php:	$element=($this->blog_data2=='vertical')?'p':'span';
global_post_master.class.php:	$style=($this->blog_data2==='vertical')?' padding-top:':' padding-left:';
global_post_master.class.php:	$style=(is_numeric($this->blog_data3)&&$this->blog_data3>0)?' style="'.$style.$this->blog_data3.'px;"':' style="'.$style.'0px;"';
global_post_master.class.php:	$this->edit_styles_open();
global_post_master.class.php:	($this->edit)&&    
global_post_master.class.php:			$this->blog_options($data,$this->blog_table);
global_post_master.class.php:			$shape_dir=(!empty($this->blog_data4)&&is_dir(Cfg_loc::Root_dir.Cfg::Social_dir.$choices[0].'/'.$this->blog_data4))?$this->blog_data4.'/':'';
global_post_master.class.php:	if (!$this->edit)return;
global_post_master.class.php:	if(!$this->is_clone&&is_array($socialdata)&& !arrayhandler::is_empty_array($socialdata)){ 
global_post_master.class.php:		$this->show_more('Edit/Delete Previous Icon Choices','noback','','',400,'','float:left;',true);
global_post_master.class.php:                echo'<p class="'.$this->column_lev_color.' floatleft editbackground  editfont editcolor">Edit: <img '.$corecolor.' src="'.Cfg_loc::Root_dir.Cfg::Social_dir.$choices[0].'/'.$choices[1].'.gif" width="'.$choices[2].'" height="'.$choices[2].'" alt="mychoice icon" ></p>';
global_post_master.class.php:               echo '<p class="'.$this->column_lev_color.' floatleft editfont"><input type="checkbox"  name="'.$data.'_socialdata['.$num.'][0]." value="'.$choices[0].' is deleted" >Check Here to Delete this icon</p>'; 
global_post_master.class.php:               $this->show_more('Change your icon color','noback','','',600,'','float:left;',true);
global_post_master.class.php:               $this->show_close('color');//<!--show more color-->p class="'.$this->column_lev_color.' editfont">Change Your Image size</p> ';
global_post_master.class.php:               printer::alertx('<p class="editbackground  editfont '.$this->column_lev_color.' rad3 floatleft">Change the size of your Social Icon: </p>');
global_post_master.class.php:               <p class="'.$this->column_lev_color.'   editfont left">Currently: '.$size.$unit.'<br>';
global_post_master.class.php:               $this->mod_spacing($data.'_socialdata['.$num.'][2]',$size,$range1,$range2,$increment,$unit,'',$msgjava); 
global_post_master.class.php:               <p class="'.$this->column_lev_color.' editbackground  editfont editcolor">Change Your Icon Url&nbsp;<br><input style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text" name="'.$data.'_socialdata['.$num.'][3]" value="'.$value3.'" maxlength="150"></p>';
global_post_master.class.php:		$this->show_close('Previous Icon Choices');//<!--Show More Edit Previous Icon Choices--> 
global_post_master.class.php:	if (!$this->is_clone){
global_post_master.class.php:		$this->show_more('Add a new Social Icon','noback','','',600,'','float:left;',true);
global_post_master.class.php:		<p class="left '.$this->column_lev_color.'   editbackground  editfont editcolor">Choose Your Link  Color Size and URl Here</p>';
global_post_master.class.php:		echo '<div class="fsminfo editbackground  editfont '.$this->column_lev_color.' " ><!--link type-->Pick a link type:';
global_post_master.class.php:		echo '<p class="'.$this->column_lev_color.' editbackground  editfont editcolor">Choose Your Color: </p>';
global_post_master.class.php:		echo '<p class="'.$this->column_lev_color.'  left">Choose Your Icon Size:<br>
global_post_master.class.php:		echo '<p class="'.$this->column_lev_color.' editbackground  editfont editcolor">Add Your New Icon Url&nbsp;<input style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text" name="'.$data.'_socialdata['.$num.'][3]" value="http://" maxlength="100"></p>';
global_post_master.class.php:		$this->show_close('Add New Icon Choices');//<!--Show More Edit Add New Icon Choices--> 
global_post_master.class.php:	if ($this->clone_local_style||!$this->is_clone){ 
global_post_master.class.php:		$this->show_more($msg,'noback','','',400,'','float:left;',true);//<!--shape vert spacing-->
global_post_master.class.php:		$checked1=($this->blog_data4!=='round')?'checked="checked"':'';
global_post_master.class.php:		$checked2=($this->blog_data4==='round')?'checked="checked"':'';
global_post_master.class.php:		echo '<p class="'.$this->column_lev_color.' editbackground  editfont editcolor">Edit Which Icon Shape to Use:</br> 
global_post_master.class.php:		$checked1=($this->blog_data2!=='vertical')?'checked="checked"':'';
global_post_master.class.php:		$checked2=($this->blog_data2==='vertical')?'checked="checked"':'';
global_post_master.class.php:		echo '<p class="'.$this->column_lev_color.' editbackground  editfont editcolor">Select Horizontal or Vertical Display for Your Icon Grouping:</br> 
global_post_master.class.php:		if (preg_match(Cfg::Preg_color,$this->blog_data5)){
global_post_master.class.php:               $msg= (!empty($this->blog_data5))?$this->blog_data5 . ' is not a valid color code. Enter a Code/Click On to Open the Color finder tool to Add a Color to the Icon Center!':'Enter a Code/Click On to Open the Color finder tool to Add a Color to the Icon Center!: #';
global_post_master.class.php:		$this->{$data.'_blog_data5_arrayed'}=array();
global_post_master.class.php:		$this->{$data.'_blog_data5_arrayed'}[0]=$this->blog_data5;
global_post_master.class.php:		$this->font_color($data.'_blog_data5_arrayed','0','blog_data5','Changing Icon Core Color');
global_post_master.class.php:		echo '<p class="'.$this->column_lev_color.' editbackground  editfont editcolor">Add Additional Space between Your Icons:</p>';
global_post_master.class.php:		 $this->mod_spacing($data.'_blog_data3_arrayed',$this->blog_data3,1,100,1,'px','none');
global_post_master.class.php:		$this->show_close('shape vert spacing');//<!--shape vert spacing-->
global_post_master.class.php:		$this->edit_styles_close($data,'blog_style','.'.$this->dataCss,'background,text_align,padding_top,padding_bottom,padding_left,padding_right',"Edit Social Icon styling",'','',true,true);
global_post_master.class.php:     ($this->edit&&$this->overlapbutton)&&$this->overlapbutton();
global_post_master.class.php:	$this->noname='';
global_post_master.class.php:	$this->noemail='';
global_post_master.class.php:	$this->nomessage='';
global_post_master.class.php:	$blog_data1=explode(',',$this->blog_data1);
global_post_master.class.php:	$blog_data6=explode(',',$this->blog_data6);
global_post_master.class.php:	$this->blog_data1=implode(',',$blog_data1);
global_post_master.class.php:	$blog_data4=(!empty($this->blog_data4))?explode(',',$this->blog_data4):$image_array;
global_post_master.class.php:          $this->blog_data4=implode(',',$image_array);
global_post_master.class.php:	$this->blog_data2=preg_replace('/\s/','',$this->blog_data2);
global_post_master.class.php:	$this->blog_data3=preg_replace('/\s/','',$this->blog_data3);
global_post_master.class.php:	$this->blog_data2=str_replace('<br>','',$this->blog_data2);//spacing control 
global_post_master.class.php:	$this->sent=false;//initialize : if true mail was sent
global_post_master.class.php:	$this->textarea_contact_default=$blog_data1[4];
global_post_master.class.php:	if (isset($_POST['mailsubmitted_'.$data])&&isset($_POST['email'])) $this->contact_mail_process($data,$blog_data1); 
global_post_master.class.php:	$color='inherit';//$this->current_color;
global_post_master.class.php:	$background='inherit';//$this->current_background_color;
global_post_master.class.php:	$upper_maxwidth=500*$this->current_font_px/16;//upper contact form max width
global_post_master.class.php:	$current_net_width=($this->current_net_width<$upper_maxwidth)?$this->current_net_width:$upper_maxwidth;
global_post_master.class.php:	$size=process_data::input_size($current_total_width_left,$this->current_font_px,30);		$this->textarea_contact_default='';// no text in textarea on normal page!!
global_post_master.class.php:	$this->edit_styles_open();
global_post_master.class.php:	($this->edit)&&    
global_post_master.class.php:		$this->blog_options($data,$this->blog_table); 
global_post_master.class.php:	if($this->edit&&!$this->is_clone){		
global_post_master.class.php:		print '<fieldset class="border1 borderdouble" style="overflow:none;border-color:#'.$this->magenta.';"><!-- Wrap Normal Display Contact-->
global_post_master.class.php:		<legend style="background:white; color:#'.$this->magenta.';">Display Only:  Use Editing Below</legend>'; 
global_post_master.class.php:	$name=($this->edit)?'':'name="email[name_'.$data.']"';
global_post_master.class.php:	$subject=($this->edit)?'':'name="email[subject_'.$data.']"';
global_post_master.class.php:	$email=($this->edit)?'':'name="email[email_'.$data.']"';
global_post_master.class.php:	$messagename=($this->edit)?'email[\'nonameproxy\']':'email[message'.$data.']" id="message'.$data.'';
global_post_master.class.php:	$vmsg=(!$this->sent&&isset($_POST['email']['message'.$data])&&isset($this->clean_message))?$this->clean_message:'textarea_contact_default';
global_post_master.class.php:	$vname=(!$this->sent&&isset($_POST['email']['name_'.$data])&&isset($this->clean_name))?$this->clean_name:'';
global_post_master.class.php:	$vemail=(!$this->sent&&isset($_POST['email']['name_'.$data])&&isset($this->clean_email))?$this->clean_email:'';  
global_post_master.class.php:	 <p class="wide"><input type="text" '.$name.' id="name'.$data.'"  maxlength="50" value="'.$vname.'"><span class="alertnotice">' . $this->noname . '</span> </p>
global_post_master.class.php:    <p class="wide"><input type="text"   '.$email.' id="email'.$data.'"  maxlength="80" value="'.$vemail.'" > <span class="alertnotice">' . $this->noemail . '</span> </p>
global_post_master.class.php:     $this->textarea('Enter message Here','contact_message_check',$this->current_net_width,$this->current_font_px,'','left',98,false);
global_post_master.class.php:     $this->textarea($vmsg,$messagename,$this->current_net_width,$this->current_font_px,'','left',98,true);
global_post_master.class.php:	if ($this->edit&&!$this->is_clone){
global_post_master.class.php:          $this->show_more('Change/Translate the Default Form Prompts Shown Above','noback','','',500); //form prompts
global_post_master.class.php:          echo'<div class="fsminfo editbackground  editfont '.$this->column_lev_color.' editfont left"><!--Form defaults Modify-->
global_post_master.class.php:		$cols=process_data::width_to_col($current_net_width,$this->current_font_px);
global_post_master.class.php:		$mytext=(empty($this->blog_data5))?$this->default_blog_text:$this->blog_data5;
global_post_master.class.php:		   <p class="editfont narrow " style="background:#'.$this->editor_background.';color:#'.$this->editor_color.';">
global_post_master.class.php:		 <p class="wide"><input style="background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text"   name="'.$data.'_blog_data1[0]"      maxlength="50" value="'.$blog_data1[0].'"></p>
global_post_master.class.php:		  <p class="editfont narrow"  style="background:#'.$this->editor_background.';color:#'.$this->editor_color.';">
global_post_master.class.php:		   <p class="wide"><input style="background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text"  name="'.$this->blog_table.'_'.$this->blog_order.'_blog_data1[1]"   size="'.$size.'" maxlength="50" value="'.$blog_data1[1].'"></p>
global_post_master.class.php:		   <p class="editfont narrow"  style="background:#'.$this->editor_background.';color:#'.$this->editor_color.';">
global_post_master.class.php:		   <p class="wide"><input style="background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text"  name="'.$this->blog_table.'_'.$this->blog_order.'_blog_data1[3]"  size="'.$size.'" maxlength="50" value="'.$blog_data1[3].'"></p>
global_post_master.class.php:		  <p class="editfont narrow"  style="background:#'.$this->editor_background.';color:#'.$this->editor_color.';">   '.$blog_data1[2].'</p>
global_post_master.class.php:	    <p class="wide"><input style="background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text" name="'.$this->blog_table.'_'.$this->blog_order.'_blog_data1[2]"  value="'.$blog_data1[2].'"  size="'.$size.'" maxlength="60" ></p>
global_post_master.class.php:		<p ><textarea class="editfont" style="background:#'.$this->editor_background.';color:#'.$this->editor_color.';font-size:18px; width:90%" name="'.$this->blog_table.'_'.$this->blog_order.'_blog_data1[4]" cols="70" rows="1" >'.$blog_data1[4].'</textarea> </p>';
global_post_master.class.php:		$this->show_close('Change/Translate the Default Form Prompts Shown Above');//form prompts
global_post_master.class.php:		print '<p class="alertnotice">' . $this->nomessage . '</p>';
global_post_master.class.php:		 <p><input type="hidden" name="sess_token" value="'.$this->sess->sess_token.'" ></p>
global_post_master.class.php:    $this->css.='
global_post_master.class.php:	.'.$this->dataCss.' textarea {padding:5px 10px; border: 1px solid '.$contact_border.'}
global_post_master.class.php:	.'.$this->dataCss.' p.wide input {
global_post_master.class.php:      .'.$this->dataCss.' textarea {'.$background_color.' color:'. $color2.';}
global_post_master.class.php:      .'.$this->dataCss.' input.emailbutton {font-weight:600;font-family:inherit; padding:3px 5px; border: 1px solid '.$contact_border.';'.$background_color.' color:'. $color2.';}
global_post_master.class.php:	.alertnotice {font-weight:800; color:#'.$this->redAlert.';}
global_post_master.class.php:	 .'.$this->dataCss.' .wide input {font-family:inherit; color: '.$color2.';
global_post_master.class.php:	 .'.$this->dataCss.' .clear{clear:both; } 
global_post_master.class.php:      .'.$this->dataCss.' .form_message {padding:.7em 0 .15em 0; background:'.$background.'; color: '. $color.';text-align: left; font-size: .9em; text-align: left; } 
global_post_master.class.php:	.'.$this->dataCss.' p.wide{text-align:left;float:left;max-width:300px;}
global_post_master.class.php:		.'.$this->dataCss.' p.wide{max-width:250px;}
global_post_master.class.php:		.'.$this->dataCss.' p.wide{max-width:200px;}
global_post_master.class.php:		.'.$this->dataCss.' p.wide{max-width:160px;}
global_post_master.class.php:	.'.$this->dataCss.'  p.narrow,.'.$this->dataCss.'  td.narrow label {background:#'.$background.'; color: '. $color.'; text-align: left;float:left; width:100px; margin-top:10px }
global_post_master.class.php:	.'.$this->dataCss.'  p.narrow label.information {color:#'.Cfg::Info_color.';}
global_post_master.class.php:	.'.$this->dataCss.'  .contact {background:#'.$background.'; color: '. $color.';} 
global_post_master.class.php:	if ($this->clone_local_style||!$this->is_clone){
global_post_master.class.php:		if(empty($this->{'blog_data2'})):
global_post_master.class.php:		$this->show_more($msg,'noback','',"Initial Configuration Requires Your Email Address: Add Below:",400,'','float:left;',true);//show more config
global_post_master.class.php:		printer::alertx('<p class="editfont fsminfo editbackground  editfont '.$this->column_lev_color.'"> Emails Will Be sent to the  Address(es) You Add Here Whenever a User Submits this Contact Form.  Use commas to separate multiple emails</p>');
global_post_master.class.php:		if (empty($this->blog_data2)) :
global_post_master.class.php:			$this->blog_data2=(preg_match(Cfg::Preg_email,Cfg::Contact_email))?Cfg::Contact_email:Cfg::Admin_email;
global_post_master.class.php:          $this->textarea('blog_data2',$this->blog_table.'_'.$this->blog_order.'_blog_data2',$this->current_net_width,$this->current_font_px,'','left',90,false,$class);
global_post_master.class.php:			printer::alertx('<p class="editfont fsminfo editbackground  editfont '.$this->column_lev_color.'" >Check Below to Deactivate All http:// Active Urls &#40;http:// website Links&#41; in the Messages you receive. Mistakenly hit Active URLs can potentially take you to a Malware Site. You  can still copy the Url and manually paste into the address  bar if the deactivation option is chosen.</p>');
global_post_master.class.php:			printer::alertx('<p class="editfont fsminfo editbackground  editfont '.$this->column_lev_color.'" >Check Below to Prevent Deactivation of All Website Links &#40;URLs&#41; in The Email Message You receive. Mistakenly hit urls can potentially take you to a Malware Site. If NOT Chosen You can still copy the Url and manually paste into the address  bar. 
global_post_master.class.php:		$this->textarea('blog_data3',$data.'_blog_data3',$this->current_net_width,$this->current_font_px);
global_post_master.class.php:		$this->show_close('show more config');  
global_post_master.class.php:		$this->show_more($msg,'noback','',"Input and Textarea Colors",400,'','float:left;',true); 
global_post_master.class.php:		printer::alertx('<p class="left editbackground  editfont editcolor"><label class="information" title="In Additon to styling the text color and background color of the Contact Form options in the Edit Contact Link above optionally choose to color the text and background  of the input and textarea fields of the Contact Form separately if you Wish to contrast them from the General Form Background Colors. Change Font Colors Here">Change the Font Color of Contact Form Input/Textarea Fields: #</label><input onclick=" window.jscolor(this);" style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text"  name="'.$this->blog_table.'_'.$this->blog_order.'_blog_data6[0]" id="'.$this->blog_table.'_'.$this->blog_order.'fontcolor" value="'.$blog_data6[0].'" size="6" maxlength="6" class="jscolor {refine:false}"><span style="font-size: 1.1em; color:#'.Cfg::Info_color.';" id="'.$this->blog_table.'_'.$this->blog_order.'fontcolorinstruct"></span></p>');
global_post_master.class.php:		printer::alertx('<p class="left editbackground  editfont editcolor"><span class="information" title="Optionally Change the text and background colors of the input and textarea fields of the Contact Form if you Wish to contrast them from the General Form Background Colors. Change Background Colors Here">Change the Background Color of Contact Form Input/Textarea Fields: #</span><input onclick=" window.jscolor(this);" style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text"  name="'.$this->blog_table.'_'.$this->blog_order.'_blog_data6[1]" id="'.$this->blog_table.'_'.$this->blog_order.'backgroundcolor" value="'.$blog_data6[1].'" size="6" maxlength="6" class="jscolor {refine:false}"><span style="font-size: 1.1em; color:#'.Cfg::Info_color.';" id="'.$this->blog_table.'_'.$this->blog_order.'backgroundcolorinstruct"></span></p>');
global_post_master.class.php:		$this->mod_spacing($this->blog_table.'_'.$this->blog_order.'_blog_data6[3]',$background_color_opacity,1,100,1,'%');
global_post_master.class.php:		printer::alertx('<p class="left editbackground  editfont editcolor">Optionally Change the  Contact Form Input/Textarea Border Color: #<input onclick=" window.jscolor(this);" style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text"  name="'.$this->blog_table.'_'.$this->blog_order.'_blog_data6[2]" id="'.$this->blog_table.'_'.$this->blog_order.'contactbordercolor" value="'.$blog_data6[2].'" size="6" maxlength="6" class="jscolor {refine:false}"><span style="font-size: 1.1em; color:#'.Cfg::Info_color.';" id="'.$this->blog_table.'_'.$this->blog_order.'contactbordercolorinstruct"></span></p>');
global_post_master.class.php:		$this->show_close('Change Colors');//<!--Show More Change Colors-->'; 
global_post_master.class.php:	 $this->edit_styles_close($data,'blog_style','.'.$this->dataCss,'',$mod_msg);
global_post_master.class.php:     ($this->edit&&$this->overlapbutton)&&$this->overlapbutton();
global_post_master.class.php:		$this->post_message=htmlentities($_POST['email']['message'.$data]);
global_post_master.class.php:	    $this->post_name=htmlentities($_POST['email']['name_'.$data]); 
global_post_master.class.php:		$this->post_email=htmlentities($_POST['email']['email_'.$data]); 
global_post_master.class.php:	$this->scrubbed=$_POST['email'];
global_post_master.class.php:	array_walk($this->scrubbed,array('self','email_scrubber'),$deactivate); //scrubbed is array sent hrou scrubber                                                                     
global_post_master.class.php:	//echo $this->scrubbed['message'.$data].' is scrubbed message';
global_post_master.class.php:	if (!preg_match(Cfg::Preg_email,$this->scrubbed['email_'.$data])){
global_post_master.class.php:		$this->scrubbed['email_'.$data]='';
global_post_master.class.php:	if (!empty($this->scrubbed['name_'.$data]) && !empty($this->scrubbed['subject_'.$data]) && !empty($this->scrubbed['message'.$data]) && !empty($this->scrubbed['email_'.$data]) ) {
global_post_master.class.php:		$this->clean_email=$clean_email=$this->scrubbed['email_'.$data];
global_post_master.class.php:		$this->clean_name=$clean_name=$this->scrubbed['name_'.$data];
global_post_master.class.php:		$this->clean_subject=$this->subject=$clean_subject=$this->scrubbed['subject_'.$data];
global_post_master.class.php:		$this->clean_message=$clean_message=$this->scrubbed['message'.$data];
global_post_master.class.php:		$this->body =NL. wordwrap($body, Cfg::Wordwrap);
global_post_master.class.php:			if(empty($this->blog_data2)){
global_post_master.class.php:			$newtomail=explode(',',$this->blog_data2);
global_post_master.class.php:			if (!empty($this->blog_data3)){
global_post_master.class.php:				$checkarray=explode(',',$this->blog_data3);
global_post_master.class.php:					if (strpos($this->scrubbed['subject_'.$data],$check)!==false) {
global_post_master.class.php:				    $this->body.=NL.'Emails Spammmed due to keywords: '.$check_list;
global_post_master.class.php:				    $this->subject='SPAM Alert: '.$this->subject;
global_post_master.class.php:				$this->body = NL. ' Browser info is '
global_post_master.class.php:				. $this->body; 
global_post_master.class.php:					$this->sent=false;
global_post_master.class.php:					$this->sent=true; //giveem sent message without sending 
global_post_master.class.php:						$this->contact_mail_send($var);
global_post_master.class.php:				if ($this->sent){
global_post_master.class.php:					$name=htmlentities($this->post_name);//don't use full scrubbed name as giveaway
global_post_master.class.php:                    $this->body = NL.
global_post_master.class.php:                    'email subject: '.$this->subject.NL.
global_post_master.class.php:                    . $this->body;
global_post_master.class.php:                    echo $this->body;
global_post_master.class.php:                    $name=htmlentities($this->post_name);//don't use full scrubbed name as giveaway
global_post_master.class.php:               echo $this->alert[]='Please fill out the form completely.</p>';
global_post_master.class.php:               if (empty($this->scrubbed['name_'.$data])){
global_post_master.class.php:                   $this->noname='*Name Required';
global_post_master.class.php:               if (empty($this->scrubbed['message'.$data])){
global_post_master.class.php:                   $this->nomessage='*Message is Required';
global_post_master.class.php:               if (empty($this->scrubbed['email_'.$data])){
global_post_master.class.php:                   $this->noemail='*Valid email is Required';
global_post_master.class.php:		//$headers.= "Reply-To: $this->scrubbed['email'] \r\n"; note did work with reply to...
global_post_master.class.php:	$this->body
global_post_master.class.php:	$this->body
global_post_master.class.php:	if (mail($email, $this->subject, $message, $headers)) {
global_post_master.class.php:		$this->sent=true;}
global_post_master.class.php:	else mail::alert('Problem with mail_send in contact.php'." email is $email and message is ".NL."$message ".NL."and headers are ".NL."$headers and subject is ".$this->subject);	
global_post_master.class.php:	$ele_arr=explode(',',$this->$element);  
global_post_master.class.php:				($this->edit)&&printer::alert_neg('Invalid  background video: '.$vidname);
global_post_master.class.php:			if ($this->edit&&$ratio===1.333){
global_post_master.class.php:			$width=$this->current_net_width; //auto with background
global_post_master.class.php:			echo '<div '.$id.' class="video-back-container" data-rwd="'.$this->rwd_post.'" data-type="'.$element.'" data-vid-ratio ="'.$ratio.'"><div>';
global_post_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log(__LINE__.' @ '.__method__.'  ');
global_post_master.class.php:	$datainc='_'.$this->blog_id;
global_post_master.class.php:	$this->navobj->current_color=$this->column_lev_color;
global_post_master.class.php:	$menutype=($this->blog_tiny_data2!=='force_vert')?Cfg::Horiz_nav_class:$this->blog_tiny_data2;
global_post_master.class.php:		if ($this->edit){
global_post_master.class.php:			$dir_menu_id=$this->process_add_new_page();
global_post_master.class.php:			$this->edit_styles_open();
global_post_master.class.php:			$this->delete_option();
global_post_master.class.php:			$q="select distinct dir_menu_id from $this->directory_table";
global_post_master.class.php:			$r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_post_master.class.php:			if ($this->mysqlinst->affected_rows()){
global_post_master.class.php:				$this->show_more('Create Menu', ' ','','',800);
global_post_master.class.php:				$this->show_more('More Scenarios', ' ','','',800);
global_post_master.class.php:                    $this->show_close('menu opts');
global_post_master.class.php:				$this->show_close('create menu scenarious');
global_post_master.class.php:				$this->show_more('Choose a Menu Already Created to Add Here', ' ','','',800); //menu created
global_post_master.class.php:				while (list($dir_menu_id)=$this->mysqlinst->fetch_row($r)){
global_post_master.class.php:					$this->navobj->render_menu($dir_menu_id,'utility_horiz',false);
global_post_master.class.php:				$this->show_close('menu created');//menu created
global_post_master.class.php:			$this->show_more($Or.' Start a New Menu from Scratch by Selecting a Previously Created Page', ' ','','',500); //menu create
global_post_master.class.php:			printer::printx('<p class="fsminfo editbackground  editfont floatleft left '.$this->column_lev_color.'">'.$msg.'</p>');
global_post_master.class.php:			$q="select distinct  page_ref, page_title from $this->master_page_table order by page_ref ASC"; 
global_post_master.class.php:			$r = $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,false);
global_post_master.class.php:			if (!$this->mysqlinst->affected_rows()){
global_post_master.class.php:				$this->show_close('Start a New Menu');
global_post_master.class.php:				while (list($page_ref,$page_title) = $this->mysqlinst->fetch_row($r,__LINE__)){
global_post_master.class.php:					echo '<div class="fsminfo editbackground  editfont  floatleft left '.$this->column_lev_color.'">Choose your Page Reference to begin your new menu<br>'; 
global_post_master.class.php:					echo'<p> <select class="editcolor editbackground  editfont"  name="menu_start_new['.$this->blog_id.']">';       
global_post_master.class.php:				$this->show_close('more nav menu');
global_post_master.class.php:			$this->show_more('Other Options', 'Close Other Options','highlight fsminfo editbackground  editfont','Link to External Site, Link to Internal PDF or HTML Page, Upload Internal Page');
global_post_master.class.php:			$this->show_more('Add Navigation Menu Link to an External Website', 'noback','information editbackground  editfont fsminfo editbackground  editfont','This Link Will Take Your Website Viewer Off Your Own Site');
global_post_master.class.php:			printer::alert('Enter the url address of the External Link. http:// will be appended automatically if you do not include it ie www.mysite.com<input   style="background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text" name="create_external_link_url" value="" size="60" maxlength="100">');
global_post_master.class.php:			printer::alert('Enter the title of the External Link. <textarea class="utility"  name="create_external_link_name['.$this->blog_id.']" style="width:90%;" rows="3" cols="50" ></textarea>');
global_post_master.class.php:			$this->show_close('External Link');echo ' <!--close show_more External Link-->'; 
global_post_master.class.php:			$this->show_more('Add a Navigation Link to an Uploaded PDF file');
global_post_master.class.php:			printer::alert('Enter the filename of the Uploaded PDF file: ie myfile.pdf<input  style="background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text" name="create_internal_link_filename['.$this->blog_id.']" value="" size="60" maxlength="60">');
global_post_master.class.php:			printer::alert('Enter the title for Your PDF link. <textarea class="utility"  name="create_internal_link_title['.$this->blog_id.']" style="max-width:90%;" rows="3" cols="50" ></textarea>');
global_post_master.class.php:			$this->show_close('internal PDF Link');echo ' <!--close show_more internal PDF Link-->'; 
global_post_master.class.php:			$this->show_close(' Other');echo ' <!--close show_more Other-->'; 
global_post_master.class.php:	$count=$this->mysqlinst->count_field($this->directory_table,'dir_menu_id','',false,"where dir_menu_id='$dir_menu_id' AND dir_sub_menu_order=0 "); 
global_post_master.class.php:	($this->edit)&&$this->edit_styles_open();
global_post_master.class.php:	($this->edit)&&    
global_post_master.class.php:	$this->blog_options($data,$this->blog_table);
global_post_master.class.php:	$nav_params=explode(',',$this->blog_tiny_data1);
global_post_master.class.php:		// for two arrayed forms are for normal styling and the other for $this->mod_spacing
global_post_master.class.php:     $max_viewport=(!empty($this->column_total_width[0])&&$this->column_total_width[0]>350)?$this->column_total_width[0]:((!empty($this->page_width)&&$this->page_width>350)?$this->page_width:1280);
global_post_master.class.php:		($this->edit)&&printer::printx('<p class="editbackground  editfont fsminfo editbackground  editfont floatleft left '.$this->column_lev_color.'">Menu Id: '.$dir_menu_id.'</p>');
global_post_master.class.php:		$this->navobj->nav_animate=$nav_animate;
global_post_master.class.php:		$this->navobj->respond_menu_dimension=$respond_menu_dimension;
global_post_master.class.php:		$this->navobj->force_caps=($nav_params[$nav_force_caps_index]==='force')?true:false;
global_post_master.class.php:		$this->navobj->nav_post_class=$this->dataCss;
global_post_master.class.php:		$this->navobj->nav_repeat_submenu=($nav_params[$nav_repeat_submenu_index]!=='repeat')?false:true;
global_post_master.class.php:		 $this->navobj->render_menu($dir_menu_id,$menutype.$datainc);
global_post_master.class.php:          \$( '.$this->dataCss .nav_gen li:has(ul)' ).doubleTapToGo();
global_post_master.class.php:	elseif(empty($count)&&$this->edit){
global_post_master.class.php:		printer::printx('<p class="fsminfo editbackground  editfont '.$this->column_lev_color.' floatleft left">Add Your First Already Created Page To This Menu Under the Add Remove &amp; Edit Links Option Below</p>');
global_post_master.class.php:	if(!$this->edit)return;
global_post_master.class.php:	$this->main_menu_check[]=array($this->blog_data1,$menutype.$datainc,$this->data,$this->current_net_width); //for creating utility and expand menus
global_post_master.class.php:	$nav_width_manage=($this->column_use_grid_array[$this->column_level]==='use_grid'&&$nav_params[$nav_link_width_management_index]!=='nomanage')?true:false;
global_post_master.class.php:     if (!$this->is_clone||$this->clone_local_style){
global_post_master.class.php:          $this->show_more('Style/Enable/Customize Responsive Menu Icon','','','',600);
global_post_master.class.php:          $this->print_wrap('rwd menu icon');
global_post_master.class.php:          $this->edit_styles_close($data,'blog_data8','.'.$this->dataCss.' #ulTop.menuRespond2','background,padding_top,padding_bottom,padding_left,padding_right,margin_top,margin_bottom,margin_left,margin_right,text_align,borders,box_shadow,outlines,radius_corner,transform',"Edit Overall styling when Responsive Menu Icon is clicked",'','',true,true );
global_post_master.class.php:          echo '<div class="fsminfo editbackground  editfont  '.$this->column_lev_color.' floatleft"><!--Menu Icon RWD Width-->';
global_post_master.class.php:          $this->mod_spacing($data.'_blog_tiny_data1_arrayed['.$nav_icon_rwd_width_index.']',$respond_menu_dimension,$min_viewport,$max_viewport,1,'px','none');
global_post_master.class.php:          echo '<div class="fsminfo editbackground  editfont  '.$this->column_lev_color.' floatleft"><!--Icon Width-->';
global_post_master.class.php:          $this->mod_spacing($data.'_blog_tiny_data1_arrayed['.$nav_icon_width_index.']',$icon_width,.3,3,.1,'em');
global_post_master.class.php:          $this->rwd_scale($nav_params[$nav_icon_width_index],$data.'_blog_tiny_data1['.$nav_icon_width_index.']',"#$this->dataCss .show_icon",'font-size','Navigation Menu Icon Size','px',0,1,false,16,10); 
global_post_master.class.php:           printer::alertx('<p class="left editbackground  editfont editcolor">Change the Menu Icon Color: #<input onclick=" window.jscolor(this);" style="cursor:pointer;background:#'.$this->editor_background.';color:#'.$this->editor_color.';" type="text"  name="'.$data.'_blog_tiny_data1['.$nav_icon_color_index.']." id="'.$this->blog_table.'_'.$this->blog_order.'iconcolor" value="'.$nav_icon_color.'" size="6" maxlength="6" class="jscolor {refine:false}"><span style="font-size: 1.1em; color:#'.Cfg::Info_color.';" id="'.$this->blog_table.'_'.$this->blog_order.'iconcolorinstruct"></span></p>');
global_post_master.class.php:          echo '<div class="fsminfo editbackground  editfont  '.$this->column_lev_color.' floatleft"><!--Icon Float-->';
global_post_master.class.php:          //echo '<p class="info left" title="Select your icon responsive position from left at 0%  to right at 100% or somewhere between. Caution: Values Near 100 may disappear Icon off right end, whereas using 100 gives correct far right positioning">Icon Position (Use 100% for correct Adjusted Far Right Positioning)</p>'; //$this->mod_spacing($data.'_blog_tiny_data1_arrayed['.$nav_icon_position_index.']',$icon_position_choice,0,100,1,'%'); 
global_post_master.class.php:           echo '<div class="fsminfo editbackground  editfont  '.$this->column_lev_color.' floatleft"><!--nav animate-->';
global_post_master.class.php:          echo '<div class="fsminfo editbackground  editfont  '.$this->column_lev_color.' floatleft"><!--Respond Vertical-->';
global_post_master.class.php:          $this->submit_button(); 
global_post_master.class.php:          $this->show_close('Enable/Customize Responsive Menu Icon');
global_post_master.class.php:	$this->show_text_style=true; //temp turn on text-align display
global_post_master.class.php:	$this->edit_styles_close($data,'blog_style','.'.$this->dataCss,'background,padding_top,padding_bottom,padding_left,padding_right,margin_top,margin_bottom,margin_left,margin_right,text_align,borders,box_shadow,outlines,radius_corner,transform',"Edit Overall Post Styling for non menu icon widths",'','Edit Overall Post Styling for non menu icon widths and align Links left right or center using Text align.  Use Detailed Link Styling for Link Text Styling',true,true );  
global_post_master.class.php:	$this->show_text_style=false; //turn off text-align display
global_post_master.class.php:	$this->{'blog_tiny_data1_arrayed'}=$this->{$data.'_blog_tiny_data1_arrayed'} =$nav_params;
global_post_master.class.php:	$this->background_img_px=(is_numeric($nav_params[$nav_link_width_index])&&$nav_params[$nav_link_width_index]>30)?$nav_params[$nav_link_width_index]:200; 
global_post_master.class.php:     if (!Sys::Quietmode&&($this->clone_local_style||!$this->is_clone)){#    PROCEEd FOr NORMAL
global_post_master.class.php:		$this->show_more('Detailed Link Syling &amp; Custom Menu Opts', '','','',500,'','float:left',true);
global_post_master.class.php:		$this->print_wrap('detail link');	 
global_post_master.class.php:		$pass_nav_class.=($this->blog_tiny_data3==='nav_display')?'+display':'+hover';
global_post_master.class.php:		$checked1=($this->blog_tiny_data3!=='nav_display')?'checked="checked"':''; 
global_post_master.class.php:          $checked2=($this->blog_tiny_data3==='nav_display')?'checked="checked"':'';#full width option
global_post_master.class.php:		printer::printx('<p class="fsminfo editbackground  editfont floatleft '.$this->column_lev_color.' left">Customize Your Menu Links <br>Style the  background area around each link with borders, colors, images, box shadow, creating a link button if you wish, and set the distance between the &#34;link button&#34; areas: </p>');
global_post_master.class.php:	$this->edit_styles_close($data,'blog_data4','.'.$this->dataCss.' .nav_gen ul li  ul li a,.'.$this->dataCss.' .nav_gen li a',$style_list,'Style General Menu Link','','Styles You Make Here will affect Normal and  Hover or Active Links. Use Nav General Post styling to set nav link alignment center or left. For additional Hover and Active Link effects Style Below<br>To Enlarge Background Area for Images and Background Color Use Padding Spacing<br>To Enlarge Spacing between Background styled links use margin spacing');
global_post_master.class.php:		$this->edit_styles_close($data,'blog_data2','.'.$this->dataCss.' .nav_gen ul li  ul li a',$style_list,'Style Sub Menu Links Differently','','Optionally Style a Dropdown Menu Link Differently than the General Menu Link Settings you Made ',false );
global_post_master.class.php:		$this->edit_styles_close($data,'blog_data6','.'.$this->dataCss.' .nav_gen ul li  li a:hover, .'.$this->dataCss.' .nav_gen ul li a:hover','background,padding_top,padding_bottom,padding_left,padding_right,margin_top,margin_bottom,margin_left,margin_right,font_family,font_size,font_weight,font_color,text_shadow,line_height,letter_spacing,italics_font,small_caps,text_underline,borders,box_shadow,outlines,radius_corner,transform','Style Hover Link','','When You Hover Over a Link with the cursor it wil change according to Any Styles set Here' );   
global_post_master.class.php:		$this->edit_styles_close($data,'blog_data5','.'.$this->dataCss.' .nav_gen li.active a','background,padding_top,padding_bottom,padding_left,padding_right,margin_top,margin_bottom,margin_left,margin_right,font_family,font_size,font_weight,font_color,text_shadow,line_height,letter_spacing,italics_font,small_caps,text_underline,borders,box_shadow,outlines,radius_corner,transform','Style the Active Link','','An Active Link is the Particluar Link to the Current Page and its optionaly styled here');   
global_post_master.class.php:		$this->edit_styles_close($data,'blog_data7','.'.$this->dataCss.' .nav_gen ul:hover ul,.'.$this->dataCss.' .nav_gen ul ul','background,padding_top,padding_bottom,padding_left,padding_right,margin_top,margin_bottom,margin_left,margin_right,borders,box_shadow,outlines,radius_corner,transform','Style the Sub Menu Hover Panel','','If you have optionally made sub menus that can be styled the dropdown Panel which contains the dropdown menu links');   
global_post_master.class.php:	if (!Sys::Quietmode&&($this->clone_local_style||!$this->is_clone)){#    PROCEEd FOr NORMAL
global_post_master.class.php:		$this->mod_spacing($data.'_blog_tiny_data1_arrayed['.$nav_link_width_index.']',$current_link_width,44,320,1,'px','none');
global_post_master.class.php:		printer::alertx('<p class=" '.$this->column_lev_color.'" title="Lengthen you Sub Menu Navigation Link Width independently of the Main Links Here!" >Set Width For Sub Menu Links Only Here <span class="info">More Info</span></p>');
global_post_master.class.php:		$this->mod_spacing($data.'_blog_tiny_data1_arrayed['.$nav_sub_link_width_index.']',$current_link_width,44,320,1,'px','none');
global_post_master.class.php:		echo '<div class="fsminfo editbackground  editfont  '.$this->column_lev_color.' floatleft"><!--Link Height-->';
global_post_master.class.php:		$this->mod_spacing($data.'_blog_tiny_data1_arrayed['.$nav_link_height_index.']',$current_link_height,24,101,1,'px','none'); 
global_post_master.class.php:		$this->submit_button(); 
global_post_master.class.php:		$this->show_close('Detailed Link Area');//<!--End Show More Edit Nav-->';
global_post_master.class.php:		echo'<p class="button'.$this->column_lev_color.' '.$this->column_lev_color.' editbackground  editfont editcolor floatleft  shadowoff"> <a class="linkcolorinherit" href="navigation_edit_page.php?table_ref='.$this->pagename.'&amp;passnavclass='.$pass_nav_class.'&amp;data='.$data.'&amp;style='.$menutype.$datainc.'&amp;menuid='.$dir_menu_id.'&amp;postreturn='.Sys::Self.'&amp;pgtbn='.$this->pagename.'&amp;css='.$this->roots.Cfg::Style_dir.$this->pagename.'">Add Remove &amp; Edit Links for this Menu</a></p>';
global_post_master.class.php:     $pb=(empty($this->{$data.'_blog_data4_arrayed'}[$this->padding_bottom_index]))?0:$this->{$data.'_blog_data4_arrayed'}[$this->padding_bottom_index];
global_post_master.class.php:	$pt=(empty($this->{$data.'_blog_data4_arrayed'}[$this->padding_top_index]))?0:$this->{$data.'_blog_data4_arrayed'}[$this->padding_top_index];
global_post_master.class.php:	$bp_arr=$this->page_break_arr;
global_post_master.class.php:	$this->navcss.='
global_post_master.class.php:		if ($this->grid_width_chosen_arr['max'.$bp_arr[0]]>200)
global_post_master.class.php:		$this->navcss.='
global_post_master.class.php:		.'.$this->dataCss.' .nav_gen UL.top-level>LI>A {  max-width:200px;}
global_post_master.class.php:		$this->navcss.='
global_post_master.class.php:		.'.$this->dataCss.' .nav_gen UL.top-level>LI>A {display:block;  width:100%; }
global_post_master.class.php:		.'.$this->dataCss.' .nav_gen UL.top-level>LI {display:block;  width:95%;margin:0 auto; }/*background tweak prevents menu overflow */
global_post_master.class.php:		.'.$this->dataCss.' .nav_gen UL.top-level>LI.show_icon {display:none;}
global_post_master.class.php:	$this->navcss.='}
global_post_master.class.php:		$this->navcss.='
global_post_master.class.php:			if (isset($this->grid_width_chosen_arr)&&$this->grid_width_chosen_arr[$bp]>200) 
global_post_master.class.php:				$this->navcss.='
global_post_master.class.php:				.'.$this->dataCss.' .nav_gen UL.top-level>LI>A {  max-width:200px;}
global_post_master.class.php:			$this->navcss.='
global_post_master.class.php:			.'.$this->dataCss.' .nav_gen UL.top-level>LI>A {display:block; width:100%; }
global_post_master.class.php:			.'.$this->dataCss.' .nav_gen UL.top-level>LI {display:block; width:95%; }/*background tweak prevents menu overflow*/
global_post_master.class.php:			.'.$this->dataCss.' .nav_gen UL.top-level>LI.show_icon {display:none;}
global_post_master.class.php:		$this->navcss.='}';
global_post_master.class.php:          $this->navcss.='
global_post_master.class.php:     .'.$this->dataCss.' .nav_gen UL.top-level.menuRespond{
global_post_master.class.php:          $this->navcss.='
global_post_master.class.php:     .'.$this->dataCss.' .nav_gen UL.top-level.menuRespond{
global_post_master.class.php:          $this->navcss.='
global_post_master.class.php:     .'.$this->dataCss.' .nav_gen UL.top-level.menuRespond{
global_post_master.class.php:     $this->navcss.= '
global_post_master.class.php:.'.$this->dataCss.' .show_icon{
global_post_master.class.php:.'.$this->dataCss.' .bar1,.'.$this->dataCss.' .bar2,.'.$this->dataCss.' .bar3{ 
global_post_master.class.php:.'.$this->dataCss.' .nav_gen UL.top-level>LI>A {'.$nav_link_width.$nav_link_height.'} 
global_post_master.class.php:/*.'.$this->dataCss.'.hover .nav_gen  UL UL {'.$nav_drop_shift.'}  */ 
global_post_master.class.php:.'.$this->dataCss.' .nav_gen UL UL A { '.$nav_sub_link_width.'height:auto; } 
global_post_master.class.php:  .'.$this->dataCss.'.horiz .nav_gen ul.top-level li,.vert .nav_gen ul.top-level li,.nav_gen ul.top-level li {display: none;}
global_post_master.class.php:    .'.$this->dataCss.'.horiz .nav_gen ul.top-level li.show_icon,.vert .nav_gen ul.top-level li.show_icon,.nav_gen ul.top-level li.show_icon {
global_post_master.class.php:.'.$this->dataCss.' .show_arrow {display:none;}
global_post_master.class.php:#'.$this->dataCss.'{ width:auto; background-color:transparent;background-image:none;border-width:0;box-shadow:none;padding:0;margin:0}
global_post_master.class.php:.'.$this->dataCss.'.hover  .nav_gen UL LI {display: block; vertical-align: top; position:static; VISIBILITY: visible } 
global_post_master.class.php:.'.$this->dataCss.'.hover  .nav_gen UL UL {display: block; vertical-align: top; position:static; VISIBILITY: visible }  
global_post_master.class.php:.'.$this->dataCss.'.hover   .nav_gen  ul.sub-level,.display .nav_gen  UL UL LI  {margin-right:auto; margin-left:auto; display:block;}
global_post_master.class.php:   .'.$this->dataCss.' {position: relative; 
global_post_master.class.php:  .'.$this->dataCss.' ul.top-level.menuRespond li.show_icon {
global_post_master.class.php: .'.$this->dataCss.'.horiz .nav_gen ul.top-level.transitionEase li,.vert .nav_gen ul.top-level li,.nav_gen ul.top-level.transitionEase li {display: block;}
global_post_master.class.php:  .'.$this->dataCss.'.horiz .nav_gen ul.top-level.menuRespond li,.vert .nav_gen ul.top-level.menuRespond li,.nav_gen ul.top-level.menuRespond li{
global_post_master.class.php:	(Sys::Deltatime)&&$this->deltatime->delta_log('End of '.__LINE__.' @ '.__method__.'  ');
global_post_master.class.php:     ($this->edit&&$this->overlapbutton)&&$this->overlapbutton();
global_post_master.class.php:	$cols=(!empty($this->current_net_width))?process_data::width_to_col($this->current_net_width,$this->current_font_px):$columns; 
global_post_master.class.php:	$display_editor=($this->blog_options[$this->blog_editor_use_index]==='use_editor')?'enableTiny ':'divTextArea';
global_post_master.class.php:	$rowlength=($cols<3)?3:process_data::row_length($this->blog_text,$cols); 
global_post_master.class.php:	$this->edit_styles_open();
global_post_master.class.php:     ($this->edit)&&    
global_post_master.class.php:			$this->blog_options($data,$this->blog_table);
global_post_master.class.php:	 if (!empty($this->blog_text)){
global_post_master.class.php:		if (!$this->edit){
global_post_master.class.php:			echo process_data::clean_break($this->blog_text);
global_post_master.class.php:		elseif($this->is_clone&&!$this->clone_local_data)echo process_data::clean_break($this->blog_text);
global_post_master.class.php:	if ($this->edit&&(!$this->is_clone||$this->clone_local_data)){ 
global_post_master.class.php:		$print=($this->blog_options[$this->blog_editor_use_index]==='use_editor')?'':
global_post_master.class.php:		'<div class="'.$this->column_lev_color.' floatleft cursor smallest editbackground  editfont shadowoff rad3 button'.$this->column_lev_color.'" onclick="edit_Proc.enableTiny(this,\''.$data.'_blog_text\',\'divTextArea\');">Use Tiny</div>';
global_post_master.class.php:		$this->blog_text=(strlen($this->blog_text)<2||$this->blog_text==='&nbsp;')?'Enter text here':$this->blog_text;
global_post_master.class.php:		echo'<div id="'.$data.'_blog_text" class="'.$display_editor.' " >'.process_data::clean_break($this->blog_text).'</div>';// show initial non text area non editor text !
global_post_master.class.php:		$blog_text=($this->blog_options[$this->blog_editor_use_index]==='use_editor')?process_data::textarea_validate($this->blog_text):process_data::textarea_validate(process_data::remove_html_break($this->blog_text));
global_post_master.class.php:		 <textarea style="background:inherit; display: none; width:100%"  id="'.$data.'_blog_text_textarea"   class="scrollit '.$this->dataCss.'" name="'.$data.'_blog_text" rows="'.$rowlength.'" cols="'.$cols.'" onkeyup="gen_Proc.autoGrowFieldScroll(this);">' .$blog_text.'</textarea>';
global_post_master.class.php:	$type=$this->blog_type;
global_post_master.class.php:	$global_field=($this->blog_global_style==='global')?',.'.$this->col_dataCss.' > .'.$type.',.'.$this->col_dataCss.' >fieldset>.'.$type:'';
global_post_master.class.php:	$globalmsg=($this->blog_global_style==='global')?' Global Style':'';
global_post_master.class.php:	$this->edit_styles_close($data,'blog_style','.'.$this->dataCss.'.'.$type.$global_field, $style_list ,$this->styler_blog_instructions. 'Post#'.$this->blog_order_mod.' Col#'.$this->column_order_array[$this->column_level].$globalmsg,''); 
global_post_master.class.php:      ($this->edit&&$this->overlapbutton)&&$this->overlapbutton();
javascript.class.php:		$this->$var(); $this->javascript.="\n";
javascript.class.php:	$this->javascript.=$append_script;
javascript.class.php:		$this->javascript_return="\n\r".
javascript.class.php:		$this->javascript."\n\r". '//]]>'."\n\r".'</script>'; 
javascript.class.php:	file_put_contents(Cfg_loc::Root_dir.Cfg::Script_dir.$file_extension.'scripts.js', $this->javascript); 
javascript.class.php:     $this->javascript.= <<<EOD
javascript.class.php:$this->javascript.= <<<EOD
javascript.class.php:    $this->javascript.= <<<EOD
javascript.class.php:$this->javascript.= <<<EOD
javascript.class.php:$this->javascript.= <<<EOD
javascript.class.php:    $this->javascript.= <<<EOD
javascript.class.php:    $this->javascript.= <<<EOD
javascript.class.php:    $this->javascript.= <<<EOD
javascript.class.php:    $this->javascript.= <<<EOD
javascript.class.php:    $this->javascript.= <<<EOD
javascript.class.php:    $this->javascript.= <<<EOD
javascript.class.php:    $this->javascript.= <<<EOD
javascript.class.php:    $this->javascript.= <<<EOD
javascript.class.php:$this->javascript.= <<<EOD
javascript.class.php:$this->javascript.= <<<EOD
mail.class.php:	$this->OS=$usr->get('OS');
mail.class.php:	$this->OSB="OS and browser: $this->OS";
mail.class.php:	$this->TheIp=$usr->get('ip');
mail.class.php:	$this->ip=$_SERVER['REMOTE_ADDR']?:($_SERVER['HTTP_X_FORWARDED_FOR']?:$_SERVER['HTTP_CLIENT_IP']);
mail.class.php:	$this->user_info=$usr->user_info();
mail.class.php:	$usr=users::instance();#this->usr will be referred to in contact master!
mail.class.php:	$usr=users::instance();#this->usr will be referred to in contact master!
mail.class.php:	if ($this->printmaildata)  echo printer::print_wordwrap($vars);   
mail_exception.class.php:     $message= 'mail exception occureed '. date("dMYHis"). NL."url is: ".request::return_full_url().NL."Message: " .NL. $this->getMessage() .NL. "File: " . $this->getFile()
mail_exception.class.php:	  .NL."Line: " . $this->getLine();
mysql.class.php:          $this->dbname=$dbname;
mysql.class.php:          $this->link=mysqli_connect(Cfg::Dbhost,$Dbuser,$Dbpass, $dbname); 
mysql.class.php:          return $this->link;
mysql.class.php:	$value = mysqli_real_escape_string($this->link, $value);
mysql.class.php:	$this->link=mysqli_connect('localhost',$Dbuser,$Dbpass); #make general connection to create database.... 
mysql.class.php:	return $this->link;
mysql.class.php:	return $this->link->prepare($query);
mysql.class.php:     $this->dbname=$dbname;
mysql.class.php:     $selected=$this->link->select_db($dbname);
mysql.class.php:     $r=$this->link->query($q);//if (strpos(strtolower($q),'update'))echo NL.'q: '.$q.' *** '.$method.$line.$file;  
mysql.class.php:     $check=$this->affected_rows();
mysql.class.php:          mail::alert('No affected rows in '.Sys::Self." using query $q in $this->dbname".NL. "info.: $method $line $file");
mysql.class.php:          if (Sys::Debug)echo '<p style="font-weight: bold; color: #'.Cfg::RedAlert_color.';font_size: 1.4em;">No affected rows in '.Sys::Self.' using '.$q.' in '.$this->dbname.NL. $file.$line.'</p>';
mysql.class.php:     return  $this->query($q);				 
mysql.class.php:     $check=$this->link->affected_rows;
mysql.class.php:     $check=$this->link->affected_rows;
mysql.class.php:     $check=$this->link->affected_rows;
mysql.class.php:	$this->cols=array();
mysql.class.php:			$this->cols[]= $val->name;
mysql.class.php:     $this->field_count=count($this->cols);  
mysql.class.php:     return $this->cols;
mysql.class.php:     $r=$this->query($q,__LINE__,false);
mysql.class.php:     While($rows=$this->fetch_row($r,__LINE__)){ 
mysql.class.php:          $this->query($q,__LINE__,false);
mysql.class.php:    mysqli_real_escape_string($this->link, $value);
mysql.class.php:     $this->dbconnect($db1);  
mysql.class.php:     $this->link = $this->dbconnect($db2);
mysql.class.php:     $this->query($q);
mysql.class.php:    $this->add_array=$new_add_array;
mysql.class.php:    foreach ($this->add_array  as $this->var){if (Sys::Debug) echo "<p style=\"font-size: 1.3em; color: green;\">   $q     $this->dbname</p>";
mysql.class.php:    $this->build_update($this->var, $q); }  
mysql.class.php:    $this->dbconnect($var);
mysql.class.php:    $r=$this->query($q,$line,$alert);  
mysql.class.php:     if  (Sys::Debug) echo " <br>\n q=$q <br> dbase=$this->dbname...";
mysql.class.php:     $r=$this->query($q);
mysql.class.php:     if (!$this->affected_rows()){
mysql.class.php:          echo '<p style="font-weight: bold; font-size: 1.4em; color: #C00">Update failure using '. $this->dbname.'
mysql.class.php:	   $this-> dbconnect($dbname);
mysql.class.php:     $rxx = $this->query($q,'',false);
mysql.class.php:     $check=$this->affected_rows();
mysql.class.php:		$this->field_inc=$this->pic_ord=0;
mysql.class.php:		$this->fieldmax=0;
mysql.class.php:		$this->countnum=0;
mysql.class.php:     $row = $this->fetch_assoc($rxx); if (Sys::Debug)echo 'field max is '.$row['fieldmax']. "and count is ".$row['countnum'];
mysql.class.php:     $this->field_inc=$row['fieldmax']+1;  
mysql.class.php:     $this->pic_ord=$row['fieldmax']+1;
mysql.class.php:     $this->fieldmax=$row['fieldmax'];
mysql.class.php:     $this->countnum=$row['countnum'];
mysql.class.php:     return  $this->countnum;
mysql.class.php:    $q=$this->select($table,'COUNT('.$column.')',$where);  
mysql.class.php:    $q=$this->fetch_row($q);
mysql.class.php:     return @mysqli_close($this->link);
mysql.class.php:	if  (isset($this->$vname)){
mysql.class.php:		return $this->$vname;
navigate.class.php:	$this->automate_menu($dir_menu_id,$style,$nav_return);
navigate.class.php:	$this->edit=true;
navigate.class.php:	$nav_class=$this->automate_menu($dir_menu_id,$style,false);
navigate.class.php:	$this->util_menu_id=$dir_menu_id;//used in navigation_edit 
navigate.class.php:	($this->edit&&$nav_return)&&$this->return_url($this->pagename); 
navigate.class.php:	$this->auto_nav_data($dir_menu_id,$nav_class); 
navigate.class.php:	$reorder=($this->edit)?Cfg::Edit_gall_ext:''; //add to gallery edit menu's
navigate.class.php:	echo '<ul id="ulTop" class="top-level '.$this->nav_animate.'">';
navigate.class.php:			$this->dir_ref=$dir_ref;
navigate.class.php:			$this->de=$dir_external;
navigate.class.php:			if ($this->edit&&$dir_external)continue;
navigate.class.php:				$this->nav_single($dir_filename,$dir_title,$dir_menu_opts,$dir_external,true,false,$aria);
navigate.class.php:				$this->nav_single($dir_filename,$dir_title,$dir_menu_opts,$dir_external,false,true,false);
navigate.class.php:				($this->nav_repeat_submenu)&&$this->nav_single($dir_filename,$dir_title,$dir_menu_opts,$dir_external,true,false,$aria); 
navigate.class.php:     if (!$this->no_icon&&!Sys::Edit){
navigate.class.php:          <div class="aShow cursor" title="show menu" onclick="gen_Proc.toggleClass(\'#'.$this->nav_post_class.' #ulTop\',\'menuRespond\',\'menuRespond2\',\'transitionEase\',1000); return false;"><p class="bar1"></p>
navigate.class.php:	$activeclass= (strpos(Sys::Self,'/'.$dir_filename.$this->ext)!==false)?' class="active"':'';
navigate.class.php:	$ext=($nav_add_url)?'':$this->ext; 
navigate.class.php:	$href=(Sys::Pass_class&&!Sys::Viewdb)?Cfg::Pass_class_page.'?returnpass='.Sys::Returnpass.'&amp;tbn='.$this->dir_ref:$dir_filename.$ext.$this->getnav;
navigate.class.php:     $edit='';//($this->edit)?'EDIT ':'';
navigate.class.php:     $name=($this->force_caps)?str_replace('&NBSP;','&nbsp;',strtoupper($name)):$name;
navigate.class.php:	if($nav_add_url&&$this->edit)return;
navigate.class.php:	$msg=(!empty($show_all))?'<span class="info bold" title="Will Additionally Show Non-Published Posts including this one on Your Web Page View!">Preview All</span>':' Web '.$this->view_br.'Page mode'; 
navigate.class.php:	($this->view_webpage)&&print '
navigate.class.php:    $this->$reference=$vname;
navigation_edit.php:	static $show_more=0; $show_more++; //echo 'show more is '.$this->show_more; 
navigation_edit.php:	//$border=($border)?' fs2'.$this->column_lev_color:'';
passclass.class.php:    $this->tablename=$tablename;
photo_batch_resize.class.php:     if(isset($dbname))$this->dbname=$dbname;
photo_batch_resize.class.php:     $this->NL=NL;
photo_batch_resize.class.php:     $this->photo_flag=true;
photo_batch_resize.class.php:     $this->mailinst=mail::instance(); 
photo_batch_resize.class.php:     $this->mysqlinst = mysql::instance();
photo_batch_resize.class.php:     $this->pic_quality=100;
photo_batch_resize.class.php:     $this->source_dir='uploads/';
photo_batch_resize.class.php:     $this->output_dir='temp/';
photo_batch_resize.class.php:     $this->tables_used='';
photo_batch_resize.class.php:     $this->update_db=false;
photo_batch_resize.class.php:     $this->watermark=null;
photo_batch_resize.class.php:     $this->tablename='blank';
photo_batch_resize.class.php:     $this->pic_plus=0;
photo_batch_resize.class.php:     $this->set_width=0;
photo_batch_resize.class.php:     $this->set_height=0;
photo_batch_resize.class.php:     $this->basename_ext='';
photo_batch_resize.class.php:          if (isset($_POST['pic_quality']))$this->pic_quality=$_POST['pic_quality'];
photo_batch_resize.class.php:          if (isset($_POST['source_dir']))$this->source_dir= $_POST['source_dir'];
photo_batch_resize.class.php:          if (isset($_POST['output_dir'])) $this->output_dir=$_POST['output_dir'];
photo_batch_resize.class.php:          if (isset($_POST['tables_used='])) $this->tables_used=$_POST['tables_used='];
photo_batch_resize.class.php:          if (isset($_POST['update_db'])) $this->update_db=$_POST['update_db'];
photo_batch_resize.class.php:          if (isset($_POST['watermark'])) $this->watermark=$_POST['watermark'];
photo_batch_resize.class.php:          if (isset($_POST['tablename']))$this->tablename=$_POST['tablename'];
photo_batch_resize.class.php:          if (isset($_POST['pic_plus'])) $this->pic_plus=$_POST['pic_plus'];
photo_batch_resize.class.php:          if (isset($_POST['set_width'])) $this->set_width=$_POST['set_width'];
photo_batch_resize.class.php:          if (isset($_POST['set_height'])) $this->set_height=$_POST['set_height'];
photo_batch_resize.class.php:          if (isset($_POST['basename_ext'])) $this->basename_ext=$_POST['basename_ext'];
photo_batch_resize.class.php:     $this->process_resize();
photo_batch_resize.class.php:     value="'.$this->source_dir.'"
photo_batch_resize.class.php:     value="'.$this->output_dir.'"   size="50" maxlength="50" ></p> 
photo_batch_resize.class.php:        value="'.$this->basename_ext.'"    size="50" maxlength="50" ></p> 
photo_batch_resize.class.php:     value="'.$this->pic_plus.'" 
photo_batch_resize.class.php:     value="'.$this->set_width.'" 
photo_batch_resize.class.php:     value="'.$this->set_height.'" 
photo_batch_resize.class.php:     <p class="ramana">Change the final default picture quality: <input type="text" name="pic_quality" value = "'.$this->pic_quality.'" size="3" maxlength="3" ></p>
photo_batch_resize.class.php:     $this->table_array=check_data::return_galleries(__METHOD__,__LINE__,__FILE__) ;#use all tables false=no skipping
photo_batch_resize.class.php:     $this->pic_quality=(isset($_POST['pic_quality'])&&$_POST['pic_quality']>4)?$_POST['pic_quality']:90;
photo_batch_resize.class.php:     if (isset($_POST['update_db'])&& $_POST['update_db']==1)  $this->update_db=true;
photo_batch_resize.class.php:     $this->output_dir=  rtrim($_POST['output_dir'], "/") ."/"; 
photo_batch_resize.class.php:     if (isset($_POST['source_dir'])&&  is_dir($_POST['source_dir']))$this->source_dir= rtrim( $_POST['source_dir'], "/") ."/"; 
photo_batch_resize.class.php:     if (isset($_POST['pic_plus'])&&  $_POST['pic_plus']>1)$this->pic_plus=$_POST['pic_plus'];
photo_batch_resize.class.php:     if (isset($_POST['set_width'])&& $_POST['set_width']>1)$this->set_width=$_POST['set_width'];
photo_batch_resize.class.php:     if (isset($_POST['set_height'])&& $_POST['set_height']>1)$this->set_height=$_POST['set_height'];
photo_batch_resize.class.php:     if (isset($_POST['basename_ext'])&& $_POST['basename_ext']!='')$this->basename_ext=$_POST['basename_ext'];
photo_batch_resize.class.php:     if ($this->pic_plus<5&&$this->set_width<5&&$this->set_height<5){
photo_batch_resize.class.php:     if (isset($_POST['use_watermark'])&& !empty($_POST['watermark']))$this->watermark=$_POST['watermark'];
photo_batch_resize.class.php:	  $this->NL   water mark used is  $this->watermark  
photo_batch_resize.class.php:       $this->NL source folder is $this->source_dir
photo_batch_resize.class.php:	  $this->NL output folder is $this->output_dir
photo_batch_resize.class.php:	  $this->NL dbname is   $this->dbname
photo_batch_resize.class.php:	  $this->NL quality is $this->pic_quality
photo_batch_resize.class.php:	  $this->NL pic width+height is $this->pic_plus
photo_batch_resize.class.php:	  $this->NL width is $this->set_width
photo_batch_resize.class.php:	  $this->NL height is $this->set_height
photo_batch_resize.class.php:	  $this->NL basename ext  is $this->basename_ext
photo_batch_resize.class.php:	  $this->NL update database with height and width is: $this->update_db $this->NL 
photo_batch_resize.class.php:	   $this->dir_parse_files();
photo_batch_resize.class.php:         $this->tablename=$_POST['tablename'];
photo_batch_resize.class.php:         $this->table_parse();
photo_batch_resize.class.php:          foreach ($this->table_array as $this->tablename){
photo_batch_resize.class.php:              $this->tables_used.=NL.$this->tablename;
photo_batch_resize.class.php:              $this->table_parse();
photo_batch_resize.class.php:     echo NL."tables used: $this->NL $this->tables_used";
photo_batch_resize.class.php:     echo 'print directory: '. $this->output_dir;
photo_batch_resize.class.php:     $dir_list=printer::dir_list($this->output_dir,true);
photo_batch_resize.class.php:         echo 'print directory: '. $this->source_dir;
photo_batch_resize.class.php:         $dir_list=printer::dir_list($this->source_dir,true);
photo_batch_resize.class.php:    $dir = rtrim($this->source_dir, "/") ."/";   
photo_batch_resize.class.php:			 $this->file=$file_handle;
photo_batch_resize.class.php:			 $this->photo_resize();
photo_batch_resize.class.php:     $this->mysqlinst->dbconnect($this->dbname);
photo_batch_resize.class.php:     $q = "SELECT  bigname,  pic_order FROM $this->tablename  ORDER BY pic_order ASC";
photo_batch_resize.class.php:     $r=$this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
photo_batch_resize.class.php:     if (!($this->mysqlinst->affected_rows())) {
photo_batch_resize.class.php:          echo 'Invalid data retreval for tablename is '.$this->tableanme;
photo_batch_resize.class.php:     while (list($this->file, $this->pic_order)=$this->mysqlinst->fetch_row($r,__LINE__)){
photo_batch_resize.class.php:         if (!is_file($this->source_dir.$this->file)){
photo_batch_resize.class.php:             echo NL. "the file $this->source_dir$this->file was not found";
photo_batch_resize.class.php:          $this->photo_resize(true); 
photo_batch_resize.class.php:	$this->output_dir='gailmailresized/';
photo_batch_resize.class.php:	$this->source_dir='gail_large/';
photo_batch_resize.class.php:	$this->pic_quality=95;
photo_batch_resize.class.php:	$this->set_height=0;
photo_batch_resize.class.php:	$this->pic_plus=0;
photo_batch_resize.class.php:	$this->watermark='';
photo_batch_resize.class.php:          if(!is_file($this->source_dir.$fn)){
photo_batch_resize.class.php:               echo $this->source_dir.$fn.' not found' ;
photo_batch_resize.class.php:              $this->basename_ext=$this->set_width=$width;
photo_batch_resize.class.php:              $this->file=$fn;
photo_batch_resize.class.php:              $this->photo_resize();
photo_batch_resize.class.php:     (!is_dir($this->output_dir))&&mkdir($this->output_dir,0770);
photo_batch_resize.class.php:     $this->output_dir=trim($this->output_dir,'/').'/';
photo_batch_resize.class.php:     $this->source_dir=trim($this->source_dir,'/').'/';
photo_batch_resize.class.php:     list($this->width,$this->height,$this->file)=$resize->image_resize($this->file,$this->set_width, $this->set_height, $this->pic_plus,$this->source_dir, $this->output_dir, 'file', $this->watermark, $this->pic_quality); 
photo_batch_resize.class.php:     if ($this->basename_ext!=''){
photo_batch_resize.class.php:          $path_parts = pathinfo($this->file);
photo_batch_resize.class.php:          $newfile = $path_parts['filename'].$this->basename_ext.'.'. $path_parts['extension'];
photo_batch_resize.class.php:          rename($this->output_dir.$this->file,$this->output_dir. $newfile);
photo_batch_resize.class.php:     if ($flag&&$this->update_db){ 
photo_batch_resize.class.php:          $q="update $this->tablename SET width=$this->width, height=$this->height where bigname='$this->file' and pic_order=$this->pic_order";
photo_batch_resize.class.php:          $this->mysqlinst->query($q,__METHOD__,__LINE__,__FILE__,true);
process_data.class.php:     $back_index=$style_array[$this->background_index]; 
render_html.class.php:     $return_arr=explode(',',$this->return);
render_html.class.php:     $this->deltatime=time::instance();
render_html.class.php:     $this->deltatime->delta_log('render_html initiate');
render_html.class.php:     foreach ($this->allow_array as $owner){  
render_html.class.php:          $usr->delta_log($this->deltatime->return_delta_log());
render_html.class.php:          $usr->diff_request_ini=$this->deltatime->diff_request_ini;
search.class.php:	 list ($pass_arr,$array)=forms::form_process($array,$this->default_arr);
search.class.php:<p>view last log replace file<a target="_blank" href="'.$this->log_html.'">here</a></p> 
search.class.php:<p>view full log replace file<a target="_blank" href="'.$this->log_txt.'">here</a></p>
search_replace.class.php:	$this->test_dir=Sys::Base_dir.$this->test_dir;
search_replace.class.php:		$this->$key=$var;
search_replace.class.php:	$this->searchstring_low=($this->case)?trim($this->searchstring):strtolower(trim($this->searchstring));
search_replace.class.php:	$this->find_file_lower=strtolower($this->find_file);
search_replace.class.php:	$ignore_list=(!is_array($this->ignore_file))?explode(',',$this->ignore_file):$this->ignore_file; 
search_replace.class.php:	$this->ignore_file=arrayhandler::arraytolower($ignore_list); 
search_replace.class.php:	$block=(!empty($this->block_temp))?$this->block_temp:Cfg::Exclude; //$block='';
search_replace.class.php:	$this->block_dir=arrayhandler::arraytolower($block_arr); 
search_replace.class.php:	   if ($this->include_php==true){
search_replace.class.php:	   self::search($this->include_dir);   
search_replace.class.php:    self::search($this->dir);
search_replace.class.php:if (isset($this->html)){echo 'html log file created';
search_replace.class.php:	$this->html.='</div></body></html>';
search_replace.class.php:	file_put_contents($this->log_html,$this->html);
search_replace.class.php:	if ($this->regenerate_test){
search_replace.class.php:			if (in_array(strtolower($file_handle), $this->ignore_file)) {  echo NL. 'ignored: '.$this->ignore_file;  
search_replace.class.php:			if (in_array(strtolower($file_handle), $this->block_dir)) {    
search_replace.class.php:				//(empty($this->rename_file))&&!empty($this->find_file)&&self::find_fn($dir.$file_handle);#report if directory matches filename
search_replace.class.php:				(!empty($this->find_file))&&self::find_fn($dir.$file_handle);//search for directory also
search_replace.class.php:				(!empty($this->subdirectory))&& $this->search($dir. $file_handle);
search_replace.class.php:			else if (!empty($this->cross_ref)){
search_replace.class.php:			else if (!empty($this->replace_space)){
search_replace.class.php:			else if (!empty($this->find_file)){
search_replace.class.php:			else if (!empty($this->delete_file)){
search_replace.class.php:			else if (!empty($this->cleanup)){ 
search_replace.class.php:			else if (!empty($this->clear_mylog)){ 
search_replace.class.php:			else if ($this->replace_it==""&&!empty($this->searchstring)) {
search_replace.class.php:			else if (!empty($this->replace_it)) { 
search_replace.class.php:	if (empty($this->extension))exit('you must specify an extension');
search_replace.class.php:	if (strpos($file_handle, $this->extension)=== false)return;#if empty use all filetypes
search_replace.class.php:	 $array=explode(',',strtolower(str_replace(' ','',$this->cross_ref)));
search_replace.class.php:		$this->searchstring_low=trim($search);
search_replace.class.php:	if (!empty($this->delete_file)&&strpos($file_handle, $this->delete_file)!==false){
search_replace.class.php:	   if (strpos($file_handle, $this->find_file_lower)!==false)   
search_replace.class.php:   if (strpos($file_handle, $this->find_file)!==false){  
search_replace.class.php:	   if (!empty($this->rename_file)){
search_replace.class.php:		  $new_name=str_replace($this->find_file,$this->rename_file,$file_handle);
search_replace.class.php:		  echo $this->find_file.' is has been renamed to '.$new_name;
search_replace.class.php:	//if (empty($this->extension))exit('you must specify an extension');
search_replace.class.php:	if (!empty($this->extension)&&strpos($file_handle, $this->extension)=== false)return;#if empty use all filetypes
search_replace.class.php:	 if ($this->searchstring[0]=='/'&& preg_match_all('/\//',$this->searchstring,$matches)>1) {
search_replace.class.php:	elseif ($this->searchstring_low[0]=='/')exit(NL.'need to modify program to begin search with / on non-preg query');
search_replace.class.php:	if ($this->case){
search_replace.class.php:	$pattern="/$this->searchstring_low/";  
search_replace.class.php:	$pattern_compress="/".preg_replace($sPattern, $sReplace,$this->searchstring_low)."/";
search_replace.class.php:		if (strpos($data[$line], $this->searchstring_low)!==false) {  
search_replace.class.php:		else if (strpos(str_replace(' ','',$data[$line]), str_replace(' ','',$this->searchstring_low))!==false) {  
search_replace.class.php:	//if (empty($this->extension))exit('you must specify an extension');
search_replace.class.php:	if (!empty($this->extension)&&strpos($file_handle, $this->extension)=== false)return;#if empty use all filetypes
search_replace.class.php:	$pattern="$this->searchstring";  
search_replace.class.php:	$pattern_compress=preg_replace($sPattern, $sReplace,$this->searchstring);
search_replace.class.php: 	 if ($this->searchstring[0]=='/'&& preg_match_all('/\//',$this->searchstring,$matches)>1) {
search_replace.class.php:	//if (empty($this->extension))exit('you must specify an extension');
search_replace.class.php:	if (!empty($this->extension)&&strpos($file_handle, $this->extension)=== false)return;#if empty use all filetypes
search_replace.class.php:	if (strpos($data, $this->searchstring) === false)return; 
search_replace.class.php:		if (strpos($data1[$line], $this->searchstring) !== false) {   
search_replace.class.php:	$log=NL.NL. "date is ".date("dMY-H-i-s"). NL. " filename is $file_handle ". NL."Written as $file_handle. $this->add_extension with add extension $this->add_extension".NL."replaced $this->searchstring with $this->replace_it in the following lines: ". $log_detail;
search_replace.class.php:	if (!($fp = fopen($this->log_txt, 'a'))) { 
search_replace.class.php:		if ($this->replace_button==true){#just a double check
search_replace.class.php:			if(!copy($this->log_txt,$this->log_rtf)) echo('backup copy logfile.txt failure');#create backup copy first
search_replace.class.php:			$file_handle=$file_handle.$this->add_extension;
search_replace.class.php:			$data=str_replace($this->searchstring,$this->replace_it,$data);  
search_replace.class.php:			$file_handle=$file_handle.$this->add_extension;
search_replace.class.php:			$html.= $log;  $this->html=$html;			
search_replace.class.php:	//if (empty($this->extension))exit('you must specify an extension');
search_replace.class.php:	if (!empty($this->extension)&&strpos($file_handle, $this->extension)=== false)return;#if empty use all filetypes
search_replace.class.php:	if (strpos($this->searchstring,'@@@')){  
search_replace.class.php:		$patternArray=explode('@@@',trim($this->searchstring,'/')); 
search_replace.class.php:		$replaceArray=explode('@@@',$this->replace_it);
search_replace.class.php:		$pattern=str_replace('@@@','',$this->searchstring); #use normal pattern...
search_replace.class.php:			if($this->replace_button&& preg_match($pattern,$data))$data=preg_replace($pattern,$final_replace,$data);# heres the meat of it for @@@
search_replace.class.php:		$pattern=$this->searchstring;
search_replace.class.php:		$final_replace=$this->replace_it;
search_replace.class.php:		if($this->replace_button&& preg_match($this->searchstring,$data)){ 
search_replace.class.php:			$pcount=preg_match_all($this->searchstring,$data,$matches);  
search_replace.class.php:			$data=preg_replace($this->searchstring,$this->replace_it,$data);
search_replace.class.php:			$pcount=preg_match_all($this->searchstring,$data,$matches);  
search_replace.class.php:	if(!$this->replace_button)return;  	 
search_replace.class.php:	NL."Written as $file_handle". $this->add_extension. 'and backedup as '.$file_handle. $this->add_extension.'.bac'.NL.
search_replace.class.php:	 if (!($fp = fopen($this->log_txt, 'a'))) {
search_replace.class.php:		if ($this->replace_button==true){echo "entered In preg replace button true";
search_replace.class.php:			if(!copy($this->log_txt,$this->log_rtf)) echo('backup copy logfile.txt failure');#create backup copy first
search_replace.class.php:			$file_handle=$file_handle.$this->add_extension;
search_replace.class.php:			$this->html=$html;		 	
search_replace.class.php:	if (substr($file_handle,-3)==$this->cleanup||substr($file_handle,-4)==$this->cleanup){
search_replace.class.php:	if ($this->clear_mylog&&strpos($file_handle,'mylog.txt')!==false){
search_replace.class.php:	if ($this->clear_mylog&&strpos($file_handle,'mylog.txt')!==false){
search_replace.class.php:	if (is_dir($this->test_dir)){
search_replace.class.php:		file_generate::rrmdir($this->test_dir);
search_replace.class.php:	echo NL. 'deleted the directory '.$this->test_dir;
search_replace.class.php:	file_generate::full_copy($this->include_dir,$this->test_dir);
search_replace.class.php:	echo NL. 'copied the master directory to '.$this->test_dir;
secure_login.class.php:	$this->login_type=$login_type;
secure_login.class.php:	$this->rc4 = new encrypt;//decode the hashed password
secure_login.class.php:	$this->mysqli= mysql::instance(); 
secure_login.class.php:	$this->dbc=$this->mysqli->dbconnect(); 
secure_login.class.php:	if ($this->login_type==='ownerAdmin'){  
secure_login.class.php:		if ($stmt=$this->mysqli->prepare("SELECT count(id) AS count_id  FROM members WHERE   login_type = ?")) { //  
secure_login.class.php:			$stmt->bind_param('s', $this->login_type); // Bind "user" to parameter.
secure_login.class.php:		$this->login_msg= 'This edit site requires a login user name and password!';
secure_login.class.php:	if ($stmt=$this->mysqli->prepare("SELECT salt FROM members WHERE login_type = ? AND username = ? LIMIT 1")) { 
secure_login.class.php:	if ($stmt=$this->mysqli->prepare("SELECT id, password  FROM members WHERE username = ? AND login_type = ?  LIMIT 1")) { //  
secure_login.class.php:		$stmt->bind_param('ss', $user,$this->login_type); // Bind "user" to parameter.
secure_login.class.php:		$db_password = hash('sha512', $this->rc4->endecrypt(Cfg::Encrypt_pass,$db_password,'de').$_SESSION[Cfg::Owner.'session_salt']); // nhashing with the session_salt created in the form rendering...
secure_login.class.php:				 $_SESSION[Cfg::Owner.'login_string'] = hash('sha512', $password.$ip_address.$user_browser.$this->login_type);
secure_login.class.php:				 if ($stmt=$this->mysqli->prepare("INSERT INTO login_attempting (user_id, time, salt,lockout) VALUES (?, '$now','".$_SESSION[Cfg::Owner.'logcheck']."','')")) {  
secure_login.class.php:					$this->mysqli->query($q,__METHOD__,__LINE__,__FILE__,false);
secure_login.class.php:               if ($stmt=$this->mysqli->prepare("INSERT INTO login_attempting (user_id, time, salt,lockout) VALUES ('1000', '$now','".$_SESSION[Cfg::Owner.'logcheck']."','')")) {    
secure_login.class.php:                   $this->mysqli->query($q,__METHOD__,__LINE__,__FILE__,false);
secure_login.class.php:		if ($stmt=$this->mysqli->prepare("SELECT password FROM members WHERE id = ? LIMIT 1")) { 
secure_login.class.php:				$login_check = hash('sha512', hash('sha512', $this->rc4->endecrypt(Cfg::Encrypt_pass,$password,'de').$_SESSION[Cfg::Owner.'session_salt']).$ip_address.$user_browser.$this->login_type);
secure_login.class.php:     $r=$this->mysqli->query($q,__METHOD__,__LINE__,__FILE__,false);
secure_login.class.php:     if ($this->mysqli->affected_rows()){ 
secure_login.class.php:          list($time)=$this->mysqli->fetch_row($r);
secure_login.class.php:     $r=$this->mysqli->query($q,__METHOD__,__LINE__,__FILE__,false); 
secure_login.class.php:     if ($this->mysqli->num_rows($r) > 5) {  
secure_login.class.php:          $this->mysqli->query($q,__METHOD__,__LINE__,__FILE__,false);
secure_login.class.php:		$q="SELECT count(username) AS count_user FROM members WHERE   login_type = '$this->login_type' LIMIT 1"; //
secure_login.class.php:		$r=$this->mysqli->query($q,__METHOD__,__LINE__,__FILE__,false);	 
secure_login.class.php:		if (!$this->mysqli->affected_rows()) {
secure_login.class.php:		$row=$this->mysqli->fetch_assoc($r,__LINE__);
secure_login.class.php:		$password = $this->rc4->endecrypt(Cfg::Encrypt_pass,$_POST['regp'],'en');  
secure_login.class.php:		$stmt =$this->dbc->stmt_init();
secure_login.class.php:			$stmt->bind_param('sssss',$this->login_type, $user, $email, $password, $_SESSION[Cfg::Owner.'salt']); 
secure_login.class.php:		//$this->mysqli->query("INSERT INTO members (login_type,username,email,password,salt) VALUES ('$this->login_type','$user', '$email','$password','$salt')");
secure_login.class.php:     $register_msg=($this->register)?'<a href="'.Sys::Self.'?registration">Or Register Here</a>':'';
secure_login.class.php:$this->login_msg 
server.class.php:	foreach($this->vars as $var) {
server.class.php:		$this->dbg('new',"checking $var");
server.class.php:			$this->dbg('new', "$var = ".$_SERVER[$var]);
server.class.php:				$this->dbg('new',"Server.new $var: $xip");
server.class.php:				if ($this->checkIP($var,trim($xip))) {
server.class.php:					$this->remote_addr_list[] = $xip;
server.class.php:     if (count($this->remote_addr_list)>1){
server.class.php:          $this->mode.='multi';
server.class.php:     if (empty($this->mode))$this->mode='normal';
server.class.php:     $this->dbg(__FUNCTION__,sprintf("checkIP %s[ %s ]",$src,$ip));
server.class.php:     foreach ($this->private_domains as $adx) {
server.class.php:			$this->mode.='priv-'.$ip.'-';
server.class.php:	$this->remote_array[$src]=$ip;  
server.class.php:	$this->remote_addr_src[] = $src;
server.class.php:	$this->remote_addr[] = $ip;
server.class.php:	if (count($this->remote_addr)==1)$this->ip=$ip;   
server.class.php:     echo sprintf($msgs['adx'],implode(',',$this->remote_addr)).NL;
server.class.php:     echo sprintf($msgs['src'],implode(',',$this->remote_addr_src)).NL;
server.class.php:     echo sprintf($msgs['lst'],implode(';',$this->remote_addr_list)).NL;
session.class.php:          $this->page_referrer_1= $_SESSION[Cfg::Owner."filename"];
session.class.php:               $this->page_referrer_2= $_SESSION[Cfg::Owner.'page_referrer_1'];
session.class.php:                    $this->page_referrer_3= $_SESSION[Cfg::Owner.'page_referrer_2'];
session.class.php:               $_SESSION[Cfg::Owner.'page_referrer_2'] =$this->page_referrer_2;
session.class.php:          $_SESSION[Cfg::Owner.'page_referrer_1'] =$this->page_referrer_1;
session.class.php:     $this->token = md5(uniqid(rand(), true));//microtime(); date("dMYHis");//
session.class.php:     $_SESSION[Cfg::Owner.'token'] =$this->sess_token= $this->token;  //make new token session for security form submissions
strictheader_obj.php:if ($this->meta_data)echo '
strictheader_obj.php:<meta name="keywords" content="'.$this->keywords.'">
strictheader_obj.php:<meta name="description" content="'. $this->metadescription . '">';
strictheader_obj.php:if ($this->edit) 
strictheader_obj.php: {echo '<title>Edit ' .$this->page_title .'</title>';  
strictheader_obj.php:   <title> '.$this->page_title .'</title>';} 
time.class.php:	$this->request_time=$_SERVER['REQUEST_TIME'];  
time.class.php:	$this->time_init=self::microtime_float();
time.class.php:	$this->diff_request_ini=$this->time_init-$this->request_time;
time.class.php:     $diff=self::microtime_float()-$this->time_init;
time.class.php:	$this->delta_log.="<br>\n deltatime post ".$funct.':'. self::delta();
time.class.php:	if  (isset($this->delta_log)){
time.class.php:          $msg=date("dMY-H-i-s").' diff request ini: ' .$this->diff_request_ini.'  logged times: '.          $this->delta_log;
transitionalheader_obj.php:<meta name="keywords" content="'.$this->keywords.'">
transitionalheader_obj.php:<meta name="description" content="'. $this->metadescription . '" >
transitionalheader_obj.php:if ($this->edit) 
transitionalheader_obj.php: {echo '<title>Edit ' .$this->page_title .'</title>';  
transitionalheader_obj.php:   <title> '.$this->page_title .'</title>';}
users.class.php:	$this->deltatimeinst=time::instance();
users.class.php:	$this->return_vars['remote_array']=array();
users.class.php:      $this->timestamp=time(); 
users.class.php:		$this->OS=$_SERVER['HTTP_USER_AGENT'];
users.class.php:	else $this->OS='user agent not found';	
users.class.php:		$this->refer=$_SERVER['HTTP_REFERER'];
users.class.php:		$this->http_accept=$_SERVER['HTTP_ACCEPT'];#change to $this->accept...
users.class.php:	 $this->url=request::return_full_url();
users.class.php:	$this->ip=(Sys::Web)?$this->ip:'local';
users.class.php:	$this->ip_src=(array_key_exists(0,$this->remote_addr_src))?$this->remote_addr_src[0]:'unk';
users.class.php:	$this->ip_array=arrayhandler::implodeMDA($this->remote_array);
users.class.php:	$this->mode=$this->mode;
users.class.php:	$this->owner=Cfg::Owner;
users.class.php:	$this->page=str_replace('.php','',substr_replace(Sys::Self,'',0,1));
users.class.php:	$this->getdate='local time of user@@@'. arrayhandler::implodeAssoc(getdate()).'@@@ and standardized time @@@'.arrayhandler::implodeAssoc(getdate(time()));  
users.class.php:	$this->date=date("dMY-H-i-s");
users.class.php:	$this->month=date("m");
users.class.php:	$this->day=date("d");
users.class.php:     if (!empty($this->ip)){
users.class.php:          $record =geoip_record_by_addr($gi,$this->ip);
users.class.php:		$this->country_code3=(!empty($record->country_code3))?$record->country_code3:$this->country_code3;
users.class.php:		$this->country=(!empty($record->country_name))?$record->country_name:'unknown';
users.class.php:		$this->region=(!empty($record->region))?$record->region:$this->region;
users.class.php:		$this->city=(!empty($record->city))?$record->city:$this->city;
users.class.php:		$this->continent=(!empty( $record->continent_code))?$record->continent_code:'unkown'; 
users.class.php:	$info="the users Identifying info  Operating System and Browser is :=>$this->OS \n  ip: $this->ip"; 
users.class.php:	$info.= "country: ". $this->country_code3." city: " .$this->city;  
users.class.php:	if  (isset($this->$vname)){
users.class.php:		return $this->$vname;
users.class.php:    $this->$vname=$reference;
users.class.php:	$this->delta_log=$log;
video_master.class.php:	$this->autostart=$autostart; 
video_master.class.php:     $this->mute=$mute;
video_master.class.php:     $this->loop=$loop;
video_master.class.php:     $this->cc=$cc;//hide close captions
video_master.class.php:     $this->controls= $controls; 
video_master.class.php:	$this->viddir=(!empty($viddir))?$viddir:Cfg_loc::Root_dir.Cfg::Vid_dir; //((Cfg_loc::Root_dir=='')?Sys::Javaroot.Cfg::Vid_dir:
video_master.class.php:	$this->vidname=$this->viddir.$vidname;
video_master.class.php:     $this->width=$width;
video_master.class.php:	$this->height=round($width/$aspect);
video_master.class.php:	$this->image=$image;
video_master.class.php:	$this->poster=(!empty($image))?' poster="'.$this->image.'"':' poster="" '; 
video_master.class.php:     if  (strpos($this->vidname, '.flv')){ 
video_master.class.php:		$this->flv();
video_master.class.php:	else if  (strpos($this->vidname, '.wmv')){
video_master.class.php:		$this->wmv();
video_master.class.php:	else if  (strpos($this->vidname, '.mov')){
video_master.class.php:		$this->mov4();
video_master.class.php:	else if  (strpos($this->vidname, '.mp4')){
video_master.class.php:		$this->mp4();
video_master.class.php:	else if (strpos($this->vidname, '.ogg')){
video_master.class.php:		$this->mov4();
video_master.class.php:	else if (strpos($this->vidname, '.m4v')){
video_master.class.php:		$this->m4v();
video_master.class.php:	else if (strpos($this->vidname, '.webm')){
video_master.class.php:		$this->webm();
video_master.class.php:	/*else if (strpos($this->vidname, 'youtube')){
video_master.class.php:          $this->vidname=$vidname;
video_master.class.php:		$this->yt_api();
video_master.class.php:          Mail::error('error in video class: fileytype not recognized: '.$this->vidname);
video_master.class.php:     $yt_id=str_replace('youtube','',$this->vidname);
video_master.class.php:     $ele_id=$this->viddir;//use viddir slot for this method
video_master.class.php:    width: $this->width,               // Player width (in px)
video_master.class.php:    height: $this->height,              // Player height (in px)
video_master.class.php:      autoplay: $this->autostart,        // Auto-play the video on load
video_master.class.php:      controls:1,// $this->controls,        // Show pause/play buttons in player
video_master.class.php:      loop: $this->loop,            // Run the video in a loop
video_master.class.php:      cc_load_policy: $this->cc, // Hide closed captions
video_master.class.php:	$controls=($this->controls)?' controls ': '';
video_master.class.php:     $loop=($this->loop)?' loop ': '';
video_master.class.php:     $mute=($this->mute)?' muted ' : '';
video_master.class.php:	$autostart=($this->autostart)?' autoplay ':'';
video_master.class.php:     echo '<video class="myvid" '.$controls.$mute.$autostart.$loop.' width="100%" '.$this->poster.' >
video_master.class.php:	<source src="'.$this->vidname.'" type="video/webm">
video_master.class.php:	$controls=($this->controls)?' controls ': '';
video_master.class.php:     $loop=($this->loop)?' loop ': '';
video_master.class.php:     $mute=($this->mute)?' muted ' : '';
video_master.class.php:	$autostart=($this->autostart)?' autoplay ':'';
video_master.class.php:     echo '<video class="myvid" '.$controls.$mute.$autostart.$loop.'width="100%" '.$this->poster.' >
video_master.class.php:	<source src="'.$this->vidname.'" type="video/mp4">
video_master.class.php:	$controls=($this->controls)?' controls ': '';
video_master.class.php:     $loop=($this->loop)?' loop ': '';
video_master.class.php:     $mute=($this->mute)?' muted ' : '';
video_master.class.php:	$autostart=($this->autostart)?' autoplay ':'';
video_master.class.php:     echo '<video class="myvid" '.$controls.$mute.$autostart.$loop.' width="100%" '.$this->poster.'" >
video_master.class.php:	<source src="'.$this->vidname.'" type="video/ogg">
video_master.class.php:     $controls=($this->controls)?' controls ': '';
video_master.class.php:     $loop=($this->loop)?' loop ': '';
video_master.class.php:     $mute=($this->mute)?' muted ' : '';
video_master.class.php:	$autostart=($this->autostart)?' autoplay ':'';
video_master.class.php:	$backupVid=str_replace('mp4','ogg',$this->vidname);
video_master.class.php:	$backupVid2=str_replace('mp4','webm',$this->vidname); 
video_master.class.php:<video class="myvid" '.$controls.$mute.$autostart.$loop.' width="100%" '.$this->poster.'> 
video_master.class.php:	<source src="'.$this->vidname.'" type="video/mp4" /><!-- Safari / iOS video    -->
video_master.class.php:	$this->flv();//add backup
video_master.class.php:     $pic_display=($this->autostart)?'':'so.addVariable("image","'.$this->image.'");';
video_master.class.php:     $autostart=(!empty($this->autostart))?'so.addVariable("autostart","true");' :'so.addVariable("autostart","false");';
video_master.class.php:  var so = new SWFObject("'.$this->viddir.'player.swf","ply","'.$this->width.'","'.$this->height.'","9","#000000");
video_master.class.php:  so.addVariable("file","'.$this->vidname.'"); 
video_master.class.php:	data="'.$this->vidname.'"
video_master.class.php:	width="'.$this->width.'" height="'.$this->height.'">
video_master.class.php:	<param name="movie" value="'.$this->vidname.'" >
video_master.class.php:     $autostart=(!empty($this->autostart))?'autoplay="true"':'autoplay="false"';
video_master.class.php:     $autostart2=(!empty($this->autostart))?"'autoplay', 'true',":"'autoplay', 'false',";
video_master.class.php:QT_WritePoster_XHTML('Play Video', '$this->image',
video_master.class.php:'$this->vidname',
video_master.class.php:'$this->width', '$this->height', '',
video_master.class.php:<object width="$this->width" height="$this->height" classid="clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B" codebase="http://www.apple.com/qtactivex/qtplugin.cab">
video_master.class.php:<param name="src" value="$this->image" >
video_master.class.php:<param name="href" value="$this->vidname" >
video_master.class.php:<embed width="$this->width" height="$this->height" type="video/quicktime" pluginspage="http://www.apple.com/quicktime/download/"
video_master.class.php:src="'.$this->image.'"
video_master.class.php:href=""$this->vidname"
write.class.php:		switch ($this->code) {
write.class.php:		$this->message = "File: $file Mode: $mode";
write.class.php:			throw new FileException($this->message, 0);
write.class.php:			throw new FileException ($this->message, 1);
write.class.php:			throw new FileException ($this->message, 2);
write.class.php:			throw new FileException ($this->message, 3);
write.class.php:			throw new FileException($this->message, 4);
write.class.php:		$this->fp = fopen($file, $mode);
write.class.php:		if (!fwrite($this->fp, $data)) {
write.class.php:			throw new FileException($this->message . " Data: $data", 5);
write.class.php:		if (!fclose($this->fp)) {
write.class.php:			throw new FileException($this->message, 6);
write.class.php:		$this->fp = null;
WriteToFile.class.php:		$this->message = "File: $file Mode: $mode";
WriteToFile.class.php:			throw new FileException($this->message, 0);
WriteToFile.class.php:			throw new FileException ($this->message, 1);
WriteToFile.class.php:			throw new FileException ($this->message, 2);
WriteToFile.class.php:		//	throw new FileException ($this->message, 3);
WriteToFile.class.php:			throw new FileException($this->message, 4);
WriteToFile.class.php:		$this->fp = fopen($file, $mode);
WriteToFile.class.php:		if (!fwrite($this->fp, $data)) {
WriteToFile.class.php:			throw new FileException($this->message . " Data: $data", 5);
WriteToFile.class.php:		if (!fclose($this->fp)) {
WriteToFile.class.php:			throw new FileException($this->message, 6);
WriteToFile.class.php:		$this->fp = null;
zipuploader.class.php:	       $instructions="Maximum filesize of  $this->maxfilesize/1000000 Mb has been exceeded.";
zipuploader.class.php:	      list ($uploadverification,$fiupl)=upload::upload_file($this->mime,$this->exxt,$instructions,Cfg_loc::Root_dir.Cfg::Upload_dir);
zipuploader.class.php:      $instructions='Only a filetype '.$this->exxt.' will work.  You can easily convert any filetype to a zip file';
zipuploader.class.php:	  $max_file_size=	$this->maxfilesize;
