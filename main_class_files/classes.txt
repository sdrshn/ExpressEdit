
here are 4 classes replacing your Domain class
  Sys
  Cfg.ekarasa
  Cfg.karma    and
  Database

<?php # Sys
 define('WEBDOCS',$_SERVER['DOCUMENT_ROOT']);
 define('SCRIPT',$_SERVER['SCRIPT_FILENAME']);

 $restorePath = (strpos(Web::Script, 'gallery')) ? 'gallery' : 'website';
 define('RESTOREPATH',$restorePath);
 define('CFG',WEBDOCS.'/Cfg.php');
 
 unset('WEBDOCS');
 unset('SCRIPT');
 unset('RESTOREPATH');
 unset('CFG');

 class Sys {
	const Docs = WEBDOC;
	const Script = SCRIPT;
	const Admin = 'sudrshn@gmail.com';
	const RestorePath = RESTOREPATH;
	const Cfg = CFG;

 private __construct() {} # class is not an object; for Names only
	} # sys.class
?>

<?php # Cfg.ekarasa
# put this class in a file named Cfg.php
# in ekarasa's Web::Docs
class Cfg ( # ekarasa
	const Domain  = 'ekarasa';
	const Owner   = 'ekarasa';
	const Gallery = 'gallery'); // prime gallery
	const Website = 'website'); //master website
	const EditDir = 'editpages'); //refers to prime edit directory used so far in editcaptions
	const RestorePath = Sys::RestorePath;
	const User = 'ekarasac_sdrshn';

 private __construct() {} # class is not an object; for Names only
	) # cfg.ekarasa
?>

<?php # Cfg.karma
# put this class in a file named Cfg.php
# in karma's Web::Docs
class Cfg ( # karma
	const Domain  = 'karma';
	const Owner   = 'karma';
	const Gallery = 'gallery'; // prime gallery
	const Website = 'website'; //master website
	const RestorePath = Sys::RestorePath;
	if (strpos(Web::Script, 'gallery')){
		const RestorePath = 'gallery';
		}
	else {
		const RestorePath = 'website';
		}
	const User = "ekarasac_karma";
	const Pass = "hariomtatsat";

 private __construct() {} # class is not an object; for Names only
	) # cfg.karma
?>

<?php # Database
 require_once(Web::Docs.'Cfg.php');

class Database {
	const Host = "localhost";

	private static $instance; //store instance

	private $user = Cfg::User;
	private $pass = Cfg::Pass;
	private $Name = false;
	private $connection = null;

 protected __construct() {
	} # database.new()

 public static instance() {
	if (!self::$instance) {
		self::$instance = new Domain();
		}
	return self::$instance;
	} # database.instance()

 public function connect($dbname='false') {
	if (TEST) echo 'made it to database.connect';
	if (TEST) echo Sys::Host . ' is the dbhost';
	$this->connection = dbc_connect(Sys::Host,Cfg::User,Cfg::Pass,$dbname);
	return $this->connection;
	} # database.connect()
 } # database.class
?>
